

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Sep 01 15:05:43 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1829
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 9 "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 9 "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
    51  8007  DFE4               	dw 0xFFFC & 0xFFE7 & 0xFFFF & 0xFFFF & 0xDFFF ;#
    52                           	FNCALL	_main,_calibrateGyros
    53                           	FNCALL	_main,_readAndSet
    54                           	FNCALL	_main,_calculate
    55                           	FNCALL	_main,_readGyroPitch
    56                           	FNCALL	_main,_readGyroRoll
    57                           	FNCALL	_main,_readGyroYaw
    58                           	FNCALL	_readAndSet,_readChannel1
    59                           	FNCALL	_readAndSet,_setESC1
    60                           	FNCALL	_readAndSet,_setESC2
    61                           	FNCALL	_readAndSet,_setESC3
    62                           	FNCALL	_readAndSet,_setESC4
    63                           	FNCALL	_readAndSet,_readChannel2
    64                           	FNCALL	_readAndSet,_readChannel3
    65                           	FNCALL	_readAndSet,_readChannel4
    66                           	FNCALL	_calibrateGyros,_readGyroPitch
    67                           	FNCALL	_calibrateGyros,_readGyroRoll
    68                           	FNCALL	_calibrateGyros,_readGyroYaw
    69                           	FNCALL	_readChannel4,___awdiv
    70                           	FNCALL	_readChannel3,___awdiv
    71                           	FNCALL	_readChannel2,___awdiv
    72                           	FNCALL	_readChannel1,___awdiv
    73                           	FNCALL	_readGyroYaw,___awdiv
    74                           	FNCALL	_readGyroRoll,___awdiv
    75                           	FNCALL	_readGyroPitch,___awdiv
    76                           	FNCALL	_calculate,_filter
    77                           	FNCALL	_calculate,___awdiv
    78                           	FNROOT	_main
    79                           	global	_motor1
    80                           	global	_motor2
    81                           	global	_motor3
    82                           	global	_motor4
    83                           psect	idataBANK0,class=CODE,space=0,delta=2
    84                           global __pidataBANK0
    85  0083                     __pidataBANK0:
    86                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
    87                           	line	76
    88                           
    89                           ;initializer for _motor1
    90  0083  3401               	retlw	01h
    91  0084  3400               	retlw	0
    92                           
    93                           	line	77
    94                           
    95                           ;initializer for _motor2
    96  0085  3401               	retlw	01h
    97  0086  3400               	retlw	0
    98                           
    99                           	line	78
   100                           
   101                           ;initializer for _motor3
   102  0087  3401               	retlw	01h
   103  0088  3400               	retlw	0
   104                           
   105                           	line	79
   106                           
   107                           ;initializer for _motor4
   108  0089  3401               	retlw	01h
   109  008A  3400               	retlw	0
   110                           
   111                           	global	_fl_exit
   112                           	global	_gyroReadNumber
   113                           	global	_pitch
   114                           	global	_pitchAux
   115                           	global	_roll
   116                           	global	_rollAux
   117                           	global	_yaw
   118                           	global	_yawAux
   119                           	global	_zeroGyroPitch
   120                           	global	_zeroGyroRoll
   121                           	global	_zeroGyroYaw
   122                           	global	_inputControl1
   123                           	global	_inputControl2
   124                           	global	_inputControl3
   125                           	global	_inputControl4
   126                           	global	_TMR1
   127  0016                     _TMR1	set	22
   128                           	global	_INTCON
   129  000B                     _INTCON	set	11
   130                           	global	_PR2
   131  001B                     _PR2	set	27
   132                           	global	_T1CON
   133  0018                     _T1CON	set	24
   134                           	global	_T2CON
   135  001C                     _T2CON	set	28
   136                           	global	_TMR2
   137  001A                     _TMR2	set	26
   138                           	global	_CARRY
   139  0018                     _CARRY	set	24
   140                           	global	_GIE
   141  005F                     _GIE	set	95
   142                           	global	_RB4
   143  006C                     _RB4	set	108
   144                           	global	_RB5
   145  006D                     _RB5	set	109
   146                           	global	_RB6
   147  006E                     _RB6	set	110
   148                           	global	_RB7
   149  006F                     _RB7	set	111
   150                           	global	_RC1
   151  0071                     _RC1	set	113
   152                           	global	_RC2
   153  0072                     _RC2	set	114
   154                           	global	_RC3
   155  0073                     _RC3	set	115
   156                           	global	_RC4
   157  0074                     _RC4	set	116
   158                           	global	_RC5
   159  0075                     _RC5	set	117
   160                           	global	_TMR1ON
   161  00C0                     _TMR1ON	set	192
   162                           	global	_TMR2IF
   163  0089                     _TMR2IF	set	137
   164                           	global	_TMR2ON
   165  00E2                     _TMR2ON	set	226
   166                           	global	_ADCON0
   167  009D                     _ADCON0	set	157
   168                           	global	_ADCON1
   169  009E                     _ADCON1	set	158
   170                           	global	_ADRESH
   171  009C                     _ADRESH	set	156
   172                           	global	_ADRESL
   173  009B                     _ADRESL	set	155
   174                           	global	_OPTION_REG
   175  0095                     _OPTION_REG	set	149
   176                           	global	_OSCCON
   177  0099                     _OSCCON	set	153
   178                           	global	_TRISA
   179  008C                     _TRISA	set	140
   180                           	global	_TRISB
   181  008D                     _TRISB	set	141
   182                           	global	_TRISC
   183  008E                     _TRISC	set	142
   184                           	global	_ADON
   185  04E8                     _ADON	set	1256
   186                           	global	_GO_nDONE
   187  04E9                     _GO_nDONE	set	1257
   188                           	global	_HFIOFR
   189  04D4                     _HFIOFR	set	1236
   190                           	global	_TMR2IE
   191  0489                     _TMR2IE	set	1161
   192                           	global	_FVRCON
   193  0117                     _FVRCON	set	279
   194                           	global	_EEADR
   195  0191                     _EEADR	set	401
   196                           	global	_ANSELA
   197  018C                     _ANSELA	set	396
   198                           	global	_ANSELB
   199  018D                     _ANSELB	set	397
   200                           	global	_ANSELC
   201  018E                     _ANSELC	set	398
   202                           	global	_EECON1
   203  0195                     _EECON1	set	405
   204                           	global	_EECON2
   205  0196                     _EECON2	set	406
   206                           	global	_EEDATA
   207  0193                     _EEDATA	set	403
   208                           	global	_RD
   209  0CA8                     _RD	set	3240
   210                           	global	_WR
   211  0CA9                     _WR	set	3241
   212                           	global	_WREN
   213  0CAA                     _WREN	set	3242
   214                           	global	_IOCBN
   215  0395                     _IOCBN	set	917
   216                           	global	_IOCBP
   217  0394                     _IOCBP	set	916
   218                           	file	"C:\Users\Eduardo\AppData\Local\Temp\shs."
   219                           	line	#
   220                           psect cinit,class=CODE,delta=2
   221                           global start_initialization
   222  008B                     start_initialization:
   223                           
   224                           psect	bssBANK0,class=BANK0,space=1
   225                           global __pbssBANK0
   226  0020                     __pbssBANK0:
   227  0020                     _fl_exit:
   228  0020                            ds      2
   229                           
   230  0022                     _gyroReadNumber:
   231  0022                            ds      2
   232                           
   233  0024                     _pitch:
   234  0024                            ds      2
   235                           
   236  0026                     _pitchAux:
   237  0026                            ds      2
   238                           
   239  0028                     _roll:
   240  0028                            ds      2
   241                           
   242  002A                     _rollAux:
   243  002A                            ds      2
   244                           
   245  002C                     _yaw:
   246  002C                            ds      2
   247                           
   248  002E                     _yawAux:
   249  002E                            ds      2
   250                           
   251  0030                     _zeroGyroPitch:
   252  0030                            ds      2
   253                           
   254  0032                     _zeroGyroRoll:
   255  0032                            ds      2
   256                           
   257  0034                     _zeroGyroYaw:
   258  0034                            ds      2
   259                           
   260  0036                     _inputControl1:
   261  0036                            ds      1
   262                           
   263  0037                     _inputControl2:
   264  0037                            ds      1
   265                           
   266  0038                     _inputControl3:
   267  0038                            ds      1
   268                           
   269  0039                     _inputControl4:
   270  0039                            ds      1
   271                           
   272                           psect	dataBANK0,class=BANK0,space=1
   273                           global __pdataBANK0
   274  003A                     __pdataBANK0:
   275                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
   276                           	line	76
   277  003A                     _motor1:
   278  003A                            ds      2
   279                           
   280                           psect	dataBANK0
   281                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
   282                           	line	77
   283  003C                     _motor2:
   284  003C                            ds      2
   285                           
   286                           psect	dataBANK0
   287                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
   288                           	line	78
   289  003E                     _motor3:
   290  003E                            ds      2
   291                           
   292                           psect	dataBANK0
   293                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
   294                           	line	79
   295  0040                     _motor4:
   296  0040                            ds      2
   297                           
   298                           psect clrtext,class=CODE,delta=2
   299                           global clear_ram
   300                           ;	Called with FSR0 containing the base address, and
   301                           ;	WREG with the size to clear
   302  007D                     clear_ram:
   303  007D  0064               	clrwdt			;clear the watchdog before getting into this loop
   304  007E                     clrloop:
   305  007E  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   306  007F  3101               	addfsr	0,1
   307  0080  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   308  0081  287E               	goto clrloop	;have we reached the end yet?
   309  0082  3400               	retlw	0		;all done for this memory range, return
   310                           ; Clear objects allocated to BANK0
   311                           psect cinit,class=CODE,delta=2
   312                           	global __pbssBANK0
   313  008B  3020               	movlw	low(__pbssBANK0)
   314  008C  0084               	movwf	fsr0l
   315  008D  3000               	movlw	high(__pbssBANK0)
   316  008E  0085               	movwf	fsr0h
   317  008F  301A               	movlw	01Ah
   318  0090  3180  207D  3180   	fcall	clear_ram
   319                           psect inittext,class=CODE,delta=2
   320                           global init_ram,btemp
   321  0077                     init_ram:
   322  0077  00FE               	movwf btemp,f
   323  0078                     initloop:
   324  0078  0012               	moviw fsr0++
   325  0079  001E               	movwi fsr1++
   326  007A  0BFE               	decfsz btemp
   327  007B  2878               	goto initloop
   328  007C  3400               	retlw 0
   329                           ; Initialize objects allocated to BANK0
   330                           	global __pidataBANK0,__pdataBANK0
   331                           psect cinit,class=CODE,delta=2
   332  0093  3083               	movlw low(__pidataBANK0)
   333  0094  0084               	movwf fsr0l
   334  0095  3080               	movlw high(__pidataBANK0)|80h
   335  0096  0085               	movwf fsr0h
   336  0097  303A               	movlw low(__pdataBANK0)
   337  0098  0086               	movwf fsr1l
   338  0099  3000               	movlw high(__pdataBANK0)
   339  009A  0087               	movwf fsr1h
   340  009B  3008               	movlw 08h
   341  009C  3180  2077  3180   	fcall init_ram
   342                           psect cinit,class=CODE,delta=2
   343                           global end_of_initialization
   344                           
   345                           ;End of C runtime variable initialization code
   346                           
   347  009F                     end_of_initialization:
   348  009F  0020               movlb 0
   349  00A0  3184  2CF0         ljmp _main	;jump to C main() function
   350                           psect	cstackCOMMON,class=COMMON,space=1
   351                           global __pcstackCOMMON
   352  0070                     __pcstackCOMMON:
   353                           	global	?_calibrateGyros
   354  0070                     ?_calibrateGyros:	; 0 bytes @ 0x0
   355                           	global	?_readAndSet
   356  0070                     ?_readAndSet:	; 0 bytes @ 0x0
   357                           	global	?_calculate
   358  0070                     ?_calculate:	; 0 bytes @ 0x0
   359                           	global	?_main
   360  0070                     ?_main:	; 0 bytes @ 0x0
   361                           	global	?_setESC1
   362  0070                     ?_setESC1:	; 0 bytes @ 0x0
   363                           	global	??_setESC1
   364  0070                     ??_setESC1:	; 0 bytes @ 0x0
   365                           	global	?_setESC2
   366  0070                     ?_setESC2:	; 0 bytes @ 0x0
   367                           	global	??_setESC2
   368  0070                     ??_setESC2:	; 0 bytes @ 0x0
   369                           	global	?_setESC3
   370  0070                     ?_setESC3:	; 0 bytes @ 0x0
   371                           	global	??_setESC3
   372  0070                     ??_setESC3:	; 0 bytes @ 0x0
   373                           	global	?_setESC4
   374  0070                     ?_setESC4:	; 0 bytes @ 0x0
   375                           	global	??_setESC4
   376  0070                     ??_setESC4:	; 0 bytes @ 0x0
   377                           	global	?_readChannel1
   378  0070                     ?_readChannel1:	; 1 bytes @ 0x0
   379                           	global	?_readChannel2
   380  0070                     ?_readChannel2:	; 1 bytes @ 0x0
   381                           	global	?_readChannel3
   382  0070                     ?_readChannel3:	; 1 bytes @ 0x0
   383                           	global	?_readChannel4
   384  0070                     ?_readChannel4:	; 1 bytes @ 0x0
   385                           	global	?_filter
   386  0070                     ?_filter:	; 1 bytes @ 0x0
   387                           	global	?___awdiv
   388  0070                     ?___awdiv:	; 2 bytes @ 0x0
   389                           	global	filter@duration
   390  0070                     filter@duration:	; 2 bytes @ 0x0
   391                           	global	___awdiv@divisor
   392  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   393  0070                     	ds	2
   394                           	global	??_filter
   395  0072                     ??_filter:	; 0 bytes @ 0x2
   396                           	global	setESC1@duration
   397  0072                     setESC1@duration:	; 1 bytes @ 0x2
   398                           	global	setESC2@duration
   399  0072                     setESC2@duration:	; 1 bytes @ 0x2
   400                           	global	setESC3@duration
   401  0072                     setESC3@duration:	; 1 bytes @ 0x2
   402                           	global	setESC4@duration
   403  0072                     setESC4@duration:	; 1 bytes @ 0x2
   404                           	global	___awdiv@dividend
   405  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   406  0072                     	ds	2
   407                           	global	??___awdiv
   408  0074                     ??___awdiv:	; 0 bytes @ 0x4
   409  0074                     	ds	1
   410                           	global	___awdiv@counter
   411  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   412  0075                     	ds	1
   413                           	global	___awdiv@sign
   414  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   415  0076                     	ds	1
   416                           	global	___awdiv@quotient
   417  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   418  0077                     	ds	2
   419                           	global	??_calculate
   420  0079                     ??_calculate:	; 0 bytes @ 0x9
   421                           	global	??_readChannel1
   422  0079                     ??_readChannel1:	; 0 bytes @ 0x9
   423                           	global	??_readChannel2
   424  0079                     ??_readChannel2:	; 0 bytes @ 0x9
   425                           	global	??_readChannel3
   426  0079                     ??_readChannel3:	; 0 bytes @ 0x9
   427                           	global	??_readChannel4
   428  0079                     ??_readChannel4:	; 0 bytes @ 0x9
   429                           	global	?_readGyroPitch
   430  0079                     ?_readGyroPitch:	; 2 bytes @ 0x9
   431                           	global	?_readGyroRoll
   432  0079                     ?_readGyroRoll:	; 2 bytes @ 0x9
   433                           	global	?_readGyroYaw
   434  0079                     ?_readGyroYaw:	; 2 bytes @ 0x9
   435                           	global	readChannel1@duration
   436  0079                     readChannel1@duration:	; 2 bytes @ 0x9
   437                           	global	readChannel2@duration
   438  0079                     readChannel2@duration:	; 2 bytes @ 0x9
   439                           	global	readChannel3@duration
   440  0079                     readChannel3@duration:	; 2 bytes @ 0x9
   441                           	global	readChannel4@duration
   442  0079                     readChannel4@duration:	; 2 bytes @ 0x9
   443                           	global	readGyroPitch@calibration
   444  0079                     readGyroPitch@calibration:	; 2 bytes @ 0x9
   445                           	global	readGyroRoll@calibration
   446  0079                     readGyroRoll@calibration:	; 2 bytes @ 0x9
   447                           	global	readGyroYaw@calibration
   448  0079                     readGyroYaw@calibration:	; 2 bytes @ 0x9
   449  0079                     	ds	2
   450                           	global	??_readAndSet
   451  007B                     ??_readAndSet:	; 0 bytes @ 0xB
   452                           	global	??_readGyroPitch
   453  007B                     ??_readGyroPitch:	; 0 bytes @ 0xB
   454                           	global	??_readGyroRoll
   455  007B                     ??_readGyroRoll:	; 0 bytes @ 0xB
   456                           	global	??_readGyroYaw
   457  007B                     ??_readGyroYaw:	; 0 bytes @ 0xB
   458  007B                     	ds	2
   459                           	global	??_main
   460  007D                     ??_main:	; 0 bytes @ 0xD
   461                           psect	cstackBANK0,class=BANK0,space=1
   462                           global __pcstackBANK0
   463  0042                     __pcstackBANK0:
   464                           	global	readGyroPitch@test
   465  0042                     readGyroPitch@test:	; 2 bytes @ 0x0
   466                           	global	readGyroRoll@voltage
   467  0042                     readGyroRoll@voltage:	; 2 bytes @ 0x0
   468                           	global	readGyroYaw@voltage
   469  0042                     readGyroYaw@voltage:	; 2 bytes @ 0x0
   470                           	global	calculate@pitchAux
   471  0042                     calculate@pitchAux:	; 2 bytes @ 0x0
   472  0042                     	ds	2
   473                           	global	readGyroPitch@voltage
   474  0044                     readGyroPitch@voltage:	; 2 bytes @ 0x2
   475                           	global	calculate@rollAux
   476  0044                     calculate@rollAux:	; 2 bytes @ 0x2
   477  0044                     	ds	2
   478                           	global	??_calibrateGyros
   479  0046                     ??_calibrateGyros:	; 0 bytes @ 0x4
   480                           	global	calculate@yawAux
   481  0046                     calculate@yawAux:	; 2 bytes @ 0x4
   482  0046                     	ds	3
   483 ;;Data sizes: Strings 0, constant 0, data 8, bss 26, persistent 0 stack 0
   484 ;;Auto spaces:   Size  Autos    Used
   485 ;; COMMON          14     13      13
   486 ;; BANK0           80      7      41
   487 ;; BANK1           80      0       0
   488 ;; BANK2           80      0       0
   489 ;; BANK3           80      0       0
   490 ;; BANK4           80      0       0
   491 ;; BANK5           80      0       0
   492 ;; BANK6           80      0       0
   493 ;; BANK7           80      0       0
   494 ;; BANK8           80      0       0
   495 ;; BANK9           80      0       0
   496 ;; BANK10          80      0       0
   497 ;; BANK11          80      0       0
   498 ;; BANK12          48      0       0
   499                           
   500 ;;
   501 ;; Pointer list with targets:
   502                           
   503 ;; ?___awdiv	int  size(1) Largest target is 0
   504 ;;
   505 ;; ?_readGyroYaw	int  size(1) Largest target is 0
   506 ;;
   507 ;; ?_readGyroRoll	int  size(1) Largest target is 0
   508 ;;
   509 ;; ?_readGyroPitch	int  size(1) Largest target is 0
   510 ;;
   511                           
   512                           
   513 ;;
   514 ;; Critical Paths under _main in COMMON
   515 ;;
   516 ;;   _main->_readGyroPitch
   517 ;;   _main->_readGyroRoll
   518 ;;   _main->_readGyroYaw
   519 ;;   _readAndSet->_readChannel1
   520 ;;   _readAndSet->_readChannel2
   521 ;;   _readAndSet->_readChannel3
   522 ;;   _readAndSet->_readChannel4
   523 ;;   _calibrateGyros->_readGyroPitch
   524 ;;   _calibrateGyros->_readGyroRoll
   525 ;;   _calibrateGyros->_readGyroYaw
   526 ;;   _readChannel4->___awdiv
   527 ;;   _readChannel3->___awdiv
   528 ;;   _readChannel2->___awdiv
   529 ;;   _readChannel1->___awdiv
   530 ;;   _readGyroYaw->___awdiv
   531 ;;   _readGyroRoll->___awdiv
   532 ;;   _readGyroPitch->___awdiv
   533 ;;   _calculate->___awdiv
   534 ;;
   535 ;; Critical Paths under _main in BANK0
   536 ;;
   537 ;;   _main->_calibrateGyros
   538 ;;   _calibrateGyros->_readGyroPitch
   539 ;;
   540 ;; Critical Paths under _main in BANK1
   541 ;;
   542 ;;   None.
   543 ;;
   544 ;; Critical Paths under _main in BANK2
   545 ;;
   546 ;;   None.
   547 ;;
   548 ;; Critical Paths under _main in BANK3
   549 ;;
   550 ;;   None.
   551 ;;
   552 ;; Critical Paths under _main in BANK4
   553 ;;
   554 ;;   None.
   555 ;;
   556 ;; Critical Paths under _main in BANK5
   557 ;;
   558 ;;   None.
   559 ;;
   560 ;; Critical Paths under _main in BANK6
   561 ;;
   562 ;;   None.
   563 ;;
   564 ;; Critical Paths under _main in BANK7
   565 ;;
   566 ;;   None.
   567 ;;
   568 ;; Critical Paths under _main in BANK8
   569 ;;
   570 ;;   None.
   571 ;;
   572 ;; Critical Paths under _main in BANK9
   573 ;;
   574 ;;   None.
   575 ;;
   576 ;; Critical Paths under _main in BANK10
   577 ;;
   578 ;;   None.
   579 ;;
   580 ;; Critical Paths under _main in BANK11
   581 ;;
   582 ;;   None.
   583 ;;
   584 ;; Critical Paths under _main in BANK12
   585 ;;
   586 ;;   None.
   587                           
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   590 ;;
   591                           
   592 ;;
   593 ;;Call Graph Tables:
   594 ;;
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (0) _main                                                 0     0      0    4642
   599 ;;                     _calibrateGyros
   600 ;;                         _readAndSet
   601 ;;                          _calculate
   602 ;;                      _readGyroPitch
   603 ;;                       _readGyroRoll
   604 ;;                        _readGyroYaw
   605 ;; ---------------------------------------------------------------------------------
   606 ;; (1) _readAndSet                                           1     1      0    1656
   607 ;;                                             11 COMMON     1     1      0
   608 ;;                       _readChannel1
   609 ;;                            _setESC1
   610 ;;                            _setESC2
   611 ;;                            _setESC3
   612 ;;                            _setESC4
   613 ;;                       _readChannel2
   614 ;;                       _readChannel3
   615 ;;                       _readChannel4
   616 ;; ---------------------------------------------------------------------------------
   617 ;; (1) _calibrateGyros                                       3     3      0    1108
   618 ;;                                              4 BANK0      3     3      0
   619 ;;                      _readGyroPitch
   620 ;;                       _readGyroRoll
   621 ;;                        _readGyroYaw
   622 ;; ---------------------------------------------------------------------------------
   623 ;; (2) _setESC4                                              3     3      0      22
   624 ;;                                              0 COMMON     3     3      0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _setESC3                                              3     3      0      22
   627 ;;                                              0 COMMON     3     3      0
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (2) _setESC2                                              3     3      0      22
   630 ;;                                              0 COMMON     3     3      0
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (2) _setESC1                                              3     3      0      22
   633 ;;                                              0 COMMON     3     3      0
   634 ;; ---------------------------------------------------------------------------------
   635 ;; (2) _readChannel4                                         2     2      0     392
   636 ;;                                              9 COMMON     2     2      0
   637 ;;                            ___awdiv
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (2) _readChannel3                                         2     2      0     392
   640 ;;                                              9 COMMON     2     2      0
   641 ;;                            ___awdiv
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (2) _readChannel2                                         2     2      0     392
   644 ;;                                              9 COMMON     2     2      0
   645 ;;                            ___awdiv
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (2) _readChannel1                                         2     2      0     392
   648 ;;                                              9 COMMON     2     2      0
   649 ;;                            ___awdiv
   650 ;; ---------------------------------------------------------------------------------
   651 ;; (1) _readGyroYaw                                          6     4      2     369
   652 ;;                                              9 COMMON     4     2      2
   653 ;;                                              0 BANK0      2     2      0
   654 ;;                            ___awdiv
   655 ;; ---------------------------------------------------------------------------------
   656 ;; (1) _readGyroRoll                                         6     4      2     369
   657 ;;                                              9 COMMON     4     2      2
   658 ;;                                              0 BANK0      2     2      0
   659 ;;                            ___awdiv
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (1) _readGyroPitch                                        8     6      2     370
   662 ;;                                              9 COMMON     4     2      2
   663 ;;                                              0 BANK0      4     4      0
   664 ;;                            ___awdiv
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (1) _calculate                                            9     9      0     770
   667 ;;                                              9 COMMON     3     3      0
   668 ;;                                              0 BANK0      6     6      0
   669 ;;                             _filter
   670 ;;                            ___awdiv
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (2) ___awdiv                                              9     5      4     300
   673 ;;                                              0 COMMON     9     5      4
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (2) _filter                                               2     0      2      68
   676 ;;                                              0 COMMON     2     0      2
   677 ;; ---------------------------------------------------------------------------------
   678 ;; Estimated maximum stack depth 2
   679 ;; ---------------------------------------------------------------------------------
   680                           
   681 ;; Call Graph Graphs:
   682                           
   683 ;; _main (ROOT)
   684 ;;   _calibrateGyros
   685 ;;     _readGyroPitch
   686 ;;       ___awdiv
   687 ;;     _readGyroRoll
   688 ;;       ___awdiv
   689 ;;     _readGyroYaw
   690 ;;       ___awdiv
   691 ;;   _readAndSet
   692 ;;     _readChannel1
   693 ;;       ___awdiv
   694 ;;     _setESC1
   695 ;;     _setESC2
   696 ;;     _setESC3
   697 ;;     _setESC4
   698 ;;     _readChannel2
   699 ;;       ___awdiv
   700 ;;     _readChannel3
   701 ;;       ___awdiv
   702 ;;     _readChannel4
   703 ;;       ___awdiv
   704 ;;   _calculate
   705 ;;     _filter
   706 ;;     ___awdiv
   707 ;;   _readGyroPitch
   708 ;;     ___awdiv
   709 ;;   _readGyroRoll
   710 ;;     ___awdiv
   711 ;;   _readGyroYaw
   712 ;;     ___awdiv
   713 ;;
   714                           
   715 ;; Address spaces:
   716                           
   717 ;;Name               Size   Autos  Total    Cost      Usage
   718 ;;BIGRAM             3F0      0       0       0        0.0%
   719 ;;EEDATA             100      0       0       0        0.0%
   720 ;;NULL                 0      0       0       0        0.0%
   721 ;;CODE                 0      0       0       0        0.0%
   722 ;;BITCOMMON            E      0       0       1        0.0%
   723 ;;BITSFR0              0      0       0       1        0.0%
   724 ;;SFR0                 0      0       0       1        0.0%
   725 ;;COMMON               E      D       D       2       92.9%
   726 ;;BITSFR1              0      0       0       2        0.0%
   727 ;;SFR1                 0      0       0       2        0.0%
   728 ;;BITSFR2              0      0       0       3        0.0%
   729 ;;SFR2                 0      0       0       3        0.0%
   730 ;;STACK                0      0       3       3        0.0%
   731 ;;BITBANK0            50      0       0       4        0.0%
   732 ;;BITSFR3              0      0       0       4        0.0%
   733 ;;SFR3                 0      0       0       4        0.0%
   734 ;;BANK0               50      7      29       5       51.3%
   735 ;;BITSFR4              0      0       0       5        0.0%
   736 ;;SFR4                 0      0       0       5        0.0%
   737 ;;BITBANK1            50      0       0       6        0.0%
   738 ;;BITSFR5              0      0       0       6        0.0%
   739 ;;SFR5                 0      0       0       6        0.0%
   740 ;;BANK1               50      0       0       7        0.0%
   741 ;;BITSFR6              0      0       0       7        0.0%
   742 ;;SFR6                 0      0       0       7        0.0%
   743 ;;BITBANK2            50      0       0       8        0.0%
   744 ;;BITSFR7              0      0       0       8        0.0%
   745 ;;SFR7                 0      0       0       8        0.0%
   746 ;;BANK2               50      0       0       9        0.0%
   747 ;;BITSFR8              0      0       0       9        0.0%
   748 ;;SFR8                 0      0       0       9        0.0%
   749 ;;BITBANK3            50      0       0      10        0.0%
   750 ;;BITSFR9              0      0       0      10        0.0%
   751 ;;SFR9                 0      0       0      10        0.0%
   752 ;;BANK3               50      0       0      11        0.0%
   753 ;;BITSFR10             0      0       0      11        0.0%
   754 ;;SFR10                0      0       0      11        0.0%
   755 ;;BITBANK4            50      0       0      12        0.0%
   756 ;;BITSFR11             0      0       0      12        0.0%
   757 ;;SFR11                0      0       0      12        0.0%
   758 ;;BANK4               50      0       0      13        0.0%
   759 ;;BITSFR12             0      0       0      13        0.0%
   760 ;;SFR12                0      0       0      13        0.0%
   761 ;;BITBANK5            50      0       0      14        0.0%
   762 ;;BITSFR13             0      0       0      14        0.0%
   763 ;;SFR13                0      0       0      14        0.0%
   764 ;;BANK5               50      0       0      15        0.0%
   765 ;;BITSFR14             0      0       0      15        0.0%
   766 ;;SFR14                0      0       0      15        0.0%
   767 ;;BITBANK6            50      0       0      16        0.0%
   768 ;;BITSFR15             0      0       0      16        0.0%
   769 ;;SFR15                0      0       0      16        0.0%
   770 ;;BANK6               50      0       0      17        0.0%
   771 ;;BITSFR16             0      0       0      17        0.0%
   772 ;;SFR16                0      0       0      17        0.0%
   773 ;;BITBANK7            50      0       0      18        0.0%
   774 ;;BITSFR17             0      0       0      18        0.0%
   775 ;;SFR17                0      0       0      18        0.0%
   776 ;;BANK7               50      0       0      19        0.0%
   777 ;;BITSFR18             0      0       0      19        0.0%
   778 ;;SFR18                0      0       0      19        0.0%
   779 ;;BITSFR19             0      0       0      20        0.0%
   780 ;;SFR19                0      0       0      20        0.0%
   781 ;;ABS                  0      0      36      20        0.0%
   782 ;;BITBANK8            50      0       0      21        0.0%
   783 ;;BITSFR20             0      0       0      21        0.0%
   784 ;;SFR20                0      0       0      21        0.0%
   785 ;;BANK8               50      0       0      22        0.0%
   786 ;;BITSFR21             0      0       0      22        0.0%
   787 ;;SFR21                0      0       0      22        0.0%
   788 ;;BITBANK9            50      0       0      23        0.0%
   789 ;;BITSFR22             0      0       0      23        0.0%
   790 ;;SFR22                0      0       0      23        0.0%
   791 ;;BANK9               50      0       0      24        0.0%
   792 ;;BITSFR23             0      0       0      24        0.0%
   793 ;;SFR23                0      0       0      24        0.0%
   794 ;;BITBANK10           50      0       0      25        0.0%
   795 ;;BITSFR24             0      0       0      25        0.0%
   796 ;;SFR24                0      0       0      25        0.0%
   797 ;;BANK10              50      0       0      26        0.0%
   798 ;;BITSFR25             0      0       0      26        0.0%
   799 ;;SFR25                0      0       0      26        0.0%
   800 ;;BITBANK11           50      0       0      27        0.0%
   801 ;;BITSFR26             0      0       0      27        0.0%
   802 ;;SFR26                0      0       0      27        0.0%
   803 ;;BANK11              50      0       0      28        0.0%
   804 ;;BITSFR27             0      0       0      28        0.0%
   805 ;;SFR27                0      0       0      28        0.0%
   806 ;;BITBANK12           30      0       0      29        0.0%
   807 ;;BITSFR28             0      0       0      29        0.0%
   808 ;;SFR28                0      0       0      29        0.0%
   809 ;;BANK12              30      0       0      30        0.0%
   810 ;;BITSFR29             0      0       0      30        0.0%
   811 ;;SFR29                0      0       0      30        0.0%
   812 ;;BITSFR30             0      0       0      31        0.0%
   813 ;;SFR30                0      0       0      31        0.0%
   814 ;;DATA                 0      0      39      31        0.0%
   815 ;;BITSFR31             0      0       0      32        0.0%
   816 ;;SFR31                0      0       0      32        0.0%
   817                           
   818                           	global	_main
   819                           psect	maintext,global,class=CODE,delta=2
   820                           global __pmaintext
   821  04F0                     __pmaintext:
   822                           
   823 ;; *************** function _main *****************
   824 ;; Defined at:
   825 ;;		line 90 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 17F/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels required when called:    3
   845 ;; This function calls:
   846 ;;		_calibrateGyros
   847 ;;		_readAndSet
   848 ;;		_calculate
   849 ;;		_readGyroPitch
   850 ;;		_readGyroRoll
   851 ;;		_readGyroYaw
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           psect	maintext
   857                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
   858                           	line	90
   859                           	global	__size_of_main
   860  007F                     	__size_of_main	equ	__end_of_main-_main
   861                           	
   862  04F0                     _main:	
   863                           	opt	stack 13
   864                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   865                           	line	93
   866                           	
   867  04F0                     l5408:	
   868                           ;main.c: 93: OSCCON = 0b01111111;
   869  04F0  307F               	movlw	(07Fh)
   870  04F1  0021               	movlb 1	; select bank1
   871  04F2  0099               	movwf	(153)^080h	;volatile
   872                           	line	95
   873                           ;main.c: 95: TRISB = 0b11110000;
   874  04F3  30F0               	movlw	(0F0h)
   875  04F4  008D               	movwf	(141)^080h	;volatile
   876                           	line	96
   877                           	
   878  04F5                     l5410:	
   879                           ;main.c: 96: ANSELB = 0b00000000;
   880  04F5  0023               	movlb 3	; select bank3
   881  04F6  018D               	clrf	(397)^0180h	;volatile
   882                           	line	97
   883                           	
   884  04F7                     l5412:	
   885                           ;main.c: 97: TRISC = 0b00000000;
   886  04F7  0021               	movlb 1	; select bank1
   887  04F8  018E               	clrf	(142)^080h	;volatile
   888                           	line	100
   889                           ;main.c: 100: TRISA = 0b00010100;
   890  04F9  3014               	movlw	(014h)
   891  04FA  008C               	movwf	(140)^080h	;volatile
   892                           	line	101
   893                           ;main.c: 101: ANSELA = 0b00010100;
   894  04FB  3014               	movlw	(014h)
   895  04FC  0023               	movlb 3	; select bank3
   896  04FD  008C               	movwf	(396)^0180h	;volatile
   897                           	line	104
   898                           ;main.c: 104: TRISC = 0b10000000;
   899  04FE  3080               	movlw	(080h)
   900  04FF  0021               	movlb 1	; select bank1
   901  0500  008E               	movwf	(142)^080h	;volatile
   902                           	line	105
   903                           ;main.c: 105: ANSELC = 0b10000000;
   904  0501  3080               	movlw	(080h)
   905  0502  0023               	movlb 3	; select bank3
   906  0503  008E               	movwf	(398)^0180h	;volatile
   907                           	line	107
   908                           	
   909  0504                     l5414:	
   910                           ;main.c: 107: ADON = 0b1;
   911  0504  0021               	movlb 1	; select bank1
   912  0505  141D               	bsf	(1256/8)^080h,(1256)&7
   913                           	line	108
   914                           ;main.c: 108: ADCON1 = 0b11010011;
   915  0506  30D3               	movlw	(0D3h)
   916  0507  009E               	movwf	(158)^080h	;volatile
   917                           	line	109
   918                           ;main.c: 109: FVRCON = 0b11000010;
   919  0508  30C2               	movlw	(0C2h)
   920  0509  0022               	movlb 2	; select bank2
   921  050A  0097               	movwf	(279)^0100h	;volatile
   922                           	line	113
   923                           ;main.c: 113: OPTION_REG = 0b11010000;
   924  050B  30D0               	movlw	(0D0h)
   925  050C  0021               	movlb 1	; select bank1
   926  050D  0095               	movwf	(149)^080h	;volatile
   927                           	line	116
   928                           ;main.c: 116: T1CON = 0b01000000;
   929  050E  3040               	movlw	(040h)
   930  050F  0020               	movlb 0	; select bank0
   931  0510  0098               	movwf	(24)	;volatile
   932                           	line	120
   933                           ;main.c: 120: T2CON = 0b00011001;
   934  0511  3019               	movlw	(019h)
   935  0512  009C               	movwf	(28)	;volatile
   936                           	line	121
   937                           	
   938  0513                     l5416:	
   939                           ;main.c: 121: TMR2IE = 1;
   940  0513  0021               	movlb 1	; select bank1
   941  0514  1491               	bsf	(1161/8)^080h,(1161)&7
   942                           	line	122
   943                           	
   944  0515                     l5418:	
   945                           ;main.c: 122: TMR2IF = 0;
   946  0515  0020               	movlb 0	; select bank0
   947  0516  1091               	bcf	(137/8),(137)&7
   948                           	line	125
   949                           	
   950  0517                     l5420:	
   951                           ;main.c: 125: INTCON = 0b00000000;
   952  0517  018B               	clrf	(11)	;volatile
   953                           	line	128
   954                           	
   955  0518                     l5422:	
   956                           ;main.c: 128: IOCBP = 0b00000000;
   957  0518  0027               	movlb 7	; select bank7
   958  0519  0194               	clrf	(916)^0380h	;volatile
   959                           	line	131
   960                           	
   961  051A                     l5424:	
   962                           ;main.c: 131: IOCBN = 0b00000000;
   963  051A  0195               	clrf	(917)^0380h	;volatile
   964                           	line	134
   965                           ;main.c: 134: while (!HFIOFR);
   966  051B  2D1C               	goto	l1609
   967                           	
   968  051C                     l1610:	
   969                           	
   970  051C                     l1609:	
   971  051C  0021               	movlb 1	; select bank1
   972  051D  1E1A               	btfss	(1236/8)^080h,(1236)&7
   973  051E  2D20               	goto	u3151
   974  051F  2D21               	goto	u3150
   975  0520                     u3151:
   976  0520  2D1C               	goto	l1609
   977  0521                     u3150:
   978  0521  2D22               	goto	l5426
   979                           	
   980  0522                     l1611:	
   981                           	line	136
   982                           	
   983  0522                     l5426:	
   984                           ;main.c: 136: calibrateGyros();
   985  0522  3184  247B  3184   	fcall	_calibrateGyros
   986                           	line	138
   987                           ;main.c: 138: while (1)
   988                           	
   989  0525                     l1612:	
   990                           	line	140
   991                           ;main.c: 139: {
   992                           ;main.c: 140: readAndSet();
   993  0525  3183  23A6  3184   	fcall	_readAndSet
   994                           	line	141
   995                           ;main.c: 141: calculate();
   996  0528  3185  256F  3184   	fcall	_calculate
   997                           	line	143
   998                           	
   999  052B                     l5428:	
  1000                           ;main.c: 143: gyroReadNumber++;
  1001  052B  3001               	movlw	low(01h)
  1002  052C  0020               	movlb 0	; select bank0
  1003  052D  07A2               	addwf	(_gyroReadNumber),f
  1004  052E  3000               	movlw	high(01h)
  1005  052F  3DA3               	addwfc	(_gyroReadNumber+1),f
  1006                           	line	144
  1007                           	
  1008  0530                     l5430:	
  1009                           ;main.c: 144: pitch = readGyroPitch(0);
  1010  0530  3000               	movlw	low(0)
  1011  0531  00F9               	movwf	(?_readGyroPitch)
  1012  0532  3000               	movlw	high(0)
  1013  0533  00FA               	movwf	((?_readGyroPitch))+1
  1014  0534  3183  2343  3184   	fcall	_readGyroPitch
  1015  0537  087A               	movf	(1+(?_readGyroPitch)),w
  1016  0538  0020               	movlb 0	; select bank0
  1017  0539  01A5               	clrf	(_pitch+1)
  1018  053A  07A5               	addwf	(_pitch+1)
  1019  053B  0879               	movf	(0+(?_readGyroPitch)),w
  1020  053C  01A4               	clrf	(_pitch)
  1021  053D  07A4               	addwf	(_pitch)
  1022                           
  1023                           	line	145
  1024                           	
  1025  053E                     l5432:	
  1026                           ;main.c: 145: roll = readGyroRoll(0);
  1027  053E  3000               	movlw	low(0)
  1028  053F  00F9               	movwf	(?_readGyroRoll)
  1029  0540  3000               	movlw	high(0)
  1030  0541  00FA               	movwf	((?_readGyroRoll))+1
  1031  0542  3182  2285  3184   	fcall	_readGyroRoll
  1032  0545  087A               	movf	(1+(?_readGyroRoll)),w
  1033  0546  0020               	movlb 0	; select bank0
  1034  0547  01A9               	clrf	(_roll+1)
  1035  0548  07A9               	addwf	(_roll+1)
  1036  0549  0879               	movf	(0+(?_readGyroRoll)),w
  1037  054A  01A8               	clrf	(_roll)
  1038  054B  07A8               	addwf	(_roll)
  1039                           
  1040                           	line	146
  1041                           	
  1042  054C                     l5434:	
  1043                           ;main.c: 146: yaw = readGyroYaw(0);
  1044  054C  3000               	movlw	low(0)
  1045  054D  00F9               	movwf	(?_readGyroYaw)
  1046  054E  3000               	movlw	high(0)
  1047  054F  00FA               	movwf	((?_readGyroYaw))+1
  1048  0550  3182  22E4  3184   	fcall	_readGyroYaw
  1049  0553  087A               	movf	(1+(?_readGyroYaw)),w
  1050  0554  0020               	movlb 0	; select bank0
  1051  0555  01AD               	clrf	(_yaw+1)
  1052  0556  07AD               	addwf	(_yaw+1)
  1053  0557  0879               	movf	(0+(?_readGyroYaw)),w
  1054  0558  01AC               	clrf	(_yaw)
  1055  0559  07AC               	addwf	(_yaw)
  1056                           
  1057                           	line	148
  1058                           	
  1059  055A                     l5436:	
  1060                           ;main.c: 148: if (gyroReadNumber >= 2) {
  1061  055A  0823               	movf	(_gyroReadNumber+1),w
  1062  055B  3A80               	xorlw	80h
  1063  055C  00FF               	movwf	btemp+1
  1064  055D  3080               	movlw	(high(02h))^80h
  1065  055E  027F               	subwf	btemp+1,w
  1066  055F  1D03               	skipz
  1067  0560  2D63               	goto	u3165
  1068  0561  3002               	movlw	low(02h)
  1069  0562  0222               	subwf	(_gyroReadNumber),w
  1070  0563                     u3165:
  1071                           
  1072  0563  1C03               	skipc
  1073  0564  2D66               	goto	u3161
  1074  0565  2D67               	goto	u3160
  1075  0566                     u3161:
  1076  0566  2D25               	goto	l1612
  1077  0567                     u3160:
  1078                           	line	149
  1079                           	
  1080  0567                     l5438:	
  1081                           ;main.c: 149: gyroReadNumber = 0;
  1082  0567  0020               	movlb 0	; select bank0
  1083  0568  01A2               	clrf	(_gyroReadNumber)
  1084  0569  01A3               	clrf	(_gyroReadNumber+1)
  1085  056A  2D25               	goto	l1612
  1086                           	line	150
  1087                           	
  1088  056B                     l1613:	
  1089  056B  2D25               	goto	l1612
  1090                           	line	151
  1091                           	
  1092  056C                     l1614:	
  1093                           	line	138
  1094  056C  2D25               	goto	l1612
  1095                           	
  1096  056D                     l1615:	
  1097                           	line	152
  1098                           	
  1099  056D                     l1616:	
  1100                           	global	start
  1101  056D  3180  2802         	ljmp	start
  1102                           	opt stack 0
  1103                           GLOBAL	__end_of_main
  1104  056F                     	__end_of_main:
  1105 ;; =============== function _main ends ============
  1106                           
  1107                           	signat	_main,88
  1108                           	global	_readAndSet
  1109                           psect	text420,local,class=CODE,delta=2
  1110                           global __ptext420
  1111  03A6                     __ptext420:
  1112                           
  1113 ;; *************** function _readAndSet *****************
  1114 ;; Defined at:
  1115 ;;		line 444 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1133 ;;Total ram usage:        1 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    2
  1136 ;; This function calls:
  1137 ;;		_readChannel1
  1138 ;;		_setESC1
  1139 ;;		_setESC2
  1140 ;;		_setESC3
  1141 ;;		_setESC4
  1142 ;;		_readChannel2
  1143 ;;		_readChannel3
  1144 ;;		_readChannel4
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           psect	text420
  1150                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1151                           	line	444
  1152                           	global	__size_of_readAndSet
  1153  0069                     	__size_of_readAndSet	equ	__end_of_readAndSet-_readAndSet
  1154                           	
  1155  03A6                     _readAndSet:	
  1156                           	opt	stack 13
  1157                           ; Regs used in _readAndSet: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1158                           	line	445
  1159                           	
  1160  03A6                     l5374:	
  1161                           ;main.c: 445: inputControl1 = readChannel1();
  1162  03A6  3181  212D  3183   	fcall	_readChannel1
  1163  03A9  00FB               	movwf	(??_readAndSet+0)+0
  1164  03AA  087B               	movf	(??_readAndSet+0)+0,w
  1165  03AB  0020               	movlb 0	; select bank0
  1166  03AC  00B6               	movwf	(_inputControl1)
  1167                           	line	446
  1168                           	
  1169  03AD                     l5376:	
  1170                           ;main.c: 446: setESC1(motor1);
  1171  03AD  083A               	movf	(_motor1),w
  1172  03AE  3180  20A2  3183   	fcall	_setESC1
  1173                           	line	447
  1174                           	
  1175  03B1                     l5378:	
  1176                           ;main.c: 447: setESC2(motor2);
  1177  03B1  0020               	movlb 0	; select bank0
  1178  03B2  083C               	movf	(_motor2),w
  1179  03B3  3180  20BB  3183   	fcall	_setESC2
  1180                           	line	448
  1181                           	
  1182  03B6                     l5380:	
  1183                           ;main.c: 448: setESC3(motor3);
  1184  03B6  0020               	movlb 0	; select bank0
  1185  03B7  083E               	movf	(_motor3),w
  1186  03B8  3180  20D4  3183   	fcall	_setESC3
  1187                           	line	449
  1188                           	
  1189  03BB                     l5382:	
  1190                           ;main.c: 449: setESC4(motor4);
  1191  03BB  0020               	movlb 0	; select bank0
  1192  03BC  0840               	movf	(_motor4),w
  1193  03BD  3180  20ED  3183   	fcall	_setESC4
  1194                           	line	451
  1195                           ;main.c: 451: inputControl2 = readChannel2();
  1196  03C0  3181  2183  3183   	fcall	_readChannel2
  1197  03C3  00FB               	movwf	(??_readAndSet+0)+0
  1198  03C4  087B               	movf	(??_readAndSet+0)+0,w
  1199  03C5  0020               	movlb 0	; select bank0
  1200  03C6  00B7               	movwf	(_inputControl2)
  1201                           	line	452
  1202                           	
  1203  03C7                     l5384:	
  1204                           ;main.c: 452: setESC1(motor1);
  1205  03C7  083A               	movf	(_motor1),w
  1206  03C8  3180  20A2  3183   	fcall	_setESC1
  1207                           	line	453
  1208                           	
  1209  03CB                     l5386:	
  1210                           ;main.c: 453: setESC2(motor2);
  1211  03CB  0020               	movlb 0	; select bank0
  1212  03CC  083C               	movf	(_motor2),w
  1213  03CD  3180  20BB  3183   	fcall	_setESC2
  1214                           	line	454
  1215                           	
  1216  03D0                     l5388:	
  1217                           ;main.c: 454: setESC3(motor3);
  1218  03D0  0020               	movlb 0	; select bank0
  1219  03D1  083E               	movf	(_motor3),w
  1220  03D2  3180  20D4  3183   	fcall	_setESC3
  1221                           	line	455
  1222                           	
  1223  03D5                     l5390:	
  1224                           ;main.c: 455: setESC4(motor4);
  1225  03D5  0020               	movlb 0	; select bank0
  1226  03D6  0840               	movf	(_motor4),w
  1227  03D7  3180  20ED  3183   	fcall	_setESC4
  1228                           	line	457
  1229                           ;main.c: 457: inputControl3 = readChannel3();
  1230  03DA  3181  21D9  3183   	fcall	_readChannel3
  1231  03DD  00FB               	movwf	(??_readAndSet+0)+0
  1232  03DE  087B               	movf	(??_readAndSet+0)+0,w
  1233  03DF  0020               	movlb 0	; select bank0
  1234  03E0  00B8               	movwf	(_inputControl3)
  1235                           	line	458
  1236                           	
  1237  03E1                     l5392:	
  1238                           ;main.c: 458: setESC1(motor1);
  1239  03E1  083A               	movf	(_motor1),w
  1240  03E2  3180  20A2  3183   	fcall	_setESC1
  1241                           	line	459
  1242                           	
  1243  03E5                     l5394:	
  1244                           ;main.c: 459: setESC2(motor2);
  1245  03E5  0020               	movlb 0	; select bank0
  1246  03E6  083C               	movf	(_motor2),w
  1247  03E7  3180  20BB  3183   	fcall	_setESC2
  1248                           	line	460
  1249                           	
  1250  03EA                     l5396:	
  1251                           ;main.c: 460: setESC3(motor3);
  1252  03EA  0020               	movlb 0	; select bank0
  1253  03EB  083E               	movf	(_motor3),w
  1254  03EC  3180  20D4  3183   	fcall	_setESC3
  1255                           	line	461
  1256                           	
  1257  03EF                     l5398:	
  1258                           ;main.c: 461: setESC4(motor4);
  1259  03EF  0020               	movlb 0	; select bank0
  1260  03F0  0840               	movf	(_motor4),w
  1261  03F1  3180  20ED  3183   	fcall	_setESC4
  1262                           	line	463
  1263                           ;main.c: 463: inputControl4 = readChannel4();
  1264  03F4  3182  222F  3183   	fcall	_readChannel4
  1265  03F7  00FB               	movwf	(??_readAndSet+0)+0
  1266  03F8  087B               	movf	(??_readAndSet+0)+0,w
  1267  03F9  0020               	movlb 0	; select bank0
  1268  03FA  00B9               	movwf	(_inputControl4)
  1269                           	line	464
  1270                           	
  1271  03FB                     l5400:	
  1272                           ;main.c: 464: setESC1(motor1);
  1273  03FB  083A               	movf	(_motor1),w
  1274  03FC  3180  20A2  3183   	fcall	_setESC1
  1275                           	line	465
  1276                           	
  1277  03FF                     l5402:	
  1278                           ;main.c: 465: setESC2(motor2);
  1279  03FF  0020               	movlb 0	; select bank0
  1280  0400  083C               	movf	(_motor2),w
  1281  0401  3180  20BB  3183   	fcall	_setESC2
  1282                           	line	466
  1283                           	
  1284  0404                     l5404:	
  1285                           ;main.c: 466: setESC3(motor3);
  1286  0404  0020               	movlb 0	; select bank0
  1287  0405  083E               	movf	(_motor3),w
  1288  0406  3180  20D4  3183   	fcall	_setESC3
  1289                           	line	467
  1290                           	
  1291  0409                     l5406:	
  1292                           ;main.c: 467: setESC4(motor4);
  1293  0409  0020               	movlb 0	; select bank0
  1294  040A  0840               	movf	(_motor4),w
  1295  040B  3180  20ED  3183   	fcall	_setESC4
  1296                           	line	490
  1297                           	
  1298  040E                     l1736:	
  1299  040E  0008               	return
  1300                           	opt stack 0
  1301                           GLOBAL	__end_of_readAndSet
  1302  040F                     	__end_of_readAndSet:
  1303 ;; =============== function _readAndSet ends ============
  1304                           
  1305                           	signat	_readAndSet,88
  1306                           	global	_calibrateGyros
  1307                           psect	text421,local,class=CODE,delta=2
  1308                           global __ptext421
  1309  047B                     __ptext421:
  1310                           
  1311 ;; *************** function _calibrateGyros *****************
  1312 ;; Defined at:
  1313 ;;		line 527 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;		None               void
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1329 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  1330 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  1331 ;;Total ram usage:        3 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    2
  1334 ;; This function calls:
  1335 ;;		_readGyroPitch
  1336 ;;		_readGyroRoll
  1337 ;;		_readGyroYaw
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           psect	text421
  1343                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1344                           	line	527
  1345                           	global	__size_of_calibrateGyros
  1346  0075                     	__size_of_calibrateGyros	equ	__end_of_calibrateGyros-_calibrateGyros
  1347                           	
  1348  047B                     _calibrateGyros:	
  1349                           	opt	stack 13
  1350                           ; Regs used in _calibrateGyros: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1351                           	line	528
  1352                           	
  1353  047B                     l5354:	
  1354                           ;main.c: 528: _delay((unsigned long)((3000)*(16000000/4000.0)));
  1355                           	opt asmopt_off
  1356  047B  303D               movlw  61
  1357  047C  0020               	movlb 0	; select bank0
  1358  047D  00C8               movwf	((??_calibrateGyros+0)+0+2),f
  1359  047E  30E1               movlw	225
  1360  047F  00C7               movwf	((??_calibrateGyros+0)+0+1),f
  1361  0480  307A               	movlw	122
  1362  0481  00C6               movwf	((??_calibrateGyros+0)+0),f
  1363  0482                     u3177:
  1364  0482  0BC6               	decfsz	((??_calibrateGyros+0)+0),f
  1365  0483  2C82               	goto	u3177
  1366  0484  0BC7               	decfsz	((??_calibrateGyros+0)+0+1),f
  1367  0485  2C82               	goto	u3177
  1368  0486  0BC8               	decfsz	((??_calibrateGyros+0)+0+2),f
  1369  0487  2C82               	goto	u3177
  1370  0488  2C89               	nop2
  1371                           opt asmopt_on
  1372                           
  1373                           	line	529
  1374                           	
  1375  0489                     l5356:	
  1376                           ;main.c: 529: zeroGyroPitch = readGyroPitch(1);
  1377  0489  3001               	movlw	low(01h)
  1378  048A  00F9               	movwf	(?_readGyroPitch)
  1379  048B  3000               	movlw	high(01h)
  1380  048C  00FA               	movwf	((?_readGyroPitch))+1
  1381  048D  3183  2343  3184   	fcall	_readGyroPitch
  1382  0490  087A               	movf	(1+(?_readGyroPitch)),w
  1383  0491  0020               	movlb 0	; select bank0
  1384  0492  01B1               	clrf	(_zeroGyroPitch+1)
  1385  0493  07B1               	addwf	(_zeroGyroPitch+1)
  1386  0494  0879               	movf	(0+(?_readGyroPitch)),w
  1387  0495  01B0               	clrf	(_zeroGyroPitch)
  1388  0496  07B0               	addwf	(_zeroGyroPitch)
  1389                           
  1390                           	line	530
  1391                           	
  1392  0497                     l5358:	
  1393                           ;main.c: 530: zeroGyroPitch = readGyroPitch(1);
  1394  0497  3001               	movlw	low(01h)
  1395  0498  00F9               	movwf	(?_readGyroPitch)
  1396  0499  3000               	movlw	high(01h)
  1397  049A  00FA               	movwf	((?_readGyroPitch))+1
  1398  049B  3183  2343  3184   	fcall	_readGyroPitch
  1399  049E  087A               	movf	(1+(?_readGyroPitch)),w
  1400  049F  0020               	movlb 0	; select bank0
  1401  04A0  01B1               	clrf	(_zeroGyroPitch+1)
  1402  04A1  07B1               	addwf	(_zeroGyroPitch+1)
  1403  04A2  0879               	movf	(0+(?_readGyroPitch)),w
  1404  04A3  01B0               	clrf	(_zeroGyroPitch)
  1405  04A4  07B0               	addwf	(_zeroGyroPitch)
  1406                           
  1407                           	line	531
  1408                           	
  1409  04A5                     l5360:	
  1410                           ;main.c: 531: zeroGyroRoll = readGyroRoll(1);
  1411  04A5  3001               	movlw	low(01h)
  1412  04A6  00F9               	movwf	(?_readGyroRoll)
  1413  04A7  3000               	movlw	high(01h)
  1414  04A8  00FA               	movwf	((?_readGyroRoll))+1
  1415  04A9  3182  2285  3184   	fcall	_readGyroRoll
  1416  04AC  087A               	movf	(1+(?_readGyroRoll)),w
  1417  04AD  0020               	movlb 0	; select bank0
  1418  04AE  01B3               	clrf	(_zeroGyroRoll+1)
  1419  04AF  07B3               	addwf	(_zeroGyroRoll+1)
  1420  04B0  0879               	movf	(0+(?_readGyroRoll)),w
  1421  04B1  01B2               	clrf	(_zeroGyroRoll)
  1422  04B2  07B2               	addwf	(_zeroGyroRoll)
  1423                           
  1424                           	line	532
  1425                           	
  1426  04B3                     l5362:	
  1427                           ;main.c: 532: zeroGyroRoll = readGyroRoll(1);
  1428  04B3  3001               	movlw	low(01h)
  1429  04B4  00F9               	movwf	(?_readGyroRoll)
  1430  04B5  3000               	movlw	high(01h)
  1431  04B6  00FA               	movwf	((?_readGyroRoll))+1
  1432  04B7  3182  2285  3184   	fcall	_readGyroRoll
  1433  04BA  087A               	movf	(1+(?_readGyroRoll)),w
  1434  04BB  0020               	movlb 0	; select bank0
  1435  04BC  01B3               	clrf	(_zeroGyroRoll+1)
  1436  04BD  07B3               	addwf	(_zeroGyroRoll+1)
  1437  04BE  0879               	movf	(0+(?_readGyroRoll)),w
  1438  04BF  01B2               	clrf	(_zeroGyroRoll)
  1439  04C0  07B2               	addwf	(_zeroGyroRoll)
  1440                           
  1441                           	line	533
  1442                           	
  1443  04C1                     l5364:	
  1444                           ;main.c: 533: zeroGyroYaw = readGyroYaw(1);
  1445  04C1  3001               	movlw	low(01h)
  1446  04C2  00F9               	movwf	(?_readGyroYaw)
  1447  04C3  3000               	movlw	high(01h)
  1448  04C4  00FA               	movwf	((?_readGyroYaw))+1
  1449  04C5  3182  22E4  3184   	fcall	_readGyroYaw
  1450  04C8  087A               	movf	(1+(?_readGyroYaw)),w
  1451  04C9  0020               	movlb 0	; select bank0
  1452  04CA  01B5               	clrf	(_zeroGyroYaw+1)
  1453  04CB  07B5               	addwf	(_zeroGyroYaw+1)
  1454  04CC  0879               	movf	(0+(?_readGyroYaw)),w
  1455  04CD  01B4               	clrf	(_zeroGyroYaw)
  1456  04CE  07B4               	addwf	(_zeroGyroYaw)
  1457                           
  1458                           	line	534
  1459                           	
  1460  04CF                     l5366:	
  1461                           ;main.c: 534: zeroGyroYaw = readGyroYaw(1);
  1462  04CF  3001               	movlw	low(01h)
  1463  04D0  00F9               	movwf	(?_readGyroYaw)
  1464  04D1  3000               	movlw	high(01h)
  1465  04D2  00FA               	movwf	((?_readGyroYaw))+1
  1466  04D3  3182  22E4  3184   	fcall	_readGyroYaw
  1467  04D6  087A               	movf	(1+(?_readGyroYaw)),w
  1468  04D7  0020               	movlb 0	; select bank0
  1469  04D8  01B5               	clrf	(_zeroGyroYaw+1)
  1470  04D9  07B5               	addwf	(_zeroGyroYaw+1)
  1471  04DA  0879               	movf	(0+(?_readGyroYaw)),w
  1472  04DB  01B4               	clrf	(_zeroGyroYaw)
  1473  04DC  07B4               	addwf	(_zeroGyroYaw)
  1474                           
  1475                           	line	536
  1476                           	
  1477  04DD                     l5368:	
  1478                           ;main.c: 536: pitch = zeroGyroPitch;
  1479  04DD  0831               	movf	(_zeroGyroPitch+1),w
  1480  04DE  01A5               	clrf	(_pitch+1)
  1481  04DF  07A5               	addwf	(_pitch+1)
  1482  04E0  0830               	movf	(_zeroGyroPitch),w
  1483  04E1  01A4               	clrf	(_pitch)
  1484  04E2  07A4               	addwf	(_pitch)
  1485                           
  1486                           	line	537
  1487                           	
  1488  04E3                     l5370:	
  1489                           ;main.c: 537: roll = zeroGyroRoll;
  1490  04E3  0833               	movf	(_zeroGyroRoll+1),w
  1491  04E4  01A9               	clrf	(_roll+1)
  1492  04E5  07A9               	addwf	(_roll+1)
  1493  04E6  0832               	movf	(_zeroGyroRoll),w
  1494  04E7  01A8               	clrf	(_roll)
  1495  04E8  07A8               	addwf	(_roll)
  1496                           
  1497                           	line	538
  1498                           	
  1499  04E9                     l5372:	
  1500                           ;main.c: 538: yaw = zeroGyroYaw;
  1501  04E9  0835               	movf	(_zeroGyroYaw+1),w
  1502  04EA  01AD               	clrf	(_yaw+1)
  1503  04EB  07AD               	addwf	(_yaw+1)
  1504  04EC  0834               	movf	(_zeroGyroYaw),w
  1505  04ED  01AC               	clrf	(_yaw)
  1506  04EE  07AC               	addwf	(_yaw)
  1507                           
  1508                           	line	539
  1509                           	
  1510  04EF                     l1739:	
  1511  04EF  0008               	return
  1512                           	opt stack 0
  1513                           GLOBAL	__end_of_calibrateGyros
  1514  04F0                     	__end_of_calibrateGyros:
  1515 ;; =============== function _calibrateGyros ends ============
  1516                           
  1517                           	signat	_calibrateGyros,88
  1518                           	global	_setESC4
  1519                           psect	text422,local,class=CODE,delta=2
  1520                           global __ptext422
  1521  00ED                     __ptext422:
  1522                           
  1523 ;; *************** function _setESC4 *****************
  1524 ;; Defined at:
  1525 ;;		line 351 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  duration        1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  duration        1    2[COMMON] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;		None               void
  1532 ;; Registers used:
  1533 ;;		wreg, status,2
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1542 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1543 ;;Total ram usage:        3 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_readAndSet
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           psect	text422
  1552                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1553                           	line	351
  1554                           	global	__size_of_setESC4
  1555  0019                     	__size_of_setESC4	equ	__end_of_setESC4-_setESC4
  1556                           	
  1557  00ED                     _setESC4:	
  1558                           	opt	stack 14
  1559                           ; Regs used in _setESC4: [wreg+status,2]
  1560                           ;setESC4@duration stored from wreg
  1561  00ED  00F2               	movwf	(setESC4@duration)
  1562                           	line	352
  1563                           	
  1564  00EE                     l5344:	
  1565                           ;main.c: 352: PR2 = duration;
  1566  00EE  0872               	movf	(setESC4@duration),w
  1567  00EF  0020               	movlb 0	; select bank0
  1568  00F0  009B               	movwf	(27)	;volatile
  1569                           	line	353
  1570                           	
  1571  00F1                     l5346:	
  1572                           ;main.c: 353: TMR2 = 0;
  1573  00F1  019A               	clrf	(26)	;volatile
  1574                           	line	354
  1575                           	
  1576  00F2                     l5348:	
  1577                           ;main.c: 354: RC4 = 1;
  1578  00F2  160E               	bsf	(116/8),(116)&7
  1579                           	line	355
  1580                           	
  1581  00F3                     l5350:	
  1582                           ;main.c: 355: _delay((unsigned long)((990)*(16000000/4000000.0)));
  1583                           	opt asmopt_off
  1584  00F3  3006               movlw	6
  1585  00F4  00F1               movwf	((??_setESC4+0)+0+1),f
  1586  00F5  3023               	movlw	35
  1587  00F6  00F0               movwf	((??_setESC4+0)+0),f
  1588  00F7                     u3187:
  1589  00F7  0BF0               	decfsz	((??_setESC4+0)+0),f
  1590  00F8  28F7               	goto	u3187
  1591  00F9  0BF1               	decfsz	((??_setESC4+0)+0+1),f
  1592  00FA  28F7               	goto	u3187
  1593                           opt asmopt_on
  1594                           
  1595                           	line	356
  1596                           	
  1597  00FB                     l5352:	
  1598                           ;main.c: 356: TMR2ON = 1;
  1599  00FB  0020               	movlb 0	; select bank0
  1600  00FC  151C               	bsf	(226/8),(226)&7
  1601                           	line	357
  1602                           ;main.c: 357: while (!TMR2IF);
  1603  00FD  28FE               	goto	l1706
  1604                           	
  1605  00FE                     l1707:	
  1606                           	
  1607  00FE                     l1706:	
  1608  00FE  1C91               	btfss	(137/8),(137)&7
  1609  00FF  2901               	goto	u3141
  1610  0100  2902               	goto	u3140
  1611  0101                     u3141:
  1612  0101  28FE               	goto	l1706
  1613  0102                     u3140:
  1614                           	
  1615  0102                     l1708:	
  1616                           	line	358
  1617                           ;main.c: 358: TMR2ON = 0;
  1618  0102  111C               	bcf	(226/8),(226)&7
  1619                           	line	359
  1620                           ;main.c: 359: RC4 = 0;
  1621  0103  120E               	bcf	(116/8),(116)&7
  1622                           	line	360
  1623                           ;main.c: 360: TMR2IF = 0;
  1624  0104  1091               	bcf	(137/8),(137)&7
  1625                           	line	361
  1626                           	
  1627  0105                     l1709:	
  1628  0105  0008               	return
  1629                           	opt stack 0
  1630                           GLOBAL	__end_of_setESC4
  1631  0106                     	__end_of_setESC4:
  1632 ;; =============== function _setESC4 ends ============
  1633                           
  1634                           	signat	_setESC4,4216
  1635                           	global	_setESC3
  1636                           psect	text423,local,class=CODE,delta=2
  1637                           global __ptext423
  1638  00D4                     __ptext423:
  1639                           
  1640 ;; *************** function _setESC3 *****************
  1641 ;; Defined at:
  1642 ;;		line 336 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  duration        1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  duration        1    2[COMMON] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, status,2
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1660 ;;Total ram usage:        3 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_readAndSet
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           psect	text423
  1669                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1670                           	line	336
  1671                           	global	__size_of_setESC3
  1672  0019                     	__size_of_setESC3	equ	__end_of_setESC3-_setESC3
  1673                           	
  1674  00D4                     _setESC3:	
  1675                           	opt	stack 14
  1676                           ; Regs used in _setESC3: [wreg+status,2]
  1677                           ;setESC3@duration stored from wreg
  1678  00D4  00F2               	movwf	(setESC3@duration)
  1679                           	line	337
  1680                           	
  1681  00D5                     l5334:	
  1682                           ;main.c: 337: PR2 = duration;
  1683  00D5  0872               	movf	(setESC3@duration),w
  1684  00D6  0020               	movlb 0	; select bank0
  1685  00D7  009B               	movwf	(27)	;volatile
  1686                           	line	338
  1687                           	
  1688  00D8                     l5336:	
  1689                           ;main.c: 338: TMR2 = 0;
  1690  00D8  019A               	clrf	(26)	;volatile
  1691                           	line	339
  1692                           	
  1693  00D9                     l5338:	
  1694                           ;main.c: 339: RC3 = 1;
  1695  00D9  158E               	bsf	(115/8),(115)&7
  1696                           	line	340
  1697                           	
  1698  00DA                     l5340:	
  1699                           ;main.c: 340: _delay((unsigned long)((990)*(16000000/4000000.0)));
  1700                           	opt asmopt_off
  1701  00DA  3006               movlw	6
  1702  00DB  00F1               movwf	((??_setESC3+0)+0+1),f
  1703  00DC  3023               	movlw	35
  1704  00DD  00F0               movwf	((??_setESC3+0)+0),f
  1705  00DE                     u3197:
  1706  00DE  0BF0               	decfsz	((??_setESC3+0)+0),f
  1707  00DF  28DE               	goto	u3197
  1708  00E0  0BF1               	decfsz	((??_setESC3+0)+0+1),f
  1709  00E1  28DE               	goto	u3197
  1710                           opt asmopt_on
  1711                           
  1712                           	line	341
  1713                           	
  1714  00E2                     l5342:	
  1715                           ;main.c: 341: TMR2ON = 1;
  1716  00E2  0020               	movlb 0	; select bank0
  1717  00E3  151C               	bsf	(226/8),(226)&7
  1718                           	line	342
  1719                           ;main.c: 342: while (!TMR2IF);
  1720  00E4  28E5               	goto	l1700
  1721                           	
  1722  00E5                     l1701:	
  1723                           	
  1724  00E5                     l1700:	
  1725  00E5  1C91               	btfss	(137/8),(137)&7
  1726  00E6  28E8               	goto	u3131
  1727  00E7  28E9               	goto	u3130
  1728  00E8                     u3131:
  1729  00E8  28E5               	goto	l1700
  1730  00E9                     u3130:
  1731                           	
  1732  00E9                     l1702:	
  1733                           	line	343
  1734                           ;main.c: 343: TMR2ON = 0;
  1735  00E9  111C               	bcf	(226/8),(226)&7
  1736                           	line	344
  1737                           ;main.c: 344: RC3 = 0;
  1738  00EA  118E               	bcf	(115/8),(115)&7
  1739                           	line	345
  1740                           ;main.c: 345: TMR2IF = 0;
  1741  00EB  1091               	bcf	(137/8),(137)&7
  1742                           	line	346
  1743                           	
  1744  00EC                     l1703:	
  1745  00EC  0008               	return
  1746                           	opt stack 0
  1747                           GLOBAL	__end_of_setESC3
  1748  00ED                     	__end_of_setESC3:
  1749 ;; =============== function _setESC3 ends ============
  1750                           
  1751                           	signat	_setESC3,4216
  1752                           	global	_setESC2
  1753                           psect	text424,local,class=CODE,delta=2
  1754                           global __ptext424
  1755  00BB                     __ptext424:
  1756                           
  1757 ;; *************** function _setESC2 *****************
  1758 ;; Defined at:
  1759 ;;		line 321 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  duration        1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  duration        1    2[COMMON] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;		None               void
  1766 ;; Registers used:
  1767 ;;		wreg, status,2
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1777 ;;Total ram usage:        3 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_readAndSet
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           psect	text424
  1786                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1787                           	line	321
  1788                           	global	__size_of_setESC2
  1789  0019                     	__size_of_setESC2	equ	__end_of_setESC2-_setESC2
  1790                           	
  1791  00BB                     _setESC2:	
  1792                           	opt	stack 14
  1793                           ; Regs used in _setESC2: [wreg+status,2]
  1794                           ;setESC2@duration stored from wreg
  1795  00BB  00F2               	movwf	(setESC2@duration)
  1796                           	line	322
  1797                           	
  1798  00BC                     l5324:	
  1799                           ;main.c: 322: PR2 = duration;
  1800  00BC  0872               	movf	(setESC2@duration),w
  1801  00BD  0020               	movlb 0	; select bank0
  1802  00BE  009B               	movwf	(27)	;volatile
  1803                           	line	323
  1804                           	
  1805  00BF                     l5326:	
  1806                           ;main.c: 323: TMR2 = 0;
  1807  00BF  019A               	clrf	(26)	;volatile
  1808                           	line	324
  1809                           	
  1810  00C0                     l5328:	
  1811                           ;main.c: 324: RC2 = 1;
  1812  00C0  150E               	bsf	(114/8),(114)&7
  1813                           	line	325
  1814                           	
  1815  00C1                     l5330:	
  1816                           ;main.c: 325: _delay((unsigned long)((990)*(16000000/4000000.0)));
  1817                           	opt asmopt_off
  1818  00C1  3006               movlw	6
  1819  00C2  00F1               movwf	((??_setESC2+0)+0+1),f
  1820  00C3  3023               	movlw	35
  1821  00C4  00F0               movwf	((??_setESC2+0)+0),f
  1822  00C5                     u3207:
  1823  00C5  0BF0               	decfsz	((??_setESC2+0)+0),f
  1824  00C6  28C5               	goto	u3207
  1825  00C7  0BF1               	decfsz	((??_setESC2+0)+0+1),f
  1826  00C8  28C5               	goto	u3207
  1827                           opt asmopt_on
  1828                           
  1829                           	line	326
  1830                           	
  1831  00C9                     l5332:	
  1832                           ;main.c: 326: TMR2ON = 1;
  1833  00C9  0020               	movlb 0	; select bank0
  1834  00CA  151C               	bsf	(226/8),(226)&7
  1835                           	line	327
  1836                           ;main.c: 327: while (!TMR2IF);
  1837  00CB  28CC               	goto	l1694
  1838                           	
  1839  00CC                     l1695:	
  1840                           	
  1841  00CC                     l1694:	
  1842  00CC  1C91               	btfss	(137/8),(137)&7
  1843  00CD  28CF               	goto	u3121
  1844  00CE  28D0               	goto	u3120
  1845  00CF                     u3121:
  1846  00CF  28CC               	goto	l1694
  1847  00D0                     u3120:
  1848                           	
  1849  00D0                     l1696:	
  1850                           	line	328
  1851                           ;main.c: 328: TMR2ON = 0;
  1852  00D0  111C               	bcf	(226/8),(226)&7
  1853                           	line	329
  1854                           ;main.c: 329: RC2 = 0;
  1855  00D1  110E               	bcf	(114/8),(114)&7
  1856                           	line	330
  1857                           ;main.c: 330: TMR2IF = 0;
  1858  00D2  1091               	bcf	(137/8),(137)&7
  1859                           	line	331
  1860                           	
  1861  00D3                     l1697:	
  1862  00D3  0008               	return
  1863                           	opt stack 0
  1864                           GLOBAL	__end_of_setESC2
  1865  00D4                     	__end_of_setESC2:
  1866 ;; =============== function _setESC2 ends ============
  1867                           
  1868                           	signat	_setESC2,4216
  1869                           	global	_setESC1
  1870                           psect	text425,local,class=CODE,delta=2
  1871                           global __ptext425
  1872  00A2                     __ptext425:
  1873                           
  1874 ;; *************** function _setESC1 *****************
  1875 ;; Defined at:
  1876 ;;		line 306 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  duration        1    wreg     unsigned char 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  duration        1    2[COMMON] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;		None               void
  1883 ;; Registers used:
  1884 ;;		wreg, status,2
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1894 ;;Total ram usage:        3 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_readAndSet
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           psect	text425
  1903                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1904                           	line	306
  1905                           	global	__size_of_setESC1
  1906  0019                     	__size_of_setESC1	equ	__end_of_setESC1-_setESC1
  1907                           	
  1908  00A2                     _setESC1:	
  1909                           	opt	stack 14
  1910                           ; Regs used in _setESC1: [wreg+status,2]
  1911                           ;setESC1@duration stored from wreg
  1912  00A2  00F2               	movwf	(setESC1@duration)
  1913                           	line	307
  1914                           	
  1915  00A3                     l5314:	
  1916                           ;main.c: 307: PR2 = duration;
  1917  00A3  0872               	movf	(setESC1@duration),w
  1918  00A4  0020               	movlb 0	; select bank0
  1919  00A5  009B               	movwf	(27)	;volatile
  1920                           	line	308
  1921                           	
  1922  00A6                     l5316:	
  1923                           ;main.c: 308: TMR2 = 0;
  1924  00A6  019A               	clrf	(26)	;volatile
  1925                           	line	309
  1926                           	
  1927  00A7                     l5318:	
  1928                           ;main.c: 309: RC1 = 1;
  1929  00A7  148E               	bsf	(113/8),(113)&7
  1930                           	line	310
  1931                           	
  1932  00A8                     l5320:	
  1933                           ;main.c: 310: _delay((unsigned long)((990)*(16000000/4000000.0)));
  1934                           	opt asmopt_off
  1935  00A8  3006               movlw	6
  1936  00A9  00F1               movwf	((??_setESC1+0)+0+1),f
  1937  00AA  3023               	movlw	35
  1938  00AB  00F0               movwf	((??_setESC1+0)+0),f
  1939  00AC                     u3217:
  1940  00AC  0BF0               	decfsz	((??_setESC1+0)+0),f
  1941  00AD  28AC               	goto	u3217
  1942  00AE  0BF1               	decfsz	((??_setESC1+0)+0+1),f
  1943  00AF  28AC               	goto	u3217
  1944                           opt asmopt_on
  1945                           
  1946                           	line	311
  1947                           	
  1948  00B0                     l5322:	
  1949                           ;main.c: 311: TMR2ON = 1;
  1950  00B0  0020               	movlb 0	; select bank0
  1951  00B1  151C               	bsf	(226/8),(226)&7
  1952                           	line	312
  1953                           ;main.c: 312: while (!TMR2IF);
  1954  00B2  28B3               	goto	l1688
  1955                           	
  1956  00B3                     l1689:	
  1957                           	
  1958  00B3                     l1688:	
  1959  00B3  1C91               	btfss	(137/8),(137)&7
  1960  00B4  28B6               	goto	u3111
  1961  00B5  28B7               	goto	u3110
  1962  00B6                     u3111:
  1963  00B6  28B3               	goto	l1688
  1964  00B7                     u3110:
  1965                           	
  1966  00B7                     l1690:	
  1967                           	line	313
  1968                           ;main.c: 313: TMR2ON = 0;
  1969  00B7  111C               	bcf	(226/8),(226)&7
  1970                           	line	314
  1971                           ;main.c: 314: RC1 = 0;
  1972  00B8  108E               	bcf	(113/8),(113)&7
  1973                           	line	315
  1974                           ;main.c: 315: TMR2IF = 0;
  1975  00B9  1091               	bcf	(137/8),(137)&7
  1976                           	line	316
  1977                           	
  1978  00BA                     l1691:	
  1979  00BA  0008               	return
  1980                           	opt stack 0
  1981                           GLOBAL	__end_of_setESC1
  1982  00BB                     	__end_of_setESC1:
  1983 ;; =============== function _setESC1 ends ============
  1984                           
  1985                           	signat	_setESC1,4216
  1986                           	global	_readChannel4
  1987                           psect	text426,local,class=CODE,delta=2
  1988                           global __ptext426
  1989  022F                     __ptext426:
  1990                           
  1991 ;; *************** function _readChannel4 *****************
  1992 ;; Defined at:
  1993 ;;		line 249 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  duration        2    9[COMMON] int 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		___awdiv
  2016 ;; This function is called by:
  2017 ;;		_readAndSet
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           psect	text426
  2021                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2022                           	line	249
  2023                           	global	__size_of_readChannel4
  2024  0056                     	__size_of_readChannel4	equ	__end_of_readChannel4-_readChannel4
  2025                           	
  2026  022F                     _readChannel4:	
  2027                           	opt	stack 13
  2028                           ; Regs used in _readChannel4: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2029                           	line	252
  2030                           	
  2031  022F                     l5296:	
  2032                           ;main.c: 250: int duration;
  2033                           ;main.c: 252: TMR1 = 0;
  2034  022F  0020               	movlb 0	; select bank0
  2035  0230  0196               	clrf	(22)	;volatile
  2036  0231  0197               	clrf	(22+1)	;volatile
  2037                           	line	254
  2038                           ;main.c: 254: while (RB7);
  2039  0232  2A33               	goto	l1664
  2040                           	
  2041  0233                     l1665:	
  2042                           	
  2043  0233                     l1664:	
  2044  0233  1B8D               	btfsc	(111/8),(111)&7
  2045  0234  2A36               	goto	u3061
  2046  0235  2A37               	goto	u3060
  2047  0236                     u3061:
  2048  0236  2A33               	goto	l1664
  2049  0237                     u3060:
  2050  0237  2A39               	goto	l1667
  2051                           	
  2052  0238                     l1666:	
  2053                           	line	255
  2054                           ;main.c: 255: while (!RB7);
  2055  0238  2A39               	goto	l1667
  2056                           	
  2057  0239                     l1668:	
  2058                           	
  2059  0239                     l1667:	
  2060  0239  1F8D               	btfss	(111/8),(111)&7
  2061  023A  2A3C               	goto	u3071
  2062  023B  2A3D               	goto	u3070
  2063  023C                     u3071:
  2064  023C  2A39               	goto	l1667
  2065  023D                     u3070:
  2066                           	
  2067  023D                     l1669:	
  2068                           	line	257
  2069                           ;main.c: 257: TMR1ON = 1;
  2070  023D  1418               	bsf	(192/8),(192)&7
  2071                           	line	258
  2072                           ;main.c: 258: while(RB7);
  2073  023E  2A3F               	goto	l1670
  2074                           	
  2075  023F                     l1671:	
  2076                           	
  2077  023F                     l1670:	
  2078  023F  1B8D               	btfsc	(111/8),(111)&7
  2079  0240  2A42               	goto	u3081
  2080  0241  2A43               	goto	u3080
  2081  0242                     u3081:
  2082  0242  2A3F               	goto	l1670
  2083  0243                     u3080:
  2084                           	
  2085  0243                     l1672:	
  2086                           	line	259
  2087                           ;main.c: 259: TMR1ON = 0;
  2088  0243  1018               	bcf	(192/8),(192)&7
  2089                           	line	263
  2090                           	
  2091  0244                     l5298:	
  2092                           ;main.c: 263: duration = TMR1;
  2093  0244  0817               	movf	(22+1),w	;volatile
  2094  0245  01FA               	clrf	(readChannel4@duration+1)	;volatile
  2095  0246  07FA               	addwf	(readChannel4@duration+1)	;volatile
  2096  0247  0816               	movf	(22),w	;volatile
  2097  0248  01F9               	clrf	(readChannel4@duration)	;volatile
  2098  0249  07F9               	addwf	(readChannel4@duration)	;volatile
  2099                           
  2100                           	line	264
  2101                           	
  2102  024A                     l5300:	
  2103                           ;main.c: 264: if (duration > 32206)
  2104  024A  087A               	movf	(readChannel4@duration+1),w
  2105  024B  3A80               	xorlw	80h
  2106  024C  00FF               	movwf	btemp+1
  2107  024D  30FD               	movlw	(high(07DCFh))^80h
  2108  024E  027F               	subwf	btemp+1,w
  2109  024F  1D03               	skipz
  2110  0250  2A53               	goto	u3095
  2111  0251  30CF               	movlw	low(07DCFh)
  2112  0252  0279               	subwf	(readChannel4@duration),w
  2113  0253                     u3095:
  2114                           
  2115  0253  1C03               	skipc
  2116  0254  2A56               	goto	u3091
  2117  0255  2A57               	goto	u3090
  2118  0256                     u3091:
  2119  0256  2A5C               	goto	l5304
  2120  0257                     u3090:
  2121                           	line	266
  2122                           	
  2123  0257                     l5302:	
  2124                           ;main.c: 265: {
  2125                           ;main.c: 266: duration = 32206;
  2126  0257  30CE               	movlw	low(07DCEh)
  2127  0258  00F9               	movwf	(readChannel4@duration)
  2128  0259  307D               	movlw	high(07DCEh)
  2129  025A  00FA               	movwf	((readChannel4@duration))+1
  2130                           	line	267
  2131                           ;main.c: 267: }
  2132  025B  2A6F               	goto	l5308
  2133                           	line	268
  2134                           	
  2135  025C                     l1673:	
  2136                           	
  2137  025C                     l5304:	
  2138                           ;main.c: 268: else if (duration < 17706)
  2139  025C  087A               	movf	(readChannel4@duration+1),w
  2140  025D  3A80               	xorlw	80h
  2141  025E  00FF               	movwf	btemp+1
  2142  025F  30C5               	movlw	(high(0452Ah))^80h
  2143  0260  027F               	subwf	btemp+1,w
  2144  0261  1D03               	skipz
  2145  0262  2A65               	goto	u3105
  2146  0263  302A               	movlw	low(0452Ah)
  2147  0264  0279               	subwf	(readChannel4@duration),w
  2148  0265                     u3105:
  2149                           
  2150  0265  1803               	skipnc
  2151  0266  2A68               	goto	u3101
  2152  0267  2A69               	goto	u3100
  2153  0268                     u3101:
  2154  0268  2A6F               	goto	l5308
  2155  0269                     u3100:
  2156                           	line	270
  2157                           	
  2158  0269                     l5306:	
  2159                           ;main.c: 269: {
  2160                           ;main.c: 270: duration = 17706;
  2161  0269  302A               	movlw	low(0452Ah)
  2162  026A  00F9               	movwf	(readChannel4@duration)
  2163  026B  3045               	movlw	high(0452Ah)
  2164  026C  00FA               	movwf	((readChannel4@duration))+1
  2165  026D  2A6F               	goto	l5308
  2166                           	line	271
  2167                           	
  2168  026E                     l1675:	
  2169  026E  2A6F               	goto	l5308
  2170                           	line	273
  2171                           	
  2172  026F                     l1674:	
  2173                           	
  2174  026F                     l5308:	
  2175                           ;main.c: 271: }
  2176                           ;main.c: 273: duration = (int)((duration - 17706)/57);
  2177  026F  3039               	movlw	low(039h)
  2178  0270  00F0               	movwf	(?___awdiv)
  2179  0271  3000               	movlw	high(039h)
  2180  0272  00F1               	movwf	((?___awdiv))+1
  2181  0273  0879               	movf	(readChannel4@duration),w
  2182  0274  3ED6               	addlw	low(-17706)
  2183  0275  00F2               	movwf	0+(?___awdiv)+02h
  2184  0276  30BA               	movlw	high(-17706)
  2185  0277  3D7A               	addwfc	(readChannel4@duration+1),w
  2186  0278  00F3               	movwf	1+0+(?___awdiv)+02h
  2187  0279  3184  240F  3182   	fcall	___awdiv
  2188  027C  0871               	movf	(1+(?___awdiv)),w
  2189  027D  01FA               	clrf	(readChannel4@duration+1)
  2190  027E  07FA               	addwf	(readChannel4@duration+1)
  2191  027F  0870               	movf	(0+(?___awdiv)),w
  2192  0280  01F9               	clrf	(readChannel4@duration)
  2193  0281  07F9               	addwf	(readChannel4@duration)
  2194                           
  2195                           	line	275
  2196                           	
  2197  0282                     l5310:	
  2198                           ;main.c: 275: return (char)duration;
  2199  0282  0879               	movf	(readChannel4@duration),w
  2200  0283  2A84               	goto	l1676
  2201                           	
  2202  0284                     l5312:	
  2203                           	line	276
  2204                           	
  2205  0284                     l1676:	
  2206  0284  0008               	return
  2207                           	opt stack 0
  2208                           GLOBAL	__end_of_readChannel4
  2209  0285                     	__end_of_readChannel4:
  2210 ;; =============== function _readChannel4 ends ============
  2211                           
  2212                           	signat	_readChannel4,89
  2213                           	global	_readChannel3
  2214                           psect	text427,local,class=CODE,delta=2
  2215                           global __ptext427
  2216  01D9                     __ptext427:
  2217                           
  2218 ;; *************** function _readChannel3 *****************
  2219 ;; Defined at:
  2220 ;;		line 218 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  duration        2    9[COMMON] int 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      unsigned char 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    1
  2241 ;; This function calls:
  2242 ;;		___awdiv
  2243 ;; This function is called by:
  2244 ;;		_readAndSet
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           psect	text427
  2248                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2249                           	line	218
  2250                           	global	__size_of_readChannel3
  2251  0056                     	__size_of_readChannel3	equ	__end_of_readChannel3-_readChannel3
  2252                           	
  2253  01D9                     _readChannel3:	
  2254                           	opt	stack 13
  2255                           ; Regs used in _readChannel3: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2256                           	line	221
  2257                           	
  2258  01D9                     l5278:	
  2259                           ;main.c: 219: int duration;
  2260                           ;main.c: 221: TMR1 = 0;
  2261  01D9  0020               	movlb 0	; select bank0
  2262  01DA  0196               	clrf	(22)	;volatile
  2263  01DB  0197               	clrf	(22+1)	;volatile
  2264                           	line	223
  2265                           ;main.c: 223: while (RB6);
  2266  01DC  29DD               	goto	l1649
  2267                           	
  2268  01DD                     l1650:	
  2269                           	
  2270  01DD                     l1649:	
  2271  01DD  1B0D               	btfsc	(110/8),(110)&7
  2272  01DE  29E0               	goto	u3011
  2273  01DF  29E1               	goto	u3010
  2274  01E0                     u3011:
  2275  01E0  29DD               	goto	l1649
  2276  01E1                     u3010:
  2277  01E1  29E3               	goto	l1652
  2278                           	
  2279  01E2                     l1651:	
  2280                           	line	224
  2281                           ;main.c: 224: while (!RB6);
  2282  01E2  29E3               	goto	l1652
  2283                           	
  2284  01E3                     l1653:	
  2285                           	
  2286  01E3                     l1652:	
  2287  01E3  1F0D               	btfss	(110/8),(110)&7
  2288  01E4  29E6               	goto	u3021
  2289  01E5  29E7               	goto	u3020
  2290  01E6                     u3021:
  2291  01E6  29E3               	goto	l1652
  2292  01E7                     u3020:
  2293                           	
  2294  01E7                     l1654:	
  2295                           	line	226
  2296                           ;main.c: 226: TMR1ON = 1;
  2297  01E7  1418               	bsf	(192/8),(192)&7
  2298                           	line	227
  2299                           ;main.c: 227: while(RB6);
  2300  01E8  29E9               	goto	l1655
  2301                           	
  2302  01E9                     l1656:	
  2303                           	
  2304  01E9                     l1655:	
  2305  01E9  1B0D               	btfsc	(110/8),(110)&7
  2306  01EA  29EC               	goto	u3031
  2307  01EB  29ED               	goto	u3030
  2308  01EC                     u3031:
  2309  01EC  29E9               	goto	l1655
  2310  01ED                     u3030:
  2311                           	
  2312  01ED                     l1657:	
  2313                           	line	228
  2314                           ;main.c: 228: TMR1ON = 0;
  2315  01ED  1018               	bcf	(192/8),(192)&7
  2316                           	line	232
  2317                           	
  2318  01EE                     l5280:	
  2319                           ;main.c: 232: duration = TMR1;
  2320  01EE  0817               	movf	(22+1),w	;volatile
  2321  01EF  01FA               	clrf	(readChannel3@duration+1)	;volatile
  2322  01F0  07FA               	addwf	(readChannel3@duration+1)	;volatile
  2323  01F1  0816               	movf	(22),w	;volatile
  2324  01F2  01F9               	clrf	(readChannel3@duration)	;volatile
  2325  01F3  07F9               	addwf	(readChannel3@duration)	;volatile
  2326                           
  2327                           	line	233
  2328                           	
  2329  01F4                     l5282:	
  2330                           ;main.c: 233: if (duration > 30606)
  2331  01F4  087A               	movf	(readChannel3@duration+1),w
  2332  01F5  3A80               	xorlw	80h
  2333  01F6  00FF               	movwf	btemp+1
  2334  01F7  30F7               	movlw	(high(0778Fh))^80h
  2335  01F8  027F               	subwf	btemp+1,w
  2336  01F9  1D03               	skipz
  2337  01FA  29FD               	goto	u3045
  2338  01FB  308F               	movlw	low(0778Fh)
  2339  01FC  0279               	subwf	(readChannel3@duration),w
  2340  01FD                     u3045:
  2341                           
  2342  01FD  1C03               	skipc
  2343  01FE  2A00               	goto	u3041
  2344  01FF  2A01               	goto	u3040
  2345  0200                     u3041:
  2346  0200  2A06               	goto	l5286
  2347  0201                     u3040:
  2348                           	line	235
  2349                           	
  2350  0201                     l5284:	
  2351                           ;main.c: 234: {
  2352                           ;main.c: 235: duration = 30606;
  2353  0201  308E               	movlw	low(0778Eh)
  2354  0202  00F9               	movwf	(readChannel3@duration)
  2355  0203  3077               	movlw	high(0778Eh)
  2356  0204  00FA               	movwf	((readChannel3@duration))+1
  2357                           	line	236
  2358                           ;main.c: 236: }
  2359  0205  2A19               	goto	l5290
  2360                           	line	237
  2361                           	
  2362  0206                     l1658:	
  2363                           	
  2364  0206                     l5286:	
  2365                           ;main.c: 237: else if (duration < 18486)
  2366  0206  087A               	movf	(readChannel3@duration+1),w
  2367  0207  3A80               	xorlw	80h
  2368  0208  00FF               	movwf	btemp+1
  2369  0209  30C8               	movlw	(high(04836h))^80h
  2370  020A  027F               	subwf	btemp+1,w
  2371  020B  1D03               	skipz
  2372  020C  2A0F               	goto	u3055
  2373  020D  3036               	movlw	low(04836h)
  2374  020E  0279               	subwf	(readChannel3@duration),w
  2375  020F                     u3055:
  2376                           
  2377  020F  1803               	skipnc
  2378  0210  2A12               	goto	u3051
  2379  0211  2A13               	goto	u3050
  2380  0212                     u3051:
  2381  0212  2A19               	goto	l5290
  2382  0213                     u3050:
  2383                           	line	239
  2384                           	
  2385  0213                     l5288:	
  2386                           ;main.c: 238: {
  2387                           ;main.c: 239: duration = 18486;
  2388  0213  3036               	movlw	low(04836h)
  2389  0214  00F9               	movwf	(readChannel3@duration)
  2390  0215  3048               	movlw	high(04836h)
  2391  0216  00FA               	movwf	((readChannel3@duration))+1
  2392  0217  2A19               	goto	l5290
  2393                           	line	240
  2394                           	
  2395  0218                     l1660:	
  2396  0218  2A19               	goto	l5290
  2397                           	line	242
  2398                           	
  2399  0219                     l1659:	
  2400                           	
  2401  0219                     l5290:	
  2402                           ;main.c: 240: }
  2403                           ;main.c: 242: duration = (int)((duration - 18486)/48);
  2404  0219  3030               	movlw	low(030h)
  2405  021A  00F0               	movwf	(?___awdiv)
  2406  021B  3000               	movlw	high(030h)
  2407  021C  00F1               	movwf	((?___awdiv))+1
  2408  021D  0879               	movf	(readChannel3@duration),w
  2409  021E  3ECA               	addlw	low(-18486)
  2410  021F  00F2               	movwf	0+(?___awdiv)+02h
  2411  0220  30B7               	movlw	high(-18486)
  2412  0221  3D7A               	addwfc	(readChannel3@duration+1),w
  2413  0222  00F3               	movwf	1+0+(?___awdiv)+02h
  2414  0223  3184  240F  3181   	fcall	___awdiv
  2415  0226  0871               	movf	(1+(?___awdiv)),w
  2416  0227  01FA               	clrf	(readChannel3@duration+1)
  2417  0228  07FA               	addwf	(readChannel3@duration+1)
  2418  0229  0870               	movf	(0+(?___awdiv)),w
  2419  022A  01F9               	clrf	(readChannel3@duration)
  2420  022B  07F9               	addwf	(readChannel3@duration)
  2421                           
  2422                           	line	244
  2423                           	
  2424  022C                     l5292:	
  2425                           ;main.c: 244: return (char)duration;
  2426  022C  0879               	movf	(readChannel3@duration),w
  2427  022D  2A2E               	goto	l1661
  2428                           	
  2429  022E                     l5294:	
  2430                           	line	245
  2431                           	
  2432  022E                     l1661:	
  2433  022E  0008               	return
  2434                           	opt stack 0
  2435                           GLOBAL	__end_of_readChannel3
  2436  022F                     	__end_of_readChannel3:
  2437 ;; =============== function _readChannel3 ends ============
  2438                           
  2439                           	signat	_readChannel3,89
  2440                           	global	_readChannel2
  2441                           psect	text428,local,class=CODE,delta=2
  2442                           global __ptext428
  2443  0183                     __ptext428:
  2444                           
  2445 ;; *************** function _readChannel2 *****************
  2446 ;; Defined at:
  2447 ;;		line 187 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  duration        2    9[COMMON] int 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      unsigned char 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2465 ;;Total ram usage:        2 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    1
  2468 ;; This function calls:
  2469 ;;		___awdiv
  2470 ;; This function is called by:
  2471 ;;		_readAndSet
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           psect	text428
  2475                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2476                           	line	187
  2477                           	global	__size_of_readChannel2
  2478  0056                     	__size_of_readChannel2	equ	__end_of_readChannel2-_readChannel2
  2479                           	
  2480  0183                     _readChannel2:	
  2481                           	opt	stack 13
  2482                           ; Regs used in _readChannel2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2483                           	line	190
  2484                           	
  2485  0183                     l5260:	
  2486                           ;main.c: 188: int duration;
  2487                           ;main.c: 190: TMR1 = 0;
  2488  0183  0020               	movlb 0	; select bank0
  2489  0184  0196               	clrf	(22)	;volatile
  2490  0185  0197               	clrf	(22+1)	;volatile
  2491                           	line	192
  2492                           ;main.c: 192: while (RB5);
  2493  0186  2987               	goto	l1634
  2494                           	
  2495  0187                     l1635:	
  2496                           	
  2497  0187                     l1634:	
  2498  0187  1A8D               	btfsc	(109/8),(109)&7
  2499  0188  298A               	goto	u2961
  2500  0189  298B               	goto	u2960
  2501  018A                     u2961:
  2502  018A  2987               	goto	l1634
  2503  018B                     u2960:
  2504  018B  298D               	goto	l1637
  2505                           	
  2506  018C                     l1636:	
  2507                           	line	193
  2508                           ;main.c: 193: while (!RB5);
  2509  018C  298D               	goto	l1637
  2510                           	
  2511  018D                     l1638:	
  2512                           	
  2513  018D                     l1637:	
  2514  018D  1E8D               	btfss	(109/8),(109)&7
  2515  018E  2990               	goto	u2971
  2516  018F  2991               	goto	u2970
  2517  0190                     u2971:
  2518  0190  298D               	goto	l1637
  2519  0191                     u2970:
  2520                           	
  2521  0191                     l1639:	
  2522                           	line	195
  2523                           ;main.c: 195: TMR1ON = 1;
  2524  0191  1418               	bsf	(192/8),(192)&7
  2525                           	line	196
  2526                           ;main.c: 196: while(RB5);
  2527  0192  2993               	goto	l1640
  2528                           	
  2529  0193                     l1641:	
  2530                           	
  2531  0193                     l1640:	
  2532  0193  1A8D               	btfsc	(109/8),(109)&7
  2533  0194  2996               	goto	u2981
  2534  0195  2997               	goto	u2980
  2535  0196                     u2981:
  2536  0196  2993               	goto	l1640
  2537  0197                     u2980:
  2538                           	
  2539  0197                     l1642:	
  2540                           	line	197
  2541                           ;main.c: 197: TMR1ON = 0;
  2542  0197  1018               	bcf	(192/8),(192)&7
  2543                           	line	201
  2544                           	
  2545  0198                     l5262:	
  2546                           ;main.c: 201: duration = TMR1;
  2547  0198  0817               	movf	(22+1),w	;volatile
  2548  0199  01FA               	clrf	(readChannel2@duration+1)	;volatile
  2549  019A  07FA               	addwf	(readChannel2@duration+1)	;volatile
  2550  019B  0816               	movf	(22),w	;volatile
  2551  019C  01F9               	clrf	(readChannel2@duration)	;volatile
  2552  019D  07F9               	addwf	(readChannel2@duration)	;volatile
  2553                           
  2554                           	line	202
  2555                           	
  2556  019E                     l5264:	
  2557                           ;main.c: 202: if (duration > 31446)
  2558  019E  087A               	movf	(readChannel2@duration+1),w
  2559  019F  3A80               	xorlw	80h
  2560  01A0  00FF               	movwf	btemp+1
  2561  01A1  30FA               	movlw	(high(07AD7h))^80h
  2562  01A2  027F               	subwf	btemp+1,w
  2563  01A3  1D03               	skipz
  2564  01A4  29A7               	goto	u2995
  2565  01A5  30D7               	movlw	low(07AD7h)
  2566  01A6  0279               	subwf	(readChannel2@duration),w
  2567  01A7                     u2995:
  2568                           
  2569  01A7  1C03               	skipc
  2570  01A8  29AA               	goto	u2991
  2571  01A9  29AB               	goto	u2990
  2572  01AA                     u2991:
  2573  01AA  29B0               	goto	l5268
  2574  01AB                     u2990:
  2575                           	line	204
  2576                           	
  2577  01AB                     l5266:	
  2578                           ;main.c: 203: {
  2579                           ;main.c: 204: duration = 31446;
  2580  01AB  30D6               	movlw	low(07AD6h)
  2581  01AC  00F9               	movwf	(readChannel2@duration)
  2582  01AD  307A               	movlw	high(07AD6h)
  2583  01AE  00FA               	movwf	((readChannel2@duration))+1
  2584                           	line	205
  2585                           ;main.c: 205: }
  2586  01AF  29C3               	goto	l5272
  2587                           	line	206
  2588                           	
  2589  01B0                     l1643:	
  2590                           	
  2591  01B0                     l5268:	
  2592                           ;main.c: 206: else if (duration < 17566)
  2593  01B0  087A               	movf	(readChannel2@duration+1),w
  2594  01B1  3A80               	xorlw	80h
  2595  01B2  00FF               	movwf	btemp+1
  2596  01B3  30C4               	movlw	(high(0449Eh))^80h
  2597  01B4  027F               	subwf	btemp+1,w
  2598  01B5  1D03               	skipz
  2599  01B6  29B9               	goto	u3005
  2600  01B7  309E               	movlw	low(0449Eh)
  2601  01B8  0279               	subwf	(readChannel2@duration),w
  2602  01B9                     u3005:
  2603                           
  2604  01B9  1803               	skipnc
  2605  01BA  29BC               	goto	u3001
  2606  01BB  29BD               	goto	u3000
  2607  01BC                     u3001:
  2608  01BC  29C3               	goto	l5272
  2609  01BD                     u3000:
  2610                           	line	208
  2611                           	
  2612  01BD                     l5270:	
  2613                           ;main.c: 207: {
  2614                           ;main.c: 208: duration = 17566;
  2615  01BD  309E               	movlw	low(0449Eh)
  2616  01BE  00F9               	movwf	(readChannel2@duration)
  2617  01BF  3044               	movlw	high(0449Eh)
  2618  01C0  00FA               	movwf	((readChannel2@duration))+1
  2619  01C1  29C3               	goto	l5272
  2620                           	line	209
  2621                           	
  2622  01C2                     l1645:	
  2623  01C2  29C3               	goto	l5272
  2624                           	line	211
  2625                           	
  2626  01C3                     l1644:	
  2627                           	
  2628  01C3                     l5272:	
  2629                           ;main.c: 209: }
  2630                           ;main.c: 211: duration = (int)((duration - 17566)/54);
  2631  01C3  3036               	movlw	low(036h)
  2632  01C4  00F0               	movwf	(?___awdiv)
  2633  01C5  3000               	movlw	high(036h)
  2634  01C6  00F1               	movwf	((?___awdiv))+1
  2635  01C7  0879               	movf	(readChannel2@duration),w
  2636  01C8  3E62               	addlw	low(-17566)
  2637  01C9  00F2               	movwf	0+(?___awdiv)+02h
  2638  01CA  30BB               	movlw	high(-17566)
  2639  01CB  3D7A               	addwfc	(readChannel2@duration+1),w
  2640  01CC  00F3               	movwf	1+0+(?___awdiv)+02h
  2641  01CD  3184  240F  3181   	fcall	___awdiv
  2642  01D0  0871               	movf	(1+(?___awdiv)),w
  2643  01D1  01FA               	clrf	(readChannel2@duration+1)
  2644  01D2  07FA               	addwf	(readChannel2@duration+1)
  2645  01D3  0870               	movf	(0+(?___awdiv)),w
  2646  01D4  01F9               	clrf	(readChannel2@duration)
  2647  01D5  07F9               	addwf	(readChannel2@duration)
  2648                           
  2649                           	line	213
  2650                           	
  2651  01D6                     l5274:	
  2652                           ;main.c: 213: return (char)duration;
  2653  01D6  0879               	movf	(readChannel2@duration),w
  2654  01D7  29D8               	goto	l1646
  2655                           	
  2656  01D8                     l5276:	
  2657                           	line	214
  2658                           	
  2659  01D8                     l1646:	
  2660  01D8  0008               	return
  2661                           	opt stack 0
  2662                           GLOBAL	__end_of_readChannel2
  2663  01D9                     	__end_of_readChannel2:
  2664 ;; =============== function _readChannel2 ends ============
  2665                           
  2666                           	signat	_readChannel2,89
  2667                           	global	_readChannel1
  2668                           psect	text429,local,class=CODE,delta=2
  2669                           global __ptext429
  2670  012D                     __ptext429:
  2671                           
  2672 ;; *************** function _readChannel1 *****************
  2673 ;; Defined at:
  2674 ;;		line 156 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  duration        2    9[COMMON] int 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      unsigned char 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2692 ;;Total ram usage:        2 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    1
  2695 ;; This function calls:
  2696 ;;		___awdiv
  2697 ;; This function is called by:
  2698 ;;		_readAndSet
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           psect	text429
  2702                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2703                           	line	156
  2704                           	global	__size_of_readChannel1
  2705  0056                     	__size_of_readChannel1	equ	__end_of_readChannel1-_readChannel1
  2706                           	
  2707  012D                     _readChannel1:	
  2708                           	opt	stack 13
  2709                           ; Regs used in _readChannel1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2710                           	line	159
  2711                           	
  2712  012D                     l5242:	
  2713                           ;main.c: 157: int duration;
  2714                           ;main.c: 159: TMR1 = 0;
  2715  012D  0020               	movlb 0	; select bank0
  2716  012E  0196               	clrf	(22)	;volatile
  2717  012F  0197               	clrf	(22+1)	;volatile
  2718                           	line	161
  2719                           ;main.c: 161: while (RB4);
  2720  0130  2931               	goto	l1619
  2721                           	
  2722  0131                     l1620:	
  2723                           	
  2724  0131                     l1619:	
  2725  0131  1A0D               	btfsc	(108/8),(108)&7
  2726  0132  2934               	goto	u2911
  2727  0133  2935               	goto	u2910
  2728  0134                     u2911:
  2729  0134  2931               	goto	l1619
  2730  0135                     u2910:
  2731  0135  2937               	goto	l1622
  2732                           	
  2733  0136                     l1621:	
  2734                           	line	162
  2735                           ;main.c: 162: while (!RB4);
  2736  0136  2937               	goto	l1622
  2737                           	
  2738  0137                     l1623:	
  2739                           	
  2740  0137                     l1622:	
  2741  0137  1E0D               	btfss	(108/8),(108)&7
  2742  0138  293A               	goto	u2921
  2743  0139  293B               	goto	u2920
  2744  013A                     u2921:
  2745  013A  2937               	goto	l1622
  2746  013B                     u2920:
  2747                           	
  2748  013B                     l1624:	
  2749                           	line	164
  2750                           ;main.c: 164: TMR1ON = 1;
  2751  013B  1418               	bsf	(192/8),(192)&7
  2752                           	line	165
  2753                           ;main.c: 165: while(RB4);
  2754  013C  293D               	goto	l1625
  2755                           	
  2756  013D                     l1626:	
  2757                           	
  2758  013D                     l1625:	
  2759  013D  1A0D               	btfsc	(108/8),(108)&7
  2760  013E  2940               	goto	u2931
  2761  013F  2941               	goto	u2930
  2762  0140                     u2931:
  2763  0140  293D               	goto	l1625
  2764  0141                     u2930:
  2765                           	
  2766  0141                     l1627:	
  2767                           	line	166
  2768                           ;main.c: 166: TMR1ON = 0;
  2769  0141  1018               	bcf	(192/8),(192)&7
  2770                           	line	170
  2771                           	
  2772  0142                     l5244:	
  2773                           ;main.c: 170: duration = TMR1;
  2774  0142  0817               	movf	(22+1),w	;volatile
  2775  0143  01FA               	clrf	(readChannel1@duration+1)	;volatile
  2776  0144  07FA               	addwf	(readChannel1@duration+1)	;volatile
  2777  0145  0816               	movf	(22),w	;volatile
  2778  0146  01F9               	clrf	(readChannel1@duration)	;volatile
  2779  0147  07F9               	addwf	(readChannel1@duration)	;volatile
  2780                           
  2781                           	line	171
  2782                           	
  2783  0148                     l5246:	
  2784                           ;main.c: 171: if (duration > 31326)
  2785  0148  087A               	movf	(readChannel1@duration+1),w
  2786  0149  3A80               	xorlw	80h
  2787  014A  00FF               	movwf	btemp+1
  2788  014B  30FA               	movlw	(high(07A5Fh))^80h
  2789  014C  027F               	subwf	btemp+1,w
  2790  014D  1D03               	skipz
  2791  014E  2951               	goto	u2945
  2792  014F  305F               	movlw	low(07A5Fh)
  2793  0150  0279               	subwf	(readChannel1@duration),w
  2794  0151                     u2945:
  2795                           
  2796  0151  1C03               	skipc
  2797  0152  2954               	goto	u2941
  2798  0153  2955               	goto	u2940
  2799  0154                     u2941:
  2800  0154  295A               	goto	l5250
  2801  0155                     u2940:
  2802                           	line	173
  2803                           	
  2804  0155                     l5248:	
  2805                           ;main.c: 172: {
  2806                           ;main.c: 173: duration = 31326;
  2807  0155  305E               	movlw	low(07A5Eh)
  2808  0156  00F9               	movwf	(readChannel1@duration)
  2809  0157  307A               	movlw	high(07A5Eh)
  2810  0158  00FA               	movwf	((readChannel1@duration))+1
  2811                           	line	174
  2812                           ;main.c: 174: }
  2813  0159  296D               	goto	l5254
  2814                           	line	175
  2815                           	
  2816  015A                     l1628:	
  2817                           	
  2818  015A                     l5250:	
  2819                           ;main.c: 175: else if (duration < 17506)
  2820  015A  087A               	movf	(readChannel1@duration+1),w
  2821  015B  3A80               	xorlw	80h
  2822  015C  00FF               	movwf	btemp+1
  2823  015D  30C4               	movlw	(high(04462h))^80h
  2824  015E  027F               	subwf	btemp+1,w
  2825  015F  1D03               	skipz
  2826  0160  2963               	goto	u2955
  2827  0161  3062               	movlw	low(04462h)
  2828  0162  0279               	subwf	(readChannel1@duration),w
  2829  0163                     u2955:
  2830                           
  2831  0163  1803               	skipnc
  2832  0164  2966               	goto	u2951
  2833  0165  2967               	goto	u2950
  2834  0166                     u2951:
  2835  0166  296D               	goto	l5254
  2836  0167                     u2950:
  2837                           	line	177
  2838                           	
  2839  0167                     l5252:	
  2840                           ;main.c: 176: {
  2841                           ;main.c: 177: duration = 17506;
  2842  0167  3062               	movlw	low(04462h)
  2843  0168  00F9               	movwf	(readChannel1@duration)
  2844  0169  3044               	movlw	high(04462h)
  2845  016A  00FA               	movwf	((readChannel1@duration))+1
  2846  016B  296D               	goto	l5254
  2847                           	line	178
  2848                           	
  2849  016C                     l1630:	
  2850  016C  296D               	goto	l5254
  2851                           	line	180
  2852                           	
  2853  016D                     l1629:	
  2854                           	
  2855  016D                     l5254:	
  2856                           ;main.c: 178: }
  2857                           ;main.c: 180: duration = (int)((duration - 17506)/54);
  2858  016D  3036               	movlw	low(036h)
  2859  016E  00F0               	movwf	(?___awdiv)
  2860  016F  3000               	movlw	high(036h)
  2861  0170  00F1               	movwf	((?___awdiv))+1
  2862  0171  0879               	movf	(readChannel1@duration),w
  2863  0172  3E9E               	addlw	low(-17506)
  2864  0173  00F2               	movwf	0+(?___awdiv)+02h
  2865  0174  30BB               	movlw	high(-17506)
  2866  0175  3D7A               	addwfc	(readChannel1@duration+1),w
  2867  0176  00F3               	movwf	1+0+(?___awdiv)+02h
  2868  0177  3184  240F  3181   	fcall	___awdiv
  2869  017A  0871               	movf	(1+(?___awdiv)),w
  2870  017B  01FA               	clrf	(readChannel1@duration+1)
  2871  017C  07FA               	addwf	(readChannel1@duration+1)
  2872  017D  0870               	movf	(0+(?___awdiv)),w
  2873  017E  01F9               	clrf	(readChannel1@duration)
  2874  017F  07F9               	addwf	(readChannel1@duration)
  2875                           
  2876                           	line	182
  2877                           	
  2878  0180                     l5256:	
  2879                           ;main.c: 182: return (char)duration;
  2880  0180  0879               	movf	(readChannel1@duration),w
  2881  0181  2982               	goto	l1631
  2882                           	
  2883  0182                     l5258:	
  2884                           	line	183
  2885                           	
  2886  0182                     l1631:	
  2887  0182  0008               	return
  2888                           	opt stack 0
  2889                           GLOBAL	__end_of_readChannel1
  2890  0183                     	__end_of_readChannel1:
  2891 ;; =============== function _readChannel1 ends ============
  2892                           
  2893                           	signat	_readChannel1,89
  2894                           	global	_readGyroYaw
  2895                           psect	text430,local,class=CODE,delta=2
  2896                           global __ptext430
  2897  02E4                     __ptext430:
  2898                           
  2899 ;; *************** function _readGyroYaw *****************
  2900 ;; Defined at:
  2901 ;;		line 419 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  calibration     2    9[COMMON] short 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  voltage         2    0[BANK0 ] int 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  2    9[COMMON] int 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2918 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2919 ;;Total ram usage:        6 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    1
  2922 ;; This function calls:
  2923 ;;		___awdiv
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;;		_calibrateGyros
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           psect	text430
  2930                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  2931                           	line	419
  2932                           	global	__size_of_readGyroYaw
  2933  005F                     	__size_of_readGyroYaw	equ	__end_of_readGyroYaw-_readGyroYaw
  2934                           	
  2935  02E4                     _readGyroYaw:	
  2936                           	opt	stack 14
  2937                           ; Regs used in _readGyroYaw: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2938                           	line	422
  2939                           	
  2940  02E4                     l5222:	
  2941                           ;main.c: 420: int voltage;
  2942                           ;main.c: 422: ADCON0 = 0b00100111;
  2943  02E4  3027               	movlw	(027h)
  2944  02E5  0021               	movlb 1	; select bank1
  2945  02E6  009D               	movwf	(157)^080h	;volatile
  2946                           	line	423
  2947                           ;main.c: 423: while (GO_nDONE);
  2948  02E7  2AE8               	goto	l1728
  2949                           	
  2950  02E8                     l1729:	
  2951                           	
  2952  02E8                     l1728:	
  2953  02E8  189D               	btfsc	(1257/8)^080h,(1257)&7
  2954  02E9  2AEB               	goto	u2871
  2955  02EA  2AEC               	goto	u2870
  2956  02EB                     u2871:
  2957  02EB  2AE8               	goto	l1728
  2958  02EC                     u2870:
  2959  02EC  2AED               	goto	l5224
  2960                           	
  2961  02ED                     l1730:	
  2962                           	line	424
  2963                           	
  2964  02ED                     l5224:	
  2965                           ;main.c: 424: voltage = ADRESH;
  2966  02ED  081C               	movf	(156)^080h,w	;volatile
  2967  02EE  00FB               	movwf	(??_readGyroYaw+0)+0
  2968  02EF  01FC               	clrf	(??_readGyroYaw+0)+0+1
  2969  02F0  087B               	movf	0+(??_readGyroYaw+0)+0,w
  2970  02F1  0020               	movlb 0	; select bank0
  2971  02F2  00C2               	movwf	(readGyroYaw@voltage)
  2972  02F3  087C               	movf	1+(??_readGyroYaw+0)+0,w
  2973  02F4  00C3               	movwf	(readGyroYaw@voltage+1)
  2974                           	line	425
  2975                           ;main.c: 425: voltage *= 256;
  2976  02F5  3008               	movlw	08h
  2977                           	
  2978  02F6                     u2885:
  2979  02F6  35C2               	lslf	(readGyroYaw@voltage),f
  2980  02F7  0DC3               	rlf	(readGyroYaw@voltage+1),f
  2981  02F8  0B89               	decfsz	wreg,f
  2982  02F9  2AF6               	goto	u2885
  2983                           	line	426
  2984                           ;main.c: 426: voltage += ADRESL;
  2985  02FA  0021               	movlb 1	; select bank1
  2986  02FB  081B               	movf	(155)^080h,w	;volatile
  2987  02FC  00FB               	movwf	(??_readGyroYaw+0)+0
  2988  02FD  01FC               	clrf	(??_readGyroYaw+0)+0+1
  2989  02FE  087B               	movf	0+(??_readGyroYaw+0)+0,w
  2990  02FF  0020               	movlb 0	; select bank0
  2991  0300  07C2               	addwf	(readGyroYaw@voltage),f
  2992  0301  087C               	movf	1+(??_readGyroYaw+0)+0,w
  2993  0302  3DC3               	addwfc	(readGyroYaw@voltage+1),f
  2994                           	line	428
  2995                           ;main.c: 428: if (calibration)
  2996  0303  087A               	movf	(readGyroYaw@calibration+1),w
  2997  0304  0479               	iorwf	(readGyroYaw@calibration),w
  2998  0305  1903               	skipnz
  2999  0306  2B08               	goto	u2891
  3000  0307  2B09               	goto	u2890
  3001  0308                     u2891:
  3002  0308  2B11               	goto	l5230
  3003  0309                     u2890:
  3004                           	line	430
  3005                           	
  3006  0309                     l5226:	
  3007                           ;main.c: 429: {
  3008                           ;main.c: 430: return voltage;
  3009  0309  0843               	movf	(readGyroYaw@voltage+1),w
  3010  030A  01FA               	clrf	(?_readGyroYaw+1)
  3011  030B  07FA               	addwf	(?_readGyroYaw+1)
  3012  030C  0842               	movf	(readGyroYaw@voltage),w
  3013  030D  01F9               	clrf	(?_readGyroYaw)
  3014  030E  07F9               	addwf	(?_readGyroYaw)
  3015                           
  3016  030F  2B42               	goto	l1732
  3017                           	
  3018  0310                     l5228:	
  3019  0310  2B42               	goto	l1732
  3020                           	line	431
  3021                           	
  3022  0311                     l1731:	
  3023                           	line	433
  3024                           	
  3025  0311                     l5230:	
  3026                           ;main.c: 431: }
  3027                           ;main.c: 433: yawAux += voltage;
  3028  0311  0842               	movf	(readGyroYaw@voltage),w
  3029  0312  07AE               	addwf	(_yawAux),f
  3030  0313  0843               	movf	(readGyroYaw@voltage+1),w
  3031  0314  3DAF               	addwfc	(_yawAux+1),f
  3032                           	line	434
  3033                           	
  3034  0315                     l5232:	
  3035                           ;main.c: 434: if (gyroReadNumber >= 2)
  3036  0315  0823               	movf	(_gyroReadNumber+1),w
  3037  0316  3A80               	xorlw	80h
  3038  0317  00FF               	movwf	btemp+1
  3039  0318  3080               	movlw	(high(02h))^80h
  3040  0319  027F               	subwf	btemp+1,w
  3041  031A  1D03               	skipz
  3042  031B  2B1E               	goto	u2905
  3043  031C  3002               	movlw	low(02h)
  3044  031D  0222               	subwf	(_gyroReadNumber),w
  3045  031E                     u2905:
  3046                           
  3047  031E  1C03               	skipc
  3048  031F  2B21               	goto	u2901
  3049  0320  2B22               	goto	u2900
  3050  0321                     u2901:
  3051  0321  2B3A               	goto	l5238
  3052  0322                     u2900:
  3053                           	line	436
  3054                           	
  3055  0322                     l5234:	
  3056                           ;main.c: 435: {
  3057                           ;main.c: 436: yaw = yawAux/2;
  3058  0322  3002               	movlw	low(02h)
  3059  0323  00F0               	movwf	(?___awdiv)
  3060  0324  3000               	movlw	high(02h)
  3061  0325  00F1               	movwf	((?___awdiv))+1
  3062  0326  0020               	movlb 0	; select bank0
  3063  0327  082F               	movf	(_yawAux+1),w
  3064  0328  01F3               	clrf	1+(?___awdiv)+02h
  3065  0329  07F3               	addwf	1+(?___awdiv)+02h
  3066  032A  082E               	movf	(_yawAux),w
  3067  032B  01F2               	clrf	0+(?___awdiv)+02h
  3068  032C  07F2               	addwf	0+(?___awdiv)+02h
  3069                           
  3070  032D  3184  240F  3182   	fcall	___awdiv
  3071  0330  0871               	movf	(1+(?___awdiv)),w
  3072  0331  0020               	movlb 0	; select bank0
  3073  0332  01AD               	clrf	(_yaw+1)
  3074  0333  07AD               	addwf	(_yaw+1)
  3075  0334  0870               	movf	(0+(?___awdiv)),w
  3076  0335  01AC               	clrf	(_yaw)
  3077  0336  07AC               	addwf	(_yaw)
  3078                           
  3079                           	line	437
  3080                           	
  3081  0337                     l5236:	
  3082                           ;main.c: 437: yawAux = 0;
  3083  0337  01AE               	clrf	(_yawAux)
  3084  0338  01AF               	clrf	(_yawAux+1)
  3085  0339  2B3A               	goto	l5238
  3086                           	line	438
  3087                           	
  3088  033A                     l1733:	
  3089                           	line	440
  3090                           	
  3091  033A                     l5238:	
  3092                           ;main.c: 438: }
  3093                           ;main.c: 440: return yaw;
  3094  033A  0020               	movlb 0	; select bank0
  3095  033B  082D               	movf	(_yaw+1),w
  3096  033C  01FA               	clrf	(?_readGyroYaw+1)
  3097  033D  07FA               	addwf	(?_readGyroYaw+1)
  3098  033E  082C               	movf	(_yaw),w
  3099  033F  01F9               	clrf	(?_readGyroYaw)
  3100  0340  07F9               	addwf	(?_readGyroYaw)
  3101                           
  3102  0341  2B42               	goto	l1732
  3103                           	
  3104  0342                     l5240:	
  3105                           	line	441
  3106                           	
  3107  0342                     l1732:	
  3108  0342  0008               	return
  3109                           	opt stack 0
  3110                           GLOBAL	__end_of_readGyroYaw
  3111  0343                     	__end_of_readGyroYaw:
  3112 ;; =============== function _readGyroYaw ends ============
  3113                           
  3114                           	signat	_readGyroYaw,4218
  3115                           	global	_readGyroRoll
  3116                           psect	text431,local,class=CODE,delta=2
  3117                           global __ptext431
  3118  0285                     __ptext431:
  3119                           
  3120 ;; *************** function _readGyroRoll *****************
  3121 ;; Defined at:
  3122 ;;		line 393 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  calibration     2    9[COMMON] short 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  voltage         2    0[BANK0 ] int 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  2    9[COMMON] int 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3139 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3140 ;;Total ram usage:        6 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    1
  3143 ;; This function calls:
  3144 ;;		___awdiv
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;;		_calibrateGyros
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           psect	text431
  3151                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  3152                           	line	393
  3153                           	global	__size_of_readGyroRoll
  3154  005F                     	__size_of_readGyroRoll	equ	__end_of_readGyroRoll-_readGyroRoll
  3155                           	
  3156  0285                     _readGyroRoll:	
  3157                           	opt	stack 14
  3158                           ; Regs used in _readGyroRoll: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3159                           	line	396
  3160                           	
  3161  0285                     l5202:	
  3162                           ;main.c: 394: int voltage;
  3163                           ;main.c: 396: ADCON0 = 0b00001111;
  3164  0285  300F               	movlw	(0Fh)
  3165  0286  0021               	movlb 1	; select bank1
  3166  0287  009D               	movwf	(157)^080h	;volatile
  3167                           	line	397
  3168                           ;main.c: 397: while (GO_nDONE);
  3169  0288  2A89               	goto	l1720
  3170                           	
  3171  0289                     l1721:	
  3172                           	
  3173  0289                     l1720:	
  3174  0289  189D               	btfsc	(1257/8)^080h,(1257)&7
  3175  028A  2A8C               	goto	u2831
  3176  028B  2A8D               	goto	u2830
  3177  028C                     u2831:
  3178  028C  2A89               	goto	l1720
  3179  028D                     u2830:
  3180  028D  2A8E               	goto	l5204
  3181                           	
  3182  028E                     l1722:	
  3183                           	line	398
  3184                           	
  3185  028E                     l5204:	
  3186                           ;main.c: 398: voltage = ADRESH;
  3187  028E  081C               	movf	(156)^080h,w	;volatile
  3188  028F  00FB               	movwf	(??_readGyroRoll+0)+0
  3189  0290  01FC               	clrf	(??_readGyroRoll+0)+0+1
  3190  0291  087B               	movf	0+(??_readGyroRoll+0)+0,w
  3191  0292  0020               	movlb 0	; select bank0
  3192  0293  00C2               	movwf	(readGyroRoll@voltage)
  3193  0294  087C               	movf	1+(??_readGyroRoll+0)+0,w
  3194  0295  00C3               	movwf	(readGyroRoll@voltage+1)
  3195                           	line	399
  3196                           ;main.c: 399: voltage *= 256;
  3197  0296  3008               	movlw	08h
  3198                           	
  3199  0297                     u2845:
  3200  0297  35C2               	lslf	(readGyroRoll@voltage),f
  3201  0298  0DC3               	rlf	(readGyroRoll@voltage+1),f
  3202  0299  0B89               	decfsz	wreg,f
  3203  029A  2A97               	goto	u2845
  3204                           	line	400
  3205                           ;main.c: 400: voltage += ADRESL;
  3206  029B  0021               	movlb 1	; select bank1
  3207  029C  081B               	movf	(155)^080h,w	;volatile
  3208  029D  00FB               	movwf	(??_readGyroRoll+0)+0
  3209  029E  01FC               	clrf	(??_readGyroRoll+0)+0+1
  3210  029F  087B               	movf	0+(??_readGyroRoll+0)+0,w
  3211  02A0  0020               	movlb 0	; select bank0
  3212  02A1  07C2               	addwf	(readGyroRoll@voltage),f
  3213  02A2  087C               	movf	1+(??_readGyroRoll+0)+0,w
  3214  02A3  3DC3               	addwfc	(readGyroRoll@voltage+1),f
  3215                           	line	402
  3216                           ;main.c: 402: if (calibration)
  3217  02A4  087A               	movf	(readGyroRoll@calibration+1),w
  3218  02A5  0479               	iorwf	(readGyroRoll@calibration),w
  3219  02A6  1903               	skipnz
  3220  02A7  2AA9               	goto	u2851
  3221  02A8  2AAA               	goto	u2850
  3222  02A9                     u2851:
  3223  02A9  2AB2               	goto	l5210
  3224  02AA                     u2850:
  3225                           	line	404
  3226                           	
  3227  02AA                     l5206:	
  3228                           ;main.c: 403: {
  3229                           ;main.c: 404: return voltage;
  3230  02AA  0843               	movf	(readGyroRoll@voltage+1),w
  3231  02AB  01FA               	clrf	(?_readGyroRoll+1)
  3232  02AC  07FA               	addwf	(?_readGyroRoll+1)
  3233  02AD  0842               	movf	(readGyroRoll@voltage),w
  3234  02AE  01F9               	clrf	(?_readGyroRoll)
  3235  02AF  07F9               	addwf	(?_readGyroRoll)
  3236                           
  3237  02B0  2AE3               	goto	l1724
  3238                           	
  3239  02B1                     l5208:	
  3240  02B1  2AE3               	goto	l1724
  3241                           	line	405
  3242                           	
  3243  02B2                     l1723:	
  3244                           	line	407
  3245                           	
  3246  02B2                     l5210:	
  3247                           ;main.c: 405: }
  3248                           ;main.c: 407: rollAux += voltage;
  3249  02B2  0842               	movf	(readGyroRoll@voltage),w
  3250  02B3  07AA               	addwf	(_rollAux),f
  3251  02B4  0843               	movf	(readGyroRoll@voltage+1),w
  3252  02B5  3DAB               	addwfc	(_rollAux+1),f
  3253                           	line	408
  3254                           	
  3255  02B6                     l5212:	
  3256                           ;main.c: 408: if (gyroReadNumber >= 2)
  3257  02B6  0823               	movf	(_gyroReadNumber+1),w
  3258  02B7  3A80               	xorlw	80h
  3259  02B8  00FF               	movwf	btemp+1
  3260  02B9  3080               	movlw	(high(02h))^80h
  3261  02BA  027F               	subwf	btemp+1,w
  3262  02BB  1D03               	skipz
  3263  02BC  2ABF               	goto	u2865
  3264  02BD  3002               	movlw	low(02h)
  3265  02BE  0222               	subwf	(_gyroReadNumber),w
  3266  02BF                     u2865:
  3267                           
  3268  02BF  1C03               	skipc
  3269  02C0  2AC2               	goto	u2861
  3270  02C1  2AC3               	goto	u2860
  3271  02C2                     u2861:
  3272  02C2  2ADB               	goto	l5218
  3273  02C3                     u2860:
  3274                           	line	410
  3275                           	
  3276  02C3                     l5214:	
  3277                           ;main.c: 409: {
  3278                           ;main.c: 410: roll = rollAux/2;
  3279  02C3  3002               	movlw	low(02h)
  3280  02C4  00F0               	movwf	(?___awdiv)
  3281  02C5  3000               	movlw	high(02h)
  3282  02C6  00F1               	movwf	((?___awdiv))+1
  3283  02C7  0020               	movlb 0	; select bank0
  3284  02C8  082B               	movf	(_rollAux+1),w
  3285  02C9  01F3               	clrf	1+(?___awdiv)+02h
  3286  02CA  07F3               	addwf	1+(?___awdiv)+02h
  3287  02CB  082A               	movf	(_rollAux),w
  3288  02CC  01F2               	clrf	0+(?___awdiv)+02h
  3289  02CD  07F2               	addwf	0+(?___awdiv)+02h
  3290                           
  3291  02CE  3184  240F  3182   	fcall	___awdiv
  3292  02D1  0871               	movf	(1+(?___awdiv)),w
  3293  02D2  0020               	movlb 0	; select bank0
  3294  02D3  01A9               	clrf	(_roll+1)
  3295  02D4  07A9               	addwf	(_roll+1)
  3296  02D5  0870               	movf	(0+(?___awdiv)),w
  3297  02D6  01A8               	clrf	(_roll)
  3298  02D7  07A8               	addwf	(_roll)
  3299                           
  3300                           	line	411
  3301                           	
  3302  02D8                     l5216:	
  3303                           ;main.c: 411: rollAux = 0;
  3304  02D8  01AA               	clrf	(_rollAux)
  3305  02D9  01AB               	clrf	(_rollAux+1)
  3306  02DA  2ADB               	goto	l5218
  3307                           	line	412
  3308                           	
  3309  02DB                     l1725:	
  3310                           	line	414
  3311                           	
  3312  02DB                     l5218:	
  3313                           ;main.c: 412: }
  3314                           ;main.c: 414: return roll;
  3315  02DB  0020               	movlb 0	; select bank0
  3316  02DC  0829               	movf	(_roll+1),w
  3317  02DD  01FA               	clrf	(?_readGyroRoll+1)
  3318  02DE  07FA               	addwf	(?_readGyroRoll+1)
  3319  02DF  0828               	movf	(_roll),w
  3320  02E0  01F9               	clrf	(?_readGyroRoll)
  3321  02E1  07F9               	addwf	(?_readGyroRoll)
  3322                           
  3323  02E2  2AE3               	goto	l1724
  3324                           	
  3325  02E3                     l5220:	
  3326                           	line	415
  3327                           	
  3328  02E3                     l1724:	
  3329  02E3  0008               	return
  3330                           	opt stack 0
  3331                           GLOBAL	__end_of_readGyroRoll
  3332  02E4                     	__end_of_readGyroRoll:
  3333 ;; =============== function _readGyroRoll ends ============
  3334                           
  3335                           	signat	_readGyroRoll,4218
  3336                           	global	_readGyroPitch
  3337                           psect	text432,local,class=CODE,delta=2
  3338                           global __ptext432
  3339  0343                     __ptext432:
  3340                           
  3341 ;; *************** function _readGyroPitch *****************
  3342 ;; Defined at:
  3343 ;;		line 365 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  calibration     2    9[COMMON] short 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  voltage         2    2[BANK0 ] int 
  3348 ;;  test            2    0[BANK0 ] int 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    9[COMMON] int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3361 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3362 ;;Total ram usage:        8 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		___awdiv
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;;		_calibrateGyros
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           psect	text432
  3373                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  3374                           	line	365
  3375                           	global	__size_of_readGyroPitch
  3376  0063                     	__size_of_readGyroPitch	equ	__end_of_readGyroPitch-_readGyroPitch
  3377                           	
  3378  0343                     _readGyroPitch:	
  3379                           	opt	stack 14
  3380                           ; Regs used in _readGyroPitch: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3381                           	line	367
  3382                           	
  3383  0343                     l5178:	
  3384                           ;main.c: 366: int voltage;
  3385                           ;main.c: 367: int test = 0;
  3386  0343  0020               	movlb 0	; select bank0
  3387  0344  01C2               	clrf	(readGyroPitch@test)
  3388  0345  01C3               	clrf	(readGyroPitch@test+1)
  3389                           	line	368
  3390                           	
  3391  0346                     l5180:	
  3392                           ;main.c: 368: ADCON0 = 0b00001001;
  3393  0346  3009               	movlw	(09h)
  3394  0347  0021               	movlb 1	; select bank1
  3395  0348  009D               	movwf	(157)^080h	;volatile
  3396                           	line	369
  3397                           	
  3398  0349                     l5182:	
  3399                           ;main.c: 369: GO_nDONE = 1;
  3400  0349  149D               	bsf	(1257/8)^080h,(1257)&7
  3401                           	line	370
  3402                           ;main.c: 370: while (GO_nDONE);
  3403  034A  2B4B               	goto	l1712
  3404                           	
  3405  034B                     l1713:	
  3406                           	
  3407  034B                     l1712:	
  3408  034B  189D               	btfsc	(1257/8)^080h,(1257)&7
  3409  034C  2B4E               	goto	u2791
  3410  034D  2B4F               	goto	u2790
  3411  034E                     u2791:
  3412  034E  2B4B               	goto	l1712
  3413  034F                     u2790:
  3414  034F  2B50               	goto	l5184
  3415                           	
  3416  0350                     l1714:	
  3417                           	line	372
  3418                           	
  3419  0350                     l5184:	
  3420                           ;main.c: 372: voltage = ADRESH;
  3421  0350  081C               	movf	(156)^080h,w	;volatile
  3422  0351  00FB               	movwf	(??_readGyroPitch+0)+0
  3423  0352  01FC               	clrf	(??_readGyroPitch+0)+0+1
  3424  0353  087B               	movf	0+(??_readGyroPitch+0)+0,w
  3425  0354  0020               	movlb 0	; select bank0
  3426  0355  00C4               	movwf	(readGyroPitch@voltage)
  3427  0356  087C               	movf	1+(??_readGyroPitch+0)+0,w
  3428  0357  00C5               	movwf	(readGyroPitch@voltage+1)
  3429                           	line	373
  3430                           ;main.c: 373: voltage *= 256;
  3431  0358  3008               	movlw	08h
  3432                           	
  3433  0359                     u2805:
  3434  0359  35C4               	lslf	(readGyroPitch@voltage),f
  3435  035A  0DC5               	rlf	(readGyroPitch@voltage+1),f
  3436  035B  0B89               	decfsz	wreg,f
  3437  035C  2B59               	goto	u2805
  3438                           	line	374
  3439                           ;main.c: 374: voltage += ADRESL;
  3440  035D  0021               	movlb 1	; select bank1
  3441  035E  081B               	movf	(155)^080h,w	;volatile
  3442  035F  00FB               	movwf	(??_readGyroPitch+0)+0
  3443  0360  01FC               	clrf	(??_readGyroPitch+0)+0+1
  3444  0361  087B               	movf	0+(??_readGyroPitch+0)+0,w
  3445  0362  0020               	movlb 0	; select bank0
  3446  0363  07C4               	addwf	(readGyroPitch@voltage),f
  3447  0364  087C               	movf	1+(??_readGyroPitch+0)+0,w
  3448  0365  3DC5               	addwfc	(readGyroPitch@voltage+1),f
  3449                           	line	376
  3450                           ;main.c: 376: if (calibration)
  3451  0366  087A               	movf	(readGyroPitch@calibration+1),w
  3452  0367  0479               	iorwf	(readGyroPitch@calibration),w
  3453  0368  1903               	skipnz
  3454  0369  2B6B               	goto	u2811
  3455  036A  2B6C               	goto	u2810
  3456  036B                     u2811:
  3457  036B  2B74               	goto	l5190
  3458  036C                     u2810:
  3459                           	line	378
  3460                           	
  3461  036C                     l5186:	
  3462                           ;main.c: 377: {
  3463                           ;main.c: 378: return voltage;
  3464  036C  0845               	movf	(readGyroPitch@voltage+1),w
  3465  036D  01FA               	clrf	(?_readGyroPitch+1)
  3466  036E  07FA               	addwf	(?_readGyroPitch+1)
  3467  036F  0844               	movf	(readGyroPitch@voltage),w
  3468  0370  01F9               	clrf	(?_readGyroPitch)
  3469  0371  07F9               	addwf	(?_readGyroPitch)
  3470                           
  3471  0372  2BA5               	goto	l1716
  3472                           	
  3473  0373                     l5188:	
  3474  0373  2BA5               	goto	l1716
  3475                           	line	379
  3476                           	
  3477  0374                     l1715:	
  3478                           	line	381
  3479                           	
  3480  0374                     l5190:	
  3481                           ;main.c: 379: }
  3482                           ;main.c: 381: pitchAux += voltage;
  3483  0374  0844               	movf	(readGyroPitch@voltage),w
  3484  0375  07A6               	addwf	(_pitchAux),f
  3485  0376  0845               	movf	(readGyroPitch@voltage+1),w
  3486  0377  3DA7               	addwfc	(_pitchAux+1),f
  3487                           	line	382
  3488                           	
  3489  0378                     l5192:	
  3490                           ;main.c: 382: if (gyroReadNumber >= 2)
  3491  0378  0823               	movf	(_gyroReadNumber+1),w
  3492  0379  3A80               	xorlw	80h
  3493  037A  00FF               	movwf	btemp+1
  3494  037B  3080               	movlw	(high(02h))^80h
  3495  037C  027F               	subwf	btemp+1,w
  3496  037D  1D03               	skipz
  3497  037E  2B81               	goto	u2825
  3498  037F  3002               	movlw	low(02h)
  3499  0380  0222               	subwf	(_gyroReadNumber),w
  3500  0381                     u2825:
  3501                           
  3502  0381  1C03               	skipc
  3503  0382  2B84               	goto	u2821
  3504  0383  2B85               	goto	u2820
  3505  0384                     u2821:
  3506  0384  2B9D               	goto	l5198
  3507  0385                     u2820:
  3508                           	line	384
  3509                           	
  3510  0385                     l5194:	
  3511                           ;main.c: 383: {
  3512                           ;main.c: 384: pitch = pitchAux/2;
  3513  0385  3002               	movlw	low(02h)
  3514  0386  00F0               	movwf	(?___awdiv)
  3515  0387  3000               	movlw	high(02h)
  3516  0388  00F1               	movwf	((?___awdiv))+1
  3517  0389  0020               	movlb 0	; select bank0
  3518  038A  0827               	movf	(_pitchAux+1),w
  3519  038B  01F3               	clrf	1+(?___awdiv)+02h
  3520  038C  07F3               	addwf	1+(?___awdiv)+02h
  3521  038D  0826               	movf	(_pitchAux),w
  3522  038E  01F2               	clrf	0+(?___awdiv)+02h
  3523  038F  07F2               	addwf	0+(?___awdiv)+02h
  3524                           
  3525  0390  3184  240F  3183   	fcall	___awdiv
  3526  0393  0871               	movf	(1+(?___awdiv)),w
  3527  0394  0020               	movlb 0	; select bank0
  3528  0395  01A5               	clrf	(_pitch+1)
  3529  0396  07A5               	addwf	(_pitch+1)
  3530  0397  0870               	movf	(0+(?___awdiv)),w
  3531  0398  01A4               	clrf	(_pitch)
  3532  0399  07A4               	addwf	(_pitch)
  3533                           
  3534                           	line	385
  3535                           	
  3536  039A                     l5196:	
  3537                           ;main.c: 385: pitchAux = 0;
  3538  039A  01A6               	clrf	(_pitchAux)
  3539  039B  01A7               	clrf	(_pitchAux+1)
  3540  039C  2B9D               	goto	l5198
  3541                           	line	386
  3542                           	
  3543  039D                     l1717:	
  3544                           	line	388
  3545                           	
  3546  039D                     l5198:	
  3547                           ;main.c: 386: }
  3548                           ;main.c: 388: return pitch;
  3549  039D  0020               	movlb 0	; select bank0
  3550  039E  0825               	movf	(_pitch+1),w
  3551  039F  01FA               	clrf	(?_readGyroPitch+1)
  3552  03A0  07FA               	addwf	(?_readGyroPitch+1)
  3553  03A1  0824               	movf	(_pitch),w
  3554  03A2  01F9               	clrf	(?_readGyroPitch)
  3555  03A3  07F9               	addwf	(?_readGyroPitch)
  3556                           
  3557  03A4  2BA5               	goto	l1716
  3558                           	
  3559  03A5                     l5200:	
  3560                           	line	389
  3561                           	
  3562  03A5                     l1716:	
  3563  03A5  0008               	return
  3564                           	opt stack 0
  3565                           GLOBAL	__end_of_readGyroPitch
  3566  03A6                     	__end_of_readGyroPitch:
  3567 ;; =============== function _readGyroPitch ends ============
  3568                           
  3569                           	signat	_readGyroPitch,4218
  3570                           	global	_calculate
  3571                           psect	text433,local,class=CODE,delta=2
  3572                           global __ptext433
  3573  056F                     __ptext433:
  3574                           
  3575 ;; *************** function _calculate *****************
  3576 ;; Defined at:
  3577 ;;		line 543 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  yawAux          2    4[BANK0 ] int 
  3582 ;;  rollAux         2    2[BANK0 ] int 
  3583 ;;  pitchAux        2    0[BANK0 ] int 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;		None               void
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3594 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  3595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3596 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  3597 ;;Total ram usage:        9 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    1
  3600 ;; This function calls:
  3601 ;;		_filter
  3602 ;;		___awdiv
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           psect	text433
  3608                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  3609                           	line	543
  3610                           	global	__size_of_calculate
  3611  0291                     	__size_of_calculate	equ	__end_of_calculate-_calculate
  3612                           	
  3613  056F                     _calculate:	
  3614                           	opt	stack 14
  3615                           ; Regs used in _calculate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3616                           	line	544
  3617                           	
  3618  056F                     l5136:	
  3619                           ;main.c: 544: int pitchAux = pitch;
  3620  056F  0020               	movlb 0	; select bank0
  3621  0570  0825               	movf	(_pitch+1),w
  3622  0571  01C3               	clrf	(calculate@pitchAux+1)
  3623  0572  07C3               	addwf	(calculate@pitchAux+1)
  3624  0573  0824               	movf	(_pitch),w
  3625  0574  01C2               	clrf	(calculate@pitchAux)
  3626  0575  07C2               	addwf	(calculate@pitchAux)
  3627                           
  3628                           	line	545
  3629                           ;main.c: 545: int rollAux = roll;
  3630  0576  0829               	movf	(_roll+1),w
  3631  0577  01C5               	clrf	(calculate@rollAux+1)
  3632  0578  07C5               	addwf	(calculate@rollAux+1)
  3633  0579  0828               	movf	(_roll),w
  3634  057A  01C4               	clrf	(calculate@rollAux)
  3635  057B  07C4               	addwf	(calculate@rollAux)
  3636                           
  3637                           	line	546
  3638                           ;main.c: 546: int yawAux = yaw;
  3639  057C  082D               	movf	(_yaw+1),w
  3640  057D  01C7               	clrf	(calculate@yawAux+1)
  3641  057E  07C7               	addwf	(calculate@yawAux+1)
  3642  057F  082C               	movf	(_yaw),w
  3643  0580  01C6               	clrf	(calculate@yawAux)
  3644  0581  07C6               	addwf	(calculate@yawAux)
  3645                           
  3646                           	line	548
  3647                           	
  3648  0582                     l5138:	
  3649                           ;main.c: 548: inputControl1 = filter(inputControl1);
  3650  0582  0836               	movf	(_inputControl1),w
  3651  0583  00F9               	movwf	(??_calculate+0)+0
  3652  0584  01FA               	clrf	(??_calculate+0)+0+1
  3653  0585  0879               	movf	0+(??_calculate+0)+0,w
  3654  0586  00F0               	movwf	(?_filter)
  3655  0587  087A               	movf	1+(??_calculate+0)+0,w
  3656  0588  00F1               	movwf	(?_filter+1)
  3657  0589  3181  2106  3185   	fcall	_filter
  3658  058C  00FB               	movwf	(??_calculate+2)+0
  3659  058D  087B               	movf	(??_calculate+2)+0,w
  3660  058E  0020               	movlb 0	; select bank0
  3661  058F  00B6               	movwf	(_inputControl1)
  3662                           	line	549
  3663                           	
  3664  0590                     l5140:	
  3665                           ;main.c: 549: inputControl2 = filter(inputControl2);
  3666  0590  0837               	movf	(_inputControl2),w
  3667  0591  00F9               	movwf	(??_calculate+0)+0
  3668  0592  01FA               	clrf	(??_calculate+0)+0+1
  3669  0593  0879               	movf	0+(??_calculate+0)+0,w
  3670  0594  00F0               	movwf	(?_filter)
  3671  0595  087A               	movf	1+(??_calculate+0)+0,w
  3672  0596  00F1               	movwf	(?_filter+1)
  3673  0597  3181  2106  3185   	fcall	_filter
  3674  059A  00FB               	movwf	(??_calculate+2)+0
  3675  059B  087B               	movf	(??_calculate+2)+0,w
  3676  059C  0020               	movlb 0	; select bank0
  3677  059D  00B7               	movwf	(_inputControl2)
  3678                           	line	550
  3679                           	
  3680  059E                     l5142:	
  3681                           ;main.c: 550: inputControl3 = filter(inputControl3);
  3682  059E  0838               	movf	(_inputControl3),w
  3683  059F  00F9               	movwf	(??_calculate+0)+0
  3684  05A0  01FA               	clrf	(??_calculate+0)+0+1
  3685  05A1  0879               	movf	0+(??_calculate+0)+0,w
  3686  05A2  00F0               	movwf	(?_filter)
  3687  05A3  087A               	movf	1+(??_calculate+0)+0,w
  3688  05A4  00F1               	movwf	(?_filter+1)
  3689  05A5  3181  2106  3185   	fcall	_filter
  3690  05A8  00FB               	movwf	(??_calculate+2)+0
  3691  05A9  087B               	movf	(??_calculate+2)+0,w
  3692  05AA  0020               	movlb 0	; select bank0
  3693  05AB  00B8               	movwf	(_inputControl3)
  3694                           	line	551
  3695                           	
  3696  05AC                     l5144:	
  3697                           ;main.c: 551: inputControl4 = filter(inputControl4);
  3698  05AC  0839               	movf	(_inputControl4),w
  3699  05AD  00F9               	movwf	(??_calculate+0)+0
  3700  05AE  01FA               	clrf	(??_calculate+0)+0+1
  3701  05AF  0879               	movf	0+(??_calculate+0)+0,w
  3702  05B0  00F0               	movwf	(?_filter)
  3703  05B1  087A               	movf	1+(??_calculate+0)+0,w
  3704  05B2  00F1               	movwf	(?_filter+1)
  3705  05B3  3181  2106  3185   	fcall	_filter
  3706  05B6  00FB               	movwf	(??_calculate+2)+0
  3707  05B7  087B               	movf	(??_calculate+2)+0,w
  3708  05B8  0020               	movlb 0	; select bank0
  3709  05B9  00B9               	movwf	(_inputControl4)
  3710                           	line	553
  3711                           ;main.c: 553: motor1 = motor2 = motor3 = motor4 = inputControl3;
  3712  05BA  0838               	movf	(_inputControl3),w
  3713  05BB  00F9               	movwf	(??_calculate+0)+0
  3714  05BC  01FA               	clrf	(??_calculate+0)+0+1
  3715  05BD  0879               	movf	0+(??_calculate+0)+0,w
  3716  05BE  00C0               	movwf	(_motor4)
  3717  05BF  087A               	movf	1+(??_calculate+0)+0,w
  3718  05C0  00C1               	movwf	(_motor4+1)
  3719  05C1  0841               	movf	((_motor4+1)),w
  3720  05C2  01BF               	clrf	(_motor3+1)
  3721  05C3  07BF               	addwf	(_motor3+1)
  3722  05C4  0840               	movf	((_motor4)),w
  3723  05C5  01BE               	clrf	(_motor3)
  3724  05C6  07BE               	addwf	(_motor3)
  3725                           
  3726  05C7  083F               	movf	((_motor3+1)),w
  3727  05C8  01BD               	clrf	(_motor2+1)
  3728  05C9  07BD               	addwf	(_motor2+1)
  3729  05CA  083E               	movf	((_motor3)),w
  3730  05CB  01BC               	clrf	(_motor2)
  3731  05CC  07BC               	addwf	(_motor2)
  3732                           
  3733  05CD  083D               	movf	((_motor2+1)),w
  3734  05CE  01BB               	clrf	(_motor1+1)
  3735  05CF  07BB               	addwf	(_motor1+1)
  3736  05D0  083C               	movf	((_motor2)),w
  3737  05D1  01BA               	clrf	(_motor1)
  3738  05D2  07BA               	addwf	(_motor1)
  3739                           
  3740                           	line	554
  3741                           	
  3742  05D3                     l5146:	
  3743                           ;main.c: 554: pitchAux += ((inputControl2 - 132)/2);
  3744  05D3  3002               	movlw	low(02h)
  3745  05D4  00F0               	movwf	(?___awdiv)
  3746  05D5  3000               	movlw	high(02h)
  3747  05D6  00F1               	movwf	((?___awdiv))+1
  3748  05D7  0837               	movf	(_inputControl2),w
  3749  05D8  3E7C               	addlw	low(-132)
  3750  05D9  00F2               	movwf	0+(?___awdiv)+02h
  3751  05DA  30FF               	movlw	high(-132)
  3752  05DB  1803               	skipnc
  3753  05DC  3000               	movlw	(high(-132)+1)&0ffh
  3754  05DD  00F3               	movwf	(0+(?___awdiv)+02h)+1
  3755  05DE  3184  240F  3185   	fcall	___awdiv
  3756  05E1  0870               	movf	(0+(?___awdiv)),w
  3757  05E2  0020               	movlb 0	; select bank0
  3758  05E3  07C2               	addwf	(calculate@pitchAux),f
  3759  05E4  0871               	movf	(1+(?___awdiv)),w
  3760  05E5  3DC3               	addwfc	(calculate@pitchAux+1),f
  3761                           	line	555
  3762                           	
  3763  05E6                     l5148:	
  3764                           ;main.c: 555: rollAux += ((inputControl4 - 128)/2);
  3765  05E6  3002               	movlw	low(02h)
  3766  05E7  00F0               	movwf	(?___awdiv)
  3767  05E8  3000               	movlw	high(02h)
  3768  05E9  00F1               	movwf	((?___awdiv))+1
  3769  05EA  0839               	movf	(_inputControl4),w
  3770  05EB  3E80               	addlw	low(-128)
  3771  05EC  00F2               	movwf	0+(?___awdiv)+02h
  3772  05ED  30FF               	movlw	high(-128)
  3773  05EE  1803               	skipnc
  3774  05EF  3000               	movlw	(high(-128)+1)&0ffh
  3775  05F0  00F3               	movwf	(0+(?___awdiv)+02h)+1
  3776  05F1  3184  240F  3185   	fcall	___awdiv
  3777  05F4  0870               	movf	(0+(?___awdiv)),w
  3778  05F5  0020               	movlb 0	; select bank0
  3779  05F6  07C4               	addwf	(calculate@rollAux),f
  3780  05F7  0871               	movf	(1+(?___awdiv)),w
  3781  05F8  3DC5               	addwfc	(calculate@rollAux+1),f
  3782                           	line	556
  3783                           	
  3784  05F9                     l5150:	
  3785                           ;main.c: 556: yawAux += ((inputControl1 - 128)/2);
  3786  05F9  3002               	movlw	low(02h)
  3787  05FA  00F0               	movwf	(?___awdiv)
  3788  05FB  3000               	movlw	high(02h)
  3789  05FC  00F1               	movwf	((?___awdiv))+1
  3790  05FD  0836               	movf	(_inputControl1),w
  3791  05FE  3E80               	addlw	low(-128)
  3792  05FF  00F2               	movwf	0+(?___awdiv)+02h
  3793  0600  30FF               	movlw	high(-128)
  3794  0601  1803               	skipnc
  3795  0602  3000               	movlw	(high(-128)+1)&0ffh
  3796  0603  00F3               	movwf	(0+(?___awdiv)+02h)+1
  3797  0604  3184  240F  3185   	fcall	___awdiv
  3798  0607  0870               	movf	(0+(?___awdiv)),w
  3799  0608  0020               	movlb 0	; select bank0
  3800  0609  07C6               	addwf	(calculate@yawAux),f
  3801  060A  0871               	movf	(1+(?___awdiv)),w
  3802  060B  3DC7               	addwfc	(calculate@yawAux+1),f
  3803                           	line	558
  3804                           	
  3805  060C                     l5152:	
  3806                           ;main.c: 558: if (!((pitchAux > zeroGyroPitch - 5) && (pitchAux < zeroGyroPitch + 5)))
  3807  060C  0830               	movf	(_zeroGyroPitch),w
  3808  060D  3EFB               	addlw	low(-5)
  3809  060E  00F9               	movwf	(??_calculate+0)+0
  3810  060F  30FF               	movlw	high(-5)
  3811  0610  3D31               	addwfc	(_zeroGyroPitch+1),w
  3812  0611  00FA               	movwf	1+(??_calculate+0)+0
  3813  0612  087A               	movf	1+(??_calculate+0)+0,w
  3814  0613  3A80               	xorlw	80h
  3815  0614  00FB               	movwf	(??_calculate+2)+0
  3816  0615  0843               	movf	(calculate@pitchAux+1),w
  3817  0616  3A80               	xorlw	80h
  3818  0617  027B               	subwf	(??_calculate+2)+0,w
  3819  0618  1D03               	skipz
  3820  0619  2E1C               	goto	u2735
  3821  061A  0842               	movf	(calculate@pitchAux),w
  3822  061B  0279               	subwf	0+(??_calculate+0)+0,w
  3823  061C                     u2735:
  3824                           
  3825  061C  1803               	skipnc
  3826  061D  2E1F               	goto	u2731
  3827  061E  2E20               	goto	u2730
  3828  061F                     u2731:
  3829  061F  2E36               	goto	l5156
  3830  0620                     u2730:
  3831                           	
  3832  0620                     l5154:	
  3833  0620  0020               	movlb 0	; select bank0
  3834  0621  0830               	movf	(_zeroGyroPitch),w
  3835  0622  3E05               	addlw	low(05h)
  3836  0623  00F9               	movwf	(??_calculate+0)+0
  3837  0624  3000               	movlw	high(05h)
  3838  0625  3D31               	addwfc	(_zeroGyroPitch+1),w
  3839  0626  00FA               	movwf	1+(??_calculate+0)+0
  3840  0627  0843               	movf	(calculate@pitchAux+1),w
  3841  0628  3A80               	xorlw	80h
  3842  0629  00FB               	movwf	(??_calculate+2)+0
  3843  062A  087A               	movf	1+(??_calculate+0)+0,w
  3844  062B  3A80               	xorlw	80h
  3845  062C  027B               	subwf	(??_calculate+2)+0,w
  3846  062D  1D03               	skipz
  3847  062E  2E31               	goto	u2745
  3848  062F  0879               	movf	0+(??_calculate+0)+0,w
  3849  0630  0242               	subwf	(calculate@pitchAux),w
  3850  0631                     u2745:
  3851                           
  3852  0631  1C03               	skipc
  3853  0632  2E34               	goto	u2741
  3854  0633  2E35               	goto	u2740
  3855  0634                     u2741:
  3856  0634  2E9C               	goto	l5158
  3857  0635                     u2740:
  3858  0635  2E36               	goto	l5156
  3859                           	
  3860  0636                     l1744:	
  3861                           	line	561
  3862                           	
  3863  0636                     l5156:	
  3864                           ;main.c: 559: {
  3865                           ;main.c: 561: motor1 += ((pitchAux - zeroGyroPitch)/8);
  3866  0636  3008               	movlw	low(08h)
  3867  0637  00F0               	movwf	(?___awdiv)
  3868  0638  3000               	movlw	high(08h)
  3869  0639  00F1               	movwf	((?___awdiv))+1
  3870  063A  0020               	movlb 0	; select bank0
  3871  063B  0930               	comf	(_zeroGyroPitch),w
  3872  063C  00F9               	movwf	(??_calculate+0)+0
  3873  063D  0931               	comf	(_zeroGyroPitch+1),w
  3874  063E  00FA               	movwf	((??_calculate+0)+0+1)
  3875  063F  0AF9               	incf	(??_calculate+0)+0,f
  3876  0640  1903               	skipnz
  3877  0641  0AFA               	incf	((??_calculate+0)+0+1),f
  3878  0642  0842               	movf	(calculate@pitchAux),w
  3879  0643  0779               	addwf	0+(??_calculate+0)+0,w
  3880  0644  00F2               	movwf	0+(?___awdiv)+02h
  3881  0645  0843               	movf	(calculate@pitchAux+1),w
  3882  0646  3D7A               	addwfc	1+(??_calculate+0)+0,w
  3883  0647  00F3               	movwf	1+0+(?___awdiv)+02h
  3884  0648  3184  240F  3185   	fcall	___awdiv
  3885  064B  0870               	movf	(0+(?___awdiv)),w
  3886  064C  0020               	movlb 0	; select bank0
  3887  064D  07BA               	addwf	(_motor1),f
  3888  064E  0871               	movf	(1+(?___awdiv)),w
  3889  064F  3DBB               	addwfc	(_motor1+1),f
  3890                           	line	562
  3891                           ;main.c: 562: motor2 += ((pitchAux - zeroGyroPitch)/8);
  3892  0650  3008               	movlw	low(08h)
  3893  0651  00F0               	movwf	(?___awdiv)
  3894  0652  3000               	movlw	high(08h)
  3895  0653  00F1               	movwf	((?___awdiv))+1
  3896  0654  0930               	comf	(_zeroGyroPitch),w
  3897  0655  00F9               	movwf	(??_calculate+0)+0
  3898  0656  0931               	comf	(_zeroGyroPitch+1),w
  3899  0657  00FA               	movwf	((??_calculate+0)+0+1)
  3900  0658  0AF9               	incf	(??_calculate+0)+0,f
  3901  0659  1903               	skipnz
  3902  065A  0AFA               	incf	((??_calculate+0)+0+1),f
  3903  065B  0842               	movf	(calculate@pitchAux),w
  3904  065C  0779               	addwf	0+(??_calculate+0)+0,w
  3905  065D  00F2               	movwf	0+(?___awdiv)+02h
  3906  065E  0843               	movf	(calculate@pitchAux+1),w
  3907  065F  3D7A               	addwfc	1+(??_calculate+0)+0,w
  3908  0660  00F3               	movwf	1+0+(?___awdiv)+02h
  3909  0661  3184  240F  3185   	fcall	___awdiv
  3910  0664  0870               	movf	(0+(?___awdiv)),w
  3911  0665  0020               	movlb 0	; select bank0
  3912  0666  07BC               	addwf	(_motor2),f
  3913  0667  0871               	movf	(1+(?___awdiv)),w
  3914  0668  3DBD               	addwfc	(_motor2+1),f
  3915                           	line	563
  3916                           ;main.c: 563: motor3 -= ((pitchAux - zeroGyroPitch)/8);
  3917  0669  3008               	movlw	low(08h)
  3918  066A  00F0               	movwf	(?___awdiv)
  3919  066B  3000               	movlw	high(08h)
  3920  066C  00F1               	movwf	((?___awdiv))+1
  3921  066D  0930               	comf	(_zeroGyroPitch),w
  3922  066E  00F9               	movwf	(??_calculate+0)+0
  3923  066F  0931               	comf	(_zeroGyroPitch+1),w
  3924  0670  00FA               	movwf	((??_calculate+0)+0+1)
  3925  0671  0AF9               	incf	(??_calculate+0)+0,f
  3926  0672  1903               	skipnz
  3927  0673  0AFA               	incf	((??_calculate+0)+0+1),f
  3928  0674  0842               	movf	(calculate@pitchAux),w
  3929  0675  0779               	addwf	0+(??_calculate+0)+0,w
  3930  0676  00F2               	movwf	0+(?___awdiv)+02h
  3931  0677  0843               	movf	(calculate@pitchAux+1),w
  3932  0678  3D7A               	addwfc	1+(??_calculate+0)+0,w
  3933  0679  00F3               	movwf	1+0+(?___awdiv)+02h
  3934  067A  3184  240F  3185   	fcall	___awdiv
  3935  067D  0870               	movf	(0+(?___awdiv)),w
  3936  067E  0020               	movlb 0	; select bank0
  3937  067F  02BE               	subwf	(_motor3),f
  3938  0680  0871               	movf	(1+(?___awdiv)),w
  3939  0681  3BBF               	subwfb	(_motor3+1),f
  3940                           	line	564
  3941                           ;main.c: 564: motor4 -= ((pitchAux - zeroGyroPitch)/8);
  3942  0682  3008               	movlw	low(08h)
  3943  0683  00F0               	movwf	(?___awdiv)
  3944  0684  3000               	movlw	high(08h)
  3945  0685  00F1               	movwf	((?___awdiv))+1
  3946  0686  0930               	comf	(_zeroGyroPitch),w
  3947  0687  00F9               	movwf	(??_calculate+0)+0
  3948  0688  0931               	comf	(_zeroGyroPitch+1),w
  3949  0689  00FA               	movwf	((??_calculate+0)+0+1)
  3950  068A  0AF9               	incf	(??_calculate+0)+0,f
  3951  068B  1903               	skipnz
  3952  068C  0AFA               	incf	((??_calculate+0)+0+1),f
  3953  068D  0842               	movf	(calculate@pitchAux),w
  3954  068E  0779               	addwf	0+(??_calculate+0)+0,w
  3955  068F  00F2               	movwf	0+(?___awdiv)+02h
  3956  0690  0843               	movf	(calculate@pitchAux+1),w
  3957  0691  3D7A               	addwfc	1+(??_calculate+0)+0,w
  3958  0692  00F3               	movwf	1+0+(?___awdiv)+02h
  3959  0693  3184  240F  3185   	fcall	___awdiv
  3960  0696  0870               	movf	(0+(?___awdiv)),w
  3961  0697  0020               	movlb 0	; select bank0
  3962  0698  02C0               	subwf	(_motor4),f
  3963  0699  0871               	movf	(1+(?___awdiv)),w
  3964  069A  3BC1               	subwfb	(_motor4+1),f
  3965  069B  2E9C               	goto	l5158
  3966                           	line	565
  3967                           	
  3968  069C                     l1742:	
  3969                           	line	567
  3970                           	
  3971  069C                     l5158:	
  3972                           ;main.c: 565: }
  3973                           ;main.c: 567: if (!((rollAux > zeroGyroRoll - 5) && (rollAux < zeroGyroRoll + 5)))
  3974  069C  0020               	movlb 0	; select bank0
  3975  069D  0832               	movf	(_zeroGyroRoll),w
  3976  069E  3EFB               	addlw	low(-5)
  3977  069F  00F9               	movwf	(??_calculate+0)+0
  3978  06A0  30FF               	movlw	high(-5)
  3979  06A1  3D33               	addwfc	(_zeroGyroRoll+1),w
  3980  06A2  00FA               	movwf	1+(??_calculate+0)+0
  3981  06A3  087A               	movf	1+(??_calculate+0)+0,w
  3982  06A4  3A80               	xorlw	80h
  3983  06A5  00FB               	movwf	(??_calculate+2)+0
  3984  06A6  0845               	movf	(calculate@rollAux+1),w
  3985  06A7  3A80               	xorlw	80h
  3986  06A8  027B               	subwf	(??_calculate+2)+0,w
  3987  06A9  1D03               	skipz
  3988  06AA  2EAD               	goto	u2755
  3989  06AB  0844               	movf	(calculate@rollAux),w
  3990  06AC  0279               	subwf	0+(??_calculate+0)+0,w
  3991  06AD                     u2755:
  3992                           
  3993  06AD  1803               	skipnc
  3994  06AE  2EB0               	goto	u2751
  3995  06AF  2EB1               	goto	u2750
  3996  06B0                     u2751:
  3997  06B0  2EC7               	goto	l5162
  3998  06B1                     u2750:
  3999                           	
  4000  06B1                     l5160:	
  4001  06B1  0020               	movlb 0	; select bank0
  4002  06B2  0832               	movf	(_zeroGyroRoll),w
  4003  06B3  3E05               	addlw	low(05h)
  4004  06B4  00F9               	movwf	(??_calculate+0)+0
  4005  06B5  3000               	movlw	high(05h)
  4006  06B6  3D33               	addwfc	(_zeroGyroRoll+1),w
  4007  06B7  00FA               	movwf	1+(??_calculate+0)+0
  4008  06B8  0845               	movf	(calculate@rollAux+1),w
  4009  06B9  3A80               	xorlw	80h
  4010  06BA  00FB               	movwf	(??_calculate+2)+0
  4011  06BB  087A               	movf	1+(??_calculate+0)+0,w
  4012  06BC  3A80               	xorlw	80h
  4013  06BD  027B               	subwf	(??_calculate+2)+0,w
  4014  06BE  1D03               	skipz
  4015  06BF  2EC2               	goto	u2765
  4016  06C0  0879               	movf	0+(??_calculate+0)+0,w
  4017  06C1  0244               	subwf	(calculate@rollAux),w
  4018  06C2                     u2765:
  4019                           
  4020  06C2  1C03               	skipc
  4021  06C3  2EC5               	goto	u2761
  4022  06C4  2EC6               	goto	u2760
  4023  06C5                     u2761:
  4024  06C5  2F2D               	goto	l5164
  4025  06C6                     u2760:
  4026  06C6  2EC7               	goto	l5162
  4027                           	
  4028  06C7                     l1747:	
  4029                           	line	569
  4030                           	
  4031  06C7                     l5162:	
  4032                           ;main.c: 568: {
  4033                           ;main.c: 569: motor1 -= ((rollAux - zeroGyroRoll)/8);
  4034  06C7  3008               	movlw	low(08h)
  4035  06C8  00F0               	movwf	(?___awdiv)
  4036  06C9  3000               	movlw	high(08h)
  4037  06CA  00F1               	movwf	((?___awdiv))+1
  4038  06CB  0020               	movlb 0	; select bank0
  4039  06CC  0932               	comf	(_zeroGyroRoll),w
  4040  06CD  00F9               	movwf	(??_calculate+0)+0
  4041  06CE  0933               	comf	(_zeroGyroRoll+1),w
  4042  06CF  00FA               	movwf	((??_calculate+0)+0+1)
  4043  06D0  0AF9               	incf	(??_calculate+0)+0,f
  4044  06D1  1903               	skipnz
  4045  06D2  0AFA               	incf	((??_calculate+0)+0+1),f
  4046  06D3  0844               	movf	(calculate@rollAux),w
  4047  06D4  0779               	addwf	0+(??_calculate+0)+0,w
  4048  06D5  00F2               	movwf	0+(?___awdiv)+02h
  4049  06D6  0845               	movf	(calculate@rollAux+1),w
  4050  06D7  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4051  06D8  00F3               	movwf	1+0+(?___awdiv)+02h
  4052  06D9  3184  240F  3185   	fcall	___awdiv
  4053  06DC  0870               	movf	(0+(?___awdiv)),w
  4054  06DD  0020               	movlb 0	; select bank0
  4055  06DE  02BA               	subwf	(_motor1),f
  4056  06DF  0871               	movf	(1+(?___awdiv)),w
  4057  06E0  3BBB               	subwfb	(_motor1+1),f
  4058                           	line	570
  4059                           ;main.c: 570: motor4 -= ((rollAux - zeroGyroRoll)/8);
  4060  06E1  3008               	movlw	low(08h)
  4061  06E2  00F0               	movwf	(?___awdiv)
  4062  06E3  3000               	movlw	high(08h)
  4063  06E4  00F1               	movwf	((?___awdiv))+1
  4064  06E5  0932               	comf	(_zeroGyroRoll),w
  4065  06E6  00F9               	movwf	(??_calculate+0)+0
  4066  06E7  0933               	comf	(_zeroGyroRoll+1),w
  4067  06E8  00FA               	movwf	((??_calculate+0)+0+1)
  4068  06E9  0AF9               	incf	(??_calculate+0)+0,f
  4069  06EA  1903               	skipnz
  4070  06EB  0AFA               	incf	((??_calculate+0)+0+1),f
  4071  06EC  0844               	movf	(calculate@rollAux),w
  4072  06ED  0779               	addwf	0+(??_calculate+0)+0,w
  4073  06EE  00F2               	movwf	0+(?___awdiv)+02h
  4074  06EF  0845               	movf	(calculate@rollAux+1),w
  4075  06F0  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4076  06F1  00F3               	movwf	1+0+(?___awdiv)+02h
  4077  06F2  3184  240F  3185   	fcall	___awdiv
  4078  06F5  0870               	movf	(0+(?___awdiv)),w
  4079  06F6  0020               	movlb 0	; select bank0
  4080  06F7  02C0               	subwf	(_motor4),f
  4081  06F8  0871               	movf	(1+(?___awdiv)),w
  4082  06F9  3BC1               	subwfb	(_motor4+1),f
  4083                           	line	571
  4084                           ;main.c: 571: motor2 += ((rollAux - zeroGyroRoll)/8);
  4085  06FA  3008               	movlw	low(08h)
  4086  06FB  00F0               	movwf	(?___awdiv)
  4087  06FC  3000               	movlw	high(08h)
  4088  06FD  00F1               	movwf	((?___awdiv))+1
  4089  06FE  0932               	comf	(_zeroGyroRoll),w
  4090  06FF  00F9               	movwf	(??_calculate+0)+0
  4091  0700  0933               	comf	(_zeroGyroRoll+1),w
  4092  0701  00FA               	movwf	((??_calculate+0)+0+1)
  4093  0702  0AF9               	incf	(??_calculate+0)+0,f
  4094  0703  1903               	skipnz
  4095  0704  0AFA               	incf	((??_calculate+0)+0+1),f
  4096  0705  0844               	movf	(calculate@rollAux),w
  4097  0706  0779               	addwf	0+(??_calculate+0)+0,w
  4098  0707  00F2               	movwf	0+(?___awdiv)+02h
  4099  0708  0845               	movf	(calculate@rollAux+1),w
  4100  0709  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4101  070A  00F3               	movwf	1+0+(?___awdiv)+02h
  4102  070B  3184  240F  3185   	fcall	___awdiv
  4103  070E  0870               	movf	(0+(?___awdiv)),w
  4104  070F  0020               	movlb 0	; select bank0
  4105  0710  07BC               	addwf	(_motor2),f
  4106  0711  0871               	movf	(1+(?___awdiv)),w
  4107  0712  3DBD               	addwfc	(_motor2+1),f
  4108                           	line	572
  4109                           ;main.c: 572: motor3 += ((rollAux - zeroGyroRoll)/8);
  4110  0713  3008               	movlw	low(08h)
  4111  0714  00F0               	movwf	(?___awdiv)
  4112  0715  3000               	movlw	high(08h)
  4113  0716  00F1               	movwf	((?___awdiv))+1
  4114  0717  0932               	comf	(_zeroGyroRoll),w
  4115  0718  00F9               	movwf	(??_calculate+0)+0
  4116  0719  0933               	comf	(_zeroGyroRoll+1),w
  4117  071A  00FA               	movwf	((??_calculate+0)+0+1)
  4118  071B  0AF9               	incf	(??_calculate+0)+0,f
  4119  071C  1903               	skipnz
  4120  071D  0AFA               	incf	((??_calculate+0)+0+1),f
  4121  071E  0844               	movf	(calculate@rollAux),w
  4122  071F  0779               	addwf	0+(??_calculate+0)+0,w
  4123  0720  00F2               	movwf	0+(?___awdiv)+02h
  4124  0721  0845               	movf	(calculate@rollAux+1),w
  4125  0722  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4126  0723  00F3               	movwf	1+0+(?___awdiv)+02h
  4127  0724  3184  240F  3185   	fcall	___awdiv
  4128  0727  0870               	movf	(0+(?___awdiv)),w
  4129  0728  0020               	movlb 0	; select bank0
  4130  0729  07BE               	addwf	(_motor3),f
  4131  072A  0871               	movf	(1+(?___awdiv)),w
  4132  072B  3DBF               	addwfc	(_motor3+1),f
  4133  072C  2F2D               	goto	l5164
  4134                           	line	573
  4135                           	
  4136  072D                     l1745:	
  4137                           	line	575
  4138                           	
  4139  072D                     l5164:	
  4140                           ;main.c: 573: }
  4141                           ;main.c: 575: if (!((yawAux > zeroGyroYaw - 5) && (yawAux < zeroGyroYaw + 5)))
  4142  072D  0020               	movlb 0	; select bank0
  4143  072E  0834               	movf	(_zeroGyroYaw),w
  4144  072F  3EFB               	addlw	low(-5)
  4145  0730  00F9               	movwf	(??_calculate+0)+0
  4146  0731  30FF               	movlw	high(-5)
  4147  0732  3D35               	addwfc	(_zeroGyroYaw+1),w
  4148  0733  00FA               	movwf	1+(??_calculate+0)+0
  4149  0734  087A               	movf	1+(??_calculate+0)+0,w
  4150  0735  3A80               	xorlw	80h
  4151  0736  00FB               	movwf	(??_calculate+2)+0
  4152  0737  0847               	movf	(calculate@yawAux+1),w
  4153  0738  3A80               	xorlw	80h
  4154  0739  027B               	subwf	(??_calculate+2)+0,w
  4155  073A  1D03               	skipz
  4156  073B  2F3E               	goto	u2775
  4157  073C  0846               	movf	(calculate@yawAux),w
  4158  073D  0279               	subwf	0+(??_calculate+0)+0,w
  4159  073E                     u2775:
  4160                           
  4161  073E  1803               	skipnc
  4162  073F  2F41               	goto	u2771
  4163  0740  2F42               	goto	u2770
  4164  0741                     u2771:
  4165  0741  2F58               	goto	l5168
  4166  0742                     u2770:
  4167                           	
  4168  0742                     l5166:	
  4169  0742  0020               	movlb 0	; select bank0
  4170  0743  0834               	movf	(_zeroGyroYaw),w
  4171  0744  3E05               	addlw	low(05h)
  4172  0745  00F9               	movwf	(??_calculate+0)+0
  4173  0746  3000               	movlw	high(05h)
  4174  0747  3D35               	addwfc	(_zeroGyroYaw+1),w
  4175  0748  00FA               	movwf	1+(??_calculate+0)+0
  4176  0749  0847               	movf	(calculate@yawAux+1),w
  4177  074A  3A80               	xorlw	80h
  4178  074B  00FB               	movwf	(??_calculate+2)+0
  4179  074C  087A               	movf	1+(??_calculate+0)+0,w
  4180  074D  3A80               	xorlw	80h
  4181  074E  027B               	subwf	(??_calculate+2)+0,w
  4182  074F  1D03               	skipz
  4183  0750  2F53               	goto	u2785
  4184  0751  0879               	movf	0+(??_calculate+0)+0,w
  4185  0752  0246               	subwf	(calculate@yawAux),w
  4186  0753                     u2785:
  4187                           
  4188  0753  1C03               	skipc
  4189  0754  2F56               	goto	u2781
  4190  0755  2F57               	goto	u2780
  4191  0756                     u2781:
  4192  0756  2FBE               	goto	l5170
  4193  0757                     u2780:
  4194  0757  2F58               	goto	l5168
  4195                           	
  4196  0758                     l1750:	
  4197                           	line	577
  4198                           	
  4199  0758                     l5168:	
  4200                           ;main.c: 576: {
  4201                           ;main.c: 577: motor1 += ((yawAux - zeroGyroYaw)/8);
  4202  0758  3008               	movlw	low(08h)
  4203  0759  00F0               	movwf	(?___awdiv)
  4204  075A  3000               	movlw	high(08h)
  4205  075B  00F1               	movwf	((?___awdiv))+1
  4206  075C  0020               	movlb 0	; select bank0
  4207  075D  0934               	comf	(_zeroGyroYaw),w
  4208  075E  00F9               	movwf	(??_calculate+0)+0
  4209  075F  0935               	comf	(_zeroGyroYaw+1),w
  4210  0760  00FA               	movwf	((??_calculate+0)+0+1)
  4211  0761  0AF9               	incf	(??_calculate+0)+0,f
  4212  0762  1903               	skipnz
  4213  0763  0AFA               	incf	((??_calculate+0)+0+1),f
  4214  0764  0846               	movf	(calculate@yawAux),w
  4215  0765  0779               	addwf	0+(??_calculate+0)+0,w
  4216  0766  00F2               	movwf	0+(?___awdiv)+02h
  4217  0767  0847               	movf	(calculate@yawAux+1),w
  4218  0768  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4219  0769  00F3               	movwf	1+0+(?___awdiv)+02h
  4220  076A  3184  240F  3185   	fcall	___awdiv
  4221  076D  0870               	movf	(0+(?___awdiv)),w
  4222  076E  0020               	movlb 0	; select bank0
  4223  076F  07BA               	addwf	(_motor1),f
  4224  0770  0871               	movf	(1+(?___awdiv)),w
  4225  0771  3DBB               	addwfc	(_motor1+1),f
  4226                           	line	578
  4227                           ;main.c: 578: motor3 += ((yawAux - zeroGyroYaw)/8);
  4228  0772  3008               	movlw	low(08h)
  4229  0773  00F0               	movwf	(?___awdiv)
  4230  0774  3000               	movlw	high(08h)
  4231  0775  00F1               	movwf	((?___awdiv))+1
  4232  0776  0934               	comf	(_zeroGyroYaw),w
  4233  0777  00F9               	movwf	(??_calculate+0)+0
  4234  0778  0935               	comf	(_zeroGyroYaw+1),w
  4235  0779  00FA               	movwf	((??_calculate+0)+0+1)
  4236  077A  0AF9               	incf	(??_calculate+0)+0,f
  4237  077B  1903               	skipnz
  4238  077C  0AFA               	incf	((??_calculate+0)+0+1),f
  4239  077D  0846               	movf	(calculate@yawAux),w
  4240  077E  0779               	addwf	0+(??_calculate+0)+0,w
  4241  077F  00F2               	movwf	0+(?___awdiv)+02h
  4242  0780  0847               	movf	(calculate@yawAux+1),w
  4243  0781  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4244  0782  00F3               	movwf	1+0+(?___awdiv)+02h
  4245  0783  3184  240F  3185   	fcall	___awdiv
  4246  0786  0870               	movf	(0+(?___awdiv)),w
  4247  0787  0020               	movlb 0	; select bank0
  4248  0788  07BE               	addwf	(_motor3),f
  4249  0789  0871               	movf	(1+(?___awdiv)),w
  4250  078A  3DBF               	addwfc	(_motor3+1),f
  4251                           	line	579
  4252                           ;main.c: 579: motor2 -= ((yawAux - zeroGyroYaw)/8);
  4253  078B  3008               	movlw	low(08h)
  4254  078C  00F0               	movwf	(?___awdiv)
  4255  078D  3000               	movlw	high(08h)
  4256  078E  00F1               	movwf	((?___awdiv))+1
  4257  078F  0934               	comf	(_zeroGyroYaw),w
  4258  0790  00F9               	movwf	(??_calculate+0)+0
  4259  0791  0935               	comf	(_zeroGyroYaw+1),w
  4260  0792  00FA               	movwf	((??_calculate+0)+0+1)
  4261  0793  0AF9               	incf	(??_calculate+0)+0,f
  4262  0794  1903               	skipnz
  4263  0795  0AFA               	incf	((??_calculate+0)+0+1),f
  4264  0796  0846               	movf	(calculate@yawAux),w
  4265  0797  0779               	addwf	0+(??_calculate+0)+0,w
  4266  0798  00F2               	movwf	0+(?___awdiv)+02h
  4267  0799  0847               	movf	(calculate@yawAux+1),w
  4268  079A  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4269  079B  00F3               	movwf	1+0+(?___awdiv)+02h
  4270  079C  3184  240F  3185   	fcall	___awdiv
  4271  079F  0870               	movf	(0+(?___awdiv)),w
  4272  07A0  0020               	movlb 0	; select bank0
  4273  07A1  02BC               	subwf	(_motor2),f
  4274  07A2  0871               	movf	(1+(?___awdiv)),w
  4275  07A3  3BBD               	subwfb	(_motor2+1),f
  4276                           	line	580
  4277                           ;main.c: 580: motor4 -= ((yawAux - zeroGyroYaw)/8);
  4278  07A4  3008               	movlw	low(08h)
  4279  07A5  00F0               	movwf	(?___awdiv)
  4280  07A6  3000               	movlw	high(08h)
  4281  07A7  00F1               	movwf	((?___awdiv))+1
  4282  07A8  0934               	comf	(_zeroGyroYaw),w
  4283  07A9  00F9               	movwf	(??_calculate+0)+0
  4284  07AA  0935               	comf	(_zeroGyroYaw+1),w
  4285  07AB  00FA               	movwf	((??_calculate+0)+0+1)
  4286  07AC  0AF9               	incf	(??_calculate+0)+0,f
  4287  07AD  1903               	skipnz
  4288  07AE  0AFA               	incf	((??_calculate+0)+0+1),f
  4289  07AF  0846               	movf	(calculate@yawAux),w
  4290  07B0  0779               	addwf	0+(??_calculate+0)+0,w
  4291  07B1  00F2               	movwf	0+(?___awdiv)+02h
  4292  07B2  0847               	movf	(calculate@yawAux+1),w
  4293  07B3  3D7A               	addwfc	1+(??_calculate+0)+0,w
  4294  07B4  00F3               	movwf	1+0+(?___awdiv)+02h
  4295  07B5  3184  240F  3185   	fcall	___awdiv
  4296  07B8  0870               	movf	(0+(?___awdiv)),w
  4297  07B9  0020               	movlb 0	; select bank0
  4298  07BA  02C0               	subwf	(_motor4),f
  4299  07BB  0871               	movf	(1+(?___awdiv)),w
  4300  07BC  3BC1               	subwfb	(_motor4+1),f
  4301  07BD  2FBE               	goto	l5170
  4302                           	line	581
  4303                           	
  4304  07BE                     l1748:	
  4305                           	line	584
  4306                           	
  4307  07BE                     l5170:	
  4308                           ;main.c: 581: }
  4309                           ;main.c: 584: motor1 = filter(motor1);
  4310  07BE  0020               	movlb 0	; select bank0
  4311  07BF  083B               	movf	(_motor1+1),w
  4312  07C0  01F1               	clrf	(?_filter+1)
  4313  07C1  07F1               	addwf	(?_filter+1)
  4314  07C2  083A               	movf	(_motor1),w
  4315  07C3  01F0               	clrf	(?_filter)
  4316  07C4  07F0               	addwf	(?_filter)
  4317                           
  4318  07C5  3181  2106  3185   	fcall	_filter
  4319  07C8  00F9               	movwf	(??_calculate+0)+0
  4320  07C9  01FA               	clrf	(??_calculate+0)+0+1
  4321  07CA  0879               	movf	0+(??_calculate+0)+0,w
  4322  07CB  0020               	movlb 0	; select bank0
  4323  07CC  00BA               	movwf	(_motor1)
  4324  07CD  087A               	movf	1+(??_calculate+0)+0,w
  4325  07CE  00BB               	movwf	(_motor1+1)
  4326                           	line	585
  4327                           	
  4328  07CF                     l5172:	
  4329                           ;main.c: 585: motor2 = filter(motor2);
  4330  07CF  083D               	movf	(_motor2+1),w
  4331  07D0  01F1               	clrf	(?_filter+1)
  4332  07D1  07F1               	addwf	(?_filter+1)
  4333  07D2  083C               	movf	(_motor2),w
  4334  07D3  01F0               	clrf	(?_filter)
  4335  07D4  07F0               	addwf	(?_filter)
  4336                           
  4337  07D5  3181  2106  3185   	fcall	_filter
  4338  07D8  00F9               	movwf	(??_calculate+0)+0
  4339  07D9  01FA               	clrf	(??_calculate+0)+0+1
  4340  07DA  0879               	movf	0+(??_calculate+0)+0,w
  4341  07DB  0020               	movlb 0	; select bank0
  4342  07DC  00BC               	movwf	(_motor2)
  4343  07DD  087A               	movf	1+(??_calculate+0)+0,w
  4344  07DE  00BD               	movwf	(_motor2+1)
  4345                           	line	586
  4346                           	
  4347  07DF                     l5174:	
  4348                           ;main.c: 586: motor3 = filter(motor3);
  4349  07DF  083F               	movf	(_motor3+1),w
  4350  07E0  01F1               	clrf	(?_filter+1)
  4351  07E1  07F1               	addwf	(?_filter+1)
  4352  07E2  083E               	movf	(_motor3),w
  4353  07E3  01F0               	clrf	(?_filter)
  4354  07E4  07F0               	addwf	(?_filter)
  4355                           
  4356  07E5  3181  2106  3185   	fcall	_filter
  4357  07E8  00F9               	movwf	(??_calculate+0)+0
  4358  07E9  01FA               	clrf	(??_calculate+0)+0+1
  4359  07EA  0879               	movf	0+(??_calculate+0)+0,w
  4360  07EB  0020               	movlb 0	; select bank0
  4361  07EC  00BE               	movwf	(_motor3)
  4362  07ED  087A               	movf	1+(??_calculate+0)+0,w
  4363  07EE  00BF               	movwf	(_motor3+1)
  4364                           	line	587
  4365                           	
  4366  07EF                     l5176:	
  4367                           ;main.c: 587: motor4 = filter(motor4);
  4368  07EF  0841               	movf	(_motor4+1),w
  4369  07F0  01F1               	clrf	(?_filter+1)
  4370  07F1  07F1               	addwf	(?_filter+1)
  4371  07F2  0840               	movf	(_motor4),w
  4372  07F3  01F0               	clrf	(?_filter)
  4373  07F4  07F0               	addwf	(?_filter)
  4374                           
  4375  07F5  3181  2106  3185   	fcall	_filter
  4376  07F8  00F9               	movwf	(??_calculate+0)+0
  4377  07F9  01FA               	clrf	(??_calculate+0)+0+1
  4378  07FA  0879               	movf	0+(??_calculate+0)+0,w
  4379  07FB  0020               	movlb 0	; select bank0
  4380  07FC  00C0               	movwf	(_motor4)
  4381  07FD  087A               	movf	1+(??_calculate+0)+0,w
  4382  07FE  00C1               	movwf	(_motor4+1)
  4383                           	line	588
  4384                           	
  4385  07FF                     l1751:	
  4386  07FF  0008               	return
  4387                           	opt stack 0
  4388                           GLOBAL	__end_of_calculate
  4389  0800                     	__end_of_calculate:
  4390 ;; =============== function _calculate ends ============
  4391                           
  4392                           	signat	_calculate,88
  4393                           	global	___awdiv
  4394                           psect	text434,local,class=CODE,delta=2
  4395                           global __ptext434
  4396  040F                     __ptext434:
  4397                           
  4398 ;; *************** function ___awdiv *****************
  4399 ;; Defined at:
  4400 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  divisor         2    0[COMMON] int 
  4403 ;;  dividend        2    2[COMMON] int 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  quotient        2    7[COMMON] int 
  4406 ;;  sign            1    6[COMMON] unsigned char 
  4407 ;;  counter         1    5[COMMON] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    0[COMMON] int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4420 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4421 ;;Total ram usage:        9 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_readChannel1
  4427 ;;		_readChannel2
  4428 ;;		_readChannel3
  4429 ;;		_readChannel4
  4430 ;;		_readGyroPitch
  4431 ;;		_readGyroRoll
  4432 ;;		_readGyroYaw
  4433 ;;		_calculate
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           psect	text434
  4437                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4438                           	line	5
  4439                           	global	__size_of___awdiv
  4440  006C                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4441                           	
  4442  040F                     ___awdiv:	
  4443                           	opt	stack 14
  4444                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4445                           	line	9
  4446                           	
  4447  040F                     l5096:	
  4448  040F  01F6               	clrf	(___awdiv@sign)
  4449                           	line	10
  4450  0410  1FF1               	btfss	(___awdiv@divisor+1),7
  4451  0411  2C13               	goto	u2631
  4452  0412  2C14               	goto	u2630
  4453  0413                     u2631:
  4454  0413  2C1D               	goto	l5100
  4455  0414                     u2630:
  4456                           	line	11
  4457                           	
  4458  0414                     l5098:	
  4459  0414  09F0               	comf	(___awdiv@divisor),f
  4460  0415  09F1               	comf	(___awdiv@divisor+1),f
  4461  0416  0AF0               	incf	(___awdiv@divisor),f
  4462  0417  1903               	skipnz
  4463  0418  0AF1               	incf	(___awdiv@divisor+1),f
  4464                           	line	12
  4465  0419  01F6               	clrf	(___awdiv@sign)
  4466  041A  1403               	bsf	status,0
  4467  041B  0DF6               	rlf	(___awdiv@sign),f
  4468  041C  2C1D               	goto	l5100
  4469                           	line	13
  4470                           	
  4471  041D                     l3318:	
  4472                           	line	14
  4473                           	
  4474  041D                     l5100:	
  4475  041D  1FF3               	btfss	(___awdiv@dividend+1),7
  4476  041E  2C20               	goto	u2641
  4477  041F  2C21               	goto	u2640
  4478  0420                     u2641:
  4479  0420  2C2B               	goto	l5106
  4480  0421                     u2640:
  4481                           	line	15
  4482                           	
  4483  0421                     l5102:	
  4484  0421  09F2               	comf	(___awdiv@dividend),f
  4485  0422  09F3               	comf	(___awdiv@dividend+1),f
  4486  0423  0AF2               	incf	(___awdiv@dividend),f
  4487  0424  1903               	skipnz
  4488  0425  0AF3               	incf	(___awdiv@dividend+1),f
  4489                           	line	16
  4490                           	
  4491  0426                     l5104:	
  4492  0426  3001               	movlw	(01h)
  4493  0427  00F4               	movwf	(??___awdiv+0)+0
  4494  0428  0874               	movf	(??___awdiv+0)+0,w
  4495  0429  06F6               	xorwf	(___awdiv@sign),f
  4496  042A  2C2B               	goto	l5106
  4497                           	line	17
  4498                           	
  4499  042B                     l3319:	
  4500                           	line	18
  4501                           	
  4502  042B                     l5106:	
  4503  042B  01F7               	clrf	(___awdiv@quotient)
  4504  042C  01F8               	clrf	(___awdiv@quotient+1)
  4505                           	line	19
  4506                           	
  4507  042D                     l5108:	
  4508  042D  0871               	movf	(___awdiv@divisor+1),w
  4509  042E  0470               	iorwf	(___awdiv@divisor),w
  4510  042F  1903               	skipnz
  4511  0430  2C32               	goto	u2651
  4512  0431  2C33               	goto	u2650
  4513  0432                     u2651:
  4514  0432  2C69               	goto	l5128
  4515  0433                     u2650:
  4516                           	line	20
  4517                           	
  4518  0433                     l5110:	
  4519  0433  01F5               	clrf	(___awdiv@counter)
  4520  0434  1403               	bsf	status,0
  4521  0435  0DF5               	rlf	(___awdiv@counter),f
  4522                           	line	21
  4523  0436  2C41               	goto	l5116
  4524                           	
  4525  0437                     l3322:	
  4526                           	line	22
  4527                           	
  4528  0437                     l5112:	
  4529  0437  3001               	movlw	01h
  4530                           	
  4531  0438                     u2665:
  4532  0438  35F0               	lslf	(___awdiv@divisor),f
  4533  0439  0DF1               	rlf	(___awdiv@divisor+1),f
  4534  043A  0B89               	decfsz	wreg,f
  4535  043B  2C38               	goto	u2665
  4536                           	line	23
  4537                           	
  4538  043C                     l5114:	
  4539  043C  3001               	movlw	(01h)
  4540  043D  00F4               	movwf	(??___awdiv+0)+0
  4541  043E  0874               	movf	(??___awdiv+0)+0,w
  4542  043F  07F5               	addwf	(___awdiv@counter),f
  4543  0440  2C41               	goto	l5116
  4544                           	line	24
  4545                           	
  4546  0441                     l3321:	
  4547                           	line	21
  4548                           	
  4549  0441                     l5116:	
  4550  0441  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  4551  0442  2C44               	goto	u2671
  4552  0443  2C45               	goto	u2670
  4553  0444                     u2671:
  4554  0444  2C37               	goto	l5112
  4555  0445                     u2670:
  4556  0445  2C47               	goto	l5118
  4557                           	
  4558  0446                     l3323:	
  4559  0446  2C47               	goto	l5118
  4560                           	line	25
  4561                           	
  4562  0447                     l3324:	
  4563                           	line	26
  4564                           	
  4565  0447                     l5118:	
  4566  0447  3001               	movlw	01h
  4567                           	
  4568  0448                     u2685:
  4569  0448  35F7               	lslf	(___awdiv@quotient),f
  4570  0449  0DF8               	rlf	(___awdiv@quotient+1),f
  4571  044A  0B89               	decfsz	wreg,f
  4572  044B  2C48               	goto	u2685
  4573                           	line	27
  4574  044C  0871               	movf	(___awdiv@divisor+1),w
  4575  044D  0273               	subwf	(___awdiv@dividend+1),w
  4576  044E  1D03               	skipz
  4577  044F  2C52               	goto	u2695
  4578  0450  0870               	movf	(___awdiv@divisor),w
  4579  0451  0272               	subwf	(___awdiv@dividend),w
  4580  0452                     u2695:
  4581  0452  1C03               	skipc
  4582  0453  2C55               	goto	u2691
  4583  0454  2C56               	goto	u2690
  4584  0455                     u2691:
  4585  0455  2C5C               	goto	l5124
  4586  0456                     u2690:
  4587                           	line	28
  4588                           	
  4589  0456                     l5120:	
  4590  0456  0870               	movf	(___awdiv@divisor),w
  4591  0457  02F2               	subwf	(___awdiv@dividend),f
  4592  0458  0871               	movf	(___awdiv@divisor+1),w
  4593  0459  3BF3               	subwfb	(___awdiv@dividend+1),f
  4594                           	line	29
  4595                           	
  4596  045A                     l5122:	
  4597  045A  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4598  045B  2C5C               	goto	l5124
  4599                           	line	30
  4600                           	
  4601  045C                     l3325:	
  4602                           	line	31
  4603                           	
  4604  045C                     l5124:	
  4605  045C  3001               	movlw	01h
  4606                           	
  4607  045D                     u2705:
  4608  045D  36F1               	lsrf	(___awdiv@divisor+1),f
  4609  045E  0CF0               	rrf	(___awdiv@divisor),f
  4610  045F  0B89               	decfsz	wreg,f
  4611  0460  2C5D               	goto	u2705
  4612                           	line	32
  4613                           	
  4614  0461                     l5126:	
  4615  0461  3001               	movlw	low(01h)
  4616  0462  02F5               	subwf	(___awdiv@counter),f
  4617  0463  1D03               	btfss	status,2
  4618  0464  2C66               	goto	u2711
  4619  0465  2C67               	goto	u2710
  4620  0466                     u2711:
  4621  0466  2C47               	goto	l5118
  4622  0467                     u2710:
  4623  0467  2C69               	goto	l5128
  4624                           	
  4625  0468                     l3326:	
  4626  0468  2C69               	goto	l5128
  4627                           	line	33
  4628                           	
  4629  0469                     l3320:	
  4630                           	line	34
  4631                           	
  4632  0469                     l5128:	
  4633  0469  0876               	movf	(___awdiv@sign),w
  4634  046A  1D03               	skipz
  4635  046B  2C6D               	goto	u2720
  4636  046C  2C73               	goto	l5132
  4637  046D                     u2720:
  4638                           	line	35
  4639                           	
  4640  046D                     l5130:	
  4641  046D  09F7               	comf	(___awdiv@quotient),f
  4642  046E  09F8               	comf	(___awdiv@quotient+1),f
  4643  046F  0AF7               	incf	(___awdiv@quotient),f
  4644  0470  1903               	skipnz
  4645  0471  0AF8               	incf	(___awdiv@quotient+1),f
  4646  0472  2C73               	goto	l5132
  4647                           	
  4648  0473                     l3327:	
  4649                           	line	36
  4650                           	
  4651  0473                     l5132:	
  4652  0473  0878               	movf	(___awdiv@quotient+1),w
  4653  0474  01F1               	clrf	(?___awdiv+1)
  4654  0475  07F1               	addwf	(?___awdiv+1)
  4655  0476  0877               	movf	(___awdiv@quotient),w
  4656  0477  01F0               	clrf	(?___awdiv)
  4657  0478  07F0               	addwf	(?___awdiv)
  4658                           
  4659  0479  2C7A               	goto	l3328
  4660                           	
  4661  047A                     l5134:	
  4662                           	line	37
  4663                           	
  4664  047A                     l3328:	
  4665  047A  0008               	return
  4666                           	opt stack 0
  4667                           GLOBAL	__end_of___awdiv
  4668  047B                     	__end_of___awdiv:
  4669 ;; =============== function ___awdiv ends ============
  4670                           
  4671                           	signat	___awdiv,8314
  4672                           	global	_filter
  4673                           psect	text435,local,class=CODE,delta=2
  4674                           global __ptext435
  4675  0106                     __ptext435:
  4676                           
  4677 ;; *************** function _filter *****************
  4678 ;; Defined at:
  4679 ;;		line 290 in file "D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  duration        2    0[COMMON] int 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;		None
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      unsigned char 
  4686 ;; Registers used:
  4687 ;;		wreg, btemp+1
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4697 ;;Total ram usage:        2 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_calculate
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           psect	text435
  4706                           	file	"D:\Usuários\Eduardo\Documentos\PIC\Leitura do controle - PIC16F1829\main.c"
  4707                           	line	290
  4708                           	global	__size_of_filter
  4709  0027                     	__size_of_filter	equ	__end_of_filter-_filter
  4710                           	
  4711  0106                     _filter:	
  4712                           	opt	stack 14
  4713                           ; Regs used in _filter: [wreg+btemp+1]
  4714                           	line	291
  4715                           	
  4716  0106                     l5086:	
  4717                           ;main.c: 291: if (duration < 1)
  4718  0106  0871               	movf	(filter@duration+1),w
  4719  0107  3A80               	xorlw	80h
  4720  0108  00FF               	movwf	btemp+1
  4721  0109  3080               	movlw	(high(01h))^80h
  4722  010A  027F               	subwf	btemp+1,w
  4723  010B  1D03               	skipz
  4724  010C  290F               	goto	u2615
  4725  010D  3001               	movlw	low(01h)
  4726  010E  0270               	subwf	(filter@duration),w
  4727  010F                     u2615:
  4728                           
  4729  010F  1803               	skipnc
  4730  0110  2912               	goto	u2611
  4731  0111  2913               	goto	u2610
  4732  0112                     u2611:
  4733  0112  2918               	goto	l5090
  4734  0113                     u2610:
  4735                           	line	293
  4736                           	
  4737  0113                     l5088:	
  4738                           ;main.c: 292: {
  4739                           ;main.c: 293: duration = 1;
  4740  0113  3001               	movlw	low(01h)
  4741  0114  00F0               	movwf	(filter@duration)
  4742  0115  3000               	movlw	high(01h)
  4743  0116  00F1               	movwf	((filter@duration))+1
  4744                           	line	294
  4745                           ;main.c: 294: }
  4746  0117  292A               	goto	l1683
  4747                           	line	295
  4748                           	
  4749  0118                     l1682:	
  4750                           	
  4751  0118                     l5090:	
  4752                           ;main.c: 295: else if (duration > 251)
  4753  0118  0871               	movf	(filter@duration+1),w
  4754  0119  3A80               	xorlw	80h
  4755  011A  00FF               	movwf	btemp+1
  4756  011B  3080               	movlw	(high(0FCh))^80h
  4757  011C  027F               	subwf	btemp+1,w
  4758  011D  1D03               	skipz
  4759  011E  2921               	goto	u2625
  4760  011F  30FC               	movlw	low(0FCh)
  4761  0120  0270               	subwf	(filter@duration),w
  4762  0121                     u2625:
  4763                           
  4764  0121  1C03               	skipc
  4765  0122  2924               	goto	u2621
  4766  0123  2925               	goto	u2620
  4767  0124                     u2621:
  4768  0124  292A               	goto	l1683
  4769  0125                     u2620:
  4770                           	line	297
  4771                           	
  4772  0125                     l5092:	
  4773                           ;main.c: 296: {
  4774                           ;main.c: 297: duration = 251;
  4775  0125  30FB               	movlw	low(0FBh)
  4776  0126  00F0               	movwf	(filter@duration)
  4777  0127  3000               	movlw	high(0FBh)
  4778  0128  00F1               	movwf	((filter@duration))+1
  4779  0129  292A               	goto	l1683
  4780                           	line	298
  4781                           	
  4782  012A                     l1684:	
  4783                           	line	300
  4784                           	
  4785  012A                     l1683:	
  4786                           ;main.c: 298: }
  4787                           ;main.c: 300: return duration;
  4788  012A  0870               	movf	(filter@duration),w
  4789  012B  292C               	goto	l1685
  4790                           	
  4791  012C                     l5094:	
  4792                           	line	301
  4793                           	
  4794  012C                     l1685:	
  4795  012C  0008               	return
  4796                           	opt stack 0
  4797                           GLOBAL	__end_of_filter
  4798  012D                     	__end_of_filter:
  4799 ;; =============== function _filter ends ============
  4800                           
  4801                           	signat	_filter,4217
  4802                           psect	text436,local,class=CODE,delta=2
  4803                           global __ptext436
  4804  0000                     __ptext436:
  4805                           	global	btemp
  4806  007E                     	btemp set 07Eh
  4807                           
  4808                           	DABS	1,126,2	;btemp
  4809                           	global	wtemp0
  4810  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Sep 01 15:05:43 2013

         ?_calibrateGyros 0070                        _RD 0CA8                        _WR 0CA9  
            ___awdiv@sign 0076                       _GIE 005F                       _RC1 0071  
                     _RC2 0072                       _RB4 006C                       _RC3 0073  
                     _RB5 006D                       _RC4 0074                       _RB6 006E  
                     _RC5 0075                       _RB7 006F                       _PR2 001B  
                     _yaw 002C                       wreg 0009                      l1610 051C  
                    l1611 0522                      l1620 0131                      l1700 00E5  
                    l1612 0525                      l1621 0136                      l1701 00E5  
                    l1613 056B                      l1630 016C                      l1622 0137  
                    l1702 00E9                      l1614 056C                      l1631 0182  
                    l1623 0137                      l1703 00EC                      l1615 056D  
                    l3320 0469                      l1712 034B                      l1720 0289  
                    l1624 013B                      l1640 0193                      l1616 056D  
                    l3321 0441                      l1713 034B                      l1721 0289  
                    l1625 013D                      l1641 0193                      l1609 051C  
                    l3322 0437                      l1714 0350                      l1722 028E  
                    l1730 02ED                      l1626 013D                      l1642 0197  
                    l1634 0187                      l1650 01DD                      l1706 00FE  
                    l3323 0446                      l1715 0374                      l1723 02B2  
                    l1731 0311                      l1627 0141                      l1619 0131  
                    l1643 01B0                      l1635 0187                      l1651 01E2  
                    l1707 00FE                      l3324 0447                      l5100 041D  
                    l1716 03A5                      l1724 02E3                      l1732 0342  
                    l1628 015A                      l1644 01C3                      l1636 018C  
                    l1660 0218                      l1652 01E3                      l1708 0102  
                    l3325 045C                      l1717 039D                      l1725 02DB  
                    l1733 033A                      l1629 016D                      l1645 01C2  
                    l1637 018D                      l1661 022E                      l1653 01E3  
                    l1709 0105                      l3326 0468                      l5110 0433  
                    l5102 0421                      l3318 041D                      l1750 0758  
                    l1742 069C                      l1646 01D8                      l1638 018D  
                    l1654 01E7                      l1670 023F                      l3327 0473  
                    l3319 042B                      l1751 07FF                      l1639 0191  
                    l1655 01E9                      l1671 023F                      l3328 047A  
                    l5120 0456                      l5112 0437                      l5104 0426  
                    l1744 0636                      l5200 03A5                      l1728 02E8  
                    l1656 01E9                      l1672 0243                      l1664 0233  
                    l1736 040E                      l1745 072D                      l1729 02E8  
                    l1657 01ED                      l1649 01DD                      l1673 025C  
                    l1665 0233                      l1682 0118                      l5130 046D  
                    l5122 045A                      l5114 043C                      l5106 042B  
                    l5210 02B2                      l5202 0285                      l1658 0206  
                    l1674 026F                      l1666 0238                      l1690 00B7  
                    l1683 012A                      l1747 06C7                      l1659 0219  
                    l1675 026E                      l1667 0239                      l1691 00BA  
                    l1739 04EF                      l1684 012A                      l5132 0473  
                    l5124 045C                      l5116 0441                      l5108 042D  
                    l1748 07BE                      l5140 0590                      l5220 02E3  
                    l5212 02B6                      l5204 028E                      l1676 0284  
                    l5300 024A                      l1668 0239                      l1685 012C  
                    l1669 023D                      l5134 047A                      l5126 0461  
                    l5118 0447                      l5150 05F9                      l5142 059E  
                    l5214 02C3                      l5206 02AA                      l5230 0311  
                    l5222 02E4                      l5310 0282                      l5302 0257  
                    l1694 00CC                      l1695 00CC                      l5128 0469  
                    l5160 06B1                      l5152 060C                      l5144 05AC  
                    l5136 056F                      l5216 02D8                      l5208 02B1  
                    l5240 0342                      l5232 0315                      l5224 02ED  
                    l5312 0284                      l5304 025C                      l1688 00B3  
                    l5320 00A8                      l1696 00D0                      l5400 03FB  
                    l1689 00B3                      l1697 00D3                      l5090 0118  
                    l5170 07BE                      l5162 06C7                      l5154 0620  
                    l5146 05D3                      l5138 0582                      l5218 02DB  
                    l5234 0322                      l5226 0309                      l5250 015A  
                    l5242 012D                      l5306 0269                      l5322 00B0  
                    l5314 00A3                      l5330 00C1                      l5402 03FF  
                    l5410 04F5                      l5092 0125                      l5172 07CF  
                    l5164 072D                      l5156 0636                      l5148 05E6  
                    l5180 0346                      l5236 0337                      l5228 0310  
                    l5252 0167                      l5244 0142                      l5260 0183  
                    l5308 026F                      l5316 00A6                      l5332 00C9  
                    l5324 00BC                      l5340 00DA                      l5404 0404  
                    l5420 0517                      l5412 04F7                      l5094 012C  
                    l5086 0106                      l5174 07DF                      l5166 0742  
                    l5158 069C                      l5190 0374                      l5182 0349  
                    l5238 033A                      l5254 016D                      l5246 0148  
                    l5270 01BD                      l5262 0198                      l5318 00A7  
                    l5326 00BF                      l5342 00E2                      l5334 00D5  
                    l5350 00F3                      l5406 0409                      l5430 0530  
                    l5422 0518                      l5414 0504                      l5088 0113  
                    l5096 040F                      l5176 07EF                      l5168 0758  
                    l5192 0378                      l5184 0350                      l5256 0180  
                    l5248 0155                      l5272 01C3                      l5264 019E  
                    l5280 01EE                      l5328 00C0                      l5336 00D8  
                    l5352 00FB                      l5344 00EE                      l5360 04A5  
                    l5432 053E                      l5424 051A                      l5416 0513  
                    l5408 04F0                      l5098 0414                      l5194 0385  
                    l5186 036C                      l5178 0343                      l5258 0182  
                    l5274 01D6                      l5266 01AB                      l5290 0219  
                    l5282 01F4                      l5338 00D9                      l5346 00F1  
                    l5370 04E3                      l5362 04B3                      l5354 047B  
                    l5434 054C                      l5426 0522                      l5418 0515  
                    l5196 039A                      l5188 0373                      l5276 01D8  
                    l5268 01B0                      l5292 022C                      l5284 0201  
                    l5348 00F2                      l5372 04E9                      l5364 04C1  
                    l5356 0489                      l5380 03B6                      l5436 055A  
                    l5428 052B                      l5198 039D                      l5294 022E  
                    l5286 0206                      l5278 01D9                      l5366 04CF  
                    l5358 0497                      l5390 03D5                      l5382 03BB  
                    l5374 03A6                      l5438 0567                      l5288 0213  
                    l5296 022F                      l5368 04DD                      l5392 03E1  
                    l5384 03C7                      l5376 03AD                      l5298 0244  
                    l5394 03E5                      l5386 03CB                      l5378 03B1  
                    l5396 03EA                      l5388 03D0                      l5398 03EF  
                    _ADON 04E8                      u3000 01BD                      u3001 01BC  
                    u3010 01E1                      u3011 01E0                      u3020 01E7  
                    u3100 0269                      u3005 01B9                      u3021 01E6  
                    u3101 0268                      u3030 01ED                      u3110 00B7  
                    u3031 01EC                      u3111 00B6                      u3040 0201  
                    u3120 00D0                      u3041 0200                      u3105 0265  
                    u3121 00CF                      u3050 0213                      u3130 00E9  
                    u3051 0212                      u3131 00E8                      u3060 0237  
                    u3140 0102                      u3045 01FD                      u3061 0236  
                    u3141 0101                      u3070 023D                      u3150 0521  
                    u3055 020F                      u3071 023C                      u3207 00C5  
                    u3151 0520                      u3080 0243                      u3160 0567  
                    u3081 0242                      u3217 00AC                      u3161 0566  
                    u2610 0113                      u3090 0257                      u2611 0112  
                    u3091 0256                      u2620 0125                      u2621 0124  
                    u3165 0563                      u2710 0467                      u2630 0414  
                    u2615 010F                      u2711 0466                      u2631 0413  
                    u3095 0253                      u2720 046D                      u2640 0421  
                    u2625 0121                      u2705 045D                      u2641 0420  
                    u3177 0482                      u2650 0433                      u2730 0620  
                    u2810 036C                      u2651 0432                      u2731 061F  
                    u2811 036B                      u3187 00F7                      u2740 0635  
                    u2820 0385                      u2900 0322                      u2741 0634  
                    u2821 0384                      u2805 0359                      u2901 0321  
                    u3197 00DE                      u2670 0445                      u2750 06B1  
                    u2830 028D                      u2910 0135                      u2671 0444  
                    u2751 06B0                      u2735 061C                      u2831 028C  
                    u2911 0134                      u2760 06C6                      u2920 013B  
                    u2665 0438                      u2761 06C5                      u2745 0631  
                    u2825 0381                      u2905 031E                      u2921 013A  
                    u2690 0456                      u2770 0742                      u2850 02AA  
                    u2930 0141                      u2691 0455                      u2771 0741  
                    u2755 06AD                      u2851 02A9                      u2931 0140  
                    u2780 0757                      u2860 02C3                      u2940 0155  
                    u2685 0448                      u2781 0756                      u2765 06C2  
                    u2861 02C2                      u2845 0297                      u2941 0154  
                    u2790 034F                      u2870 02EC                      u2950 0167  
                    u2695 0452                      u2775 073E                      u2791 034E  
                    u2871 02EB                      u2951 0166                      u2960 018B  
                    u2785 0753                      u2865 02BF                      u2945 0151  
                    u2961 018A                      u2890 0309                      u2970 0191  
                    u2891 0308                      u2955 0163                      u2971 0190  
                    u2980 0197                      u2885 02F6                      u2981 0196  
                    u2990 01AB                      u2991 01AA                      u2995 01A7  
                    _TMR1 0016                      _TMR2 001A                      _WREN 0CAA  
             _zeroGyroYaw 0034                      _main 04F0                      _roll 0028  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    indf0 0000                      fsr1l 0006                      btemp 007E  
                    start 0002    readGyroYaw@calibration 0079              ?_readGyroYaw 0079  
                   ?_main 0070           __end_of___awdiv 047B                     _EEADR 0191  
                   _CARRY 0018           ___awdiv@divisor 0070                     _T1CON 0018  
                   _T2CON 001C                     _IOCBN 0395                     _IOCBP 0394  
         ___awdiv@counter 0075                     _TRISA 008C                     _TRISB 008D  
                   _TRISC 008E              _zeroGyroRoll 0032           __end_of_setESC1 00BB  
         __end_of_setESC2 00D4           __end_of_setESC3 00ED           __end_of_setESC4 0106  
                   _pitch 0024           setESC1@duration 0072           setESC2@duration 0072  
                   status 0003                     wtemp0 007E           setESC3@duration 0072  
         setESC4@duration 0072             ?_readChannel1 0070             ?_readChannel2 0070  
           ?_readChannel3 0070             ?_readChannel4 0070              __end_of_main 056F  
          _gyroReadNumber 0022                    ??_main 007D             ?_readGyroRoll 0079  
                  _ADCON0 009D                    _ADCON1 009E         readGyroPitch@test 0042  
                  _ADRESH 009C                    _ADRESL 009B                    _EEDATA 0193  
                  _EECON1 0195                    _EECON2 0196          ___awdiv@dividend 0072  
                  _ANSELA 018C                    _ANSELB 018D                    _ANSELC 018E  
                  _HFIOFR 04D4    __size_of_readGyroPitch 0063                    _INTCON 000B  
                  _FVRCON 0117                    _OSCCON 0099                    _TMR2IE 0489  
                  _TMR2IF 0089                    _TMR1ON 00C0                    _TMR2ON 00E2  
           _zeroGyroPitch 0030            ??_readChannel1 0079            ??_readChannel2 0079  
          ??_readChannel3 0079            ??_readChannel4 0079                 ??___awdiv 0074  
                  _filter 0106          ___awdiv@quotient 0077                    _motor1 003A  
                  _motor2 003C                    _motor3 003E                    _motor4 0040  
                  _yawAux 002E                    clrloop 007E                 ??_setESC1 0070  
               ??_setESC2 0070                 ??_setESC3 0070                 ??_setESC4 0070  
          ??_readGyroRoll 007B          ??_calibrateGyros 0046            __pcstackCOMMON 0070  
            __pidataBANK0 0083        __size_of_calculate 0291             _readGyroPitch 0343  
    __size_of_readGyroYaw 005F                __pbssBANK0 0020                __pmaintext 04F0  
          ?_readGyroPitch 0079                   ?_filter 0070      readChannel1@duration 0079  
    readChannel2@duration 0079      __end_of_readChannel1 0183      __end_of_readChannel2 01D9  
    __end_of_readChannel3 022F      __end_of_readChannel4 0285      readChannel3@duration 0079  
       __end_of_calculate 0800      readChannel4@duration 0079      readGyroPitch@voltage 0044  
              _readAndSet 03A6      __end_of_readGyroRoll 02E4                   ___awdiv 040F  
      readGyroYaw@voltage 0042           __size_of_filter 0027                   _fl_exit 0020  
 readGyroRoll@calibration 0079                   _setESC1 00A2                   _setESC2 00BB  
                 _setESC3 00D4                   _setESC4 00ED                   _rollAux 002A  
    end_of_initialization 009F                   init_ram 0077             _inputControl1 0036  
           _inputControl2 0037             _inputControl3 0038             _inputControl4 0039  
        calculate@rollAux 0044                   initloop 0078           ??_readGyroPitch 007B  
          filter@duration 0070               ?_readAndSet 0070            __end_of_filter 012D  
   __size_of_readChannel1 0056     __size_of_readChannel2 0056     __size_of_readChannel3 0056  
   __size_of_readChannel4 0056       start_initialization 008B     __size_of_readGyroRoll 005F  
            _readChannel1 012D              _readChannel2 0183              _readChannel3 01D9  
            _readChannel4 022F               __pdataBANK0 003A                  ??_filter 0072  
           ??_readGyroYaw 007B             __pcstackBANK0 0042       __size_of_readAndSet 0069  
            _readGyroRoll 0285                 _calculate 056F                  ?___awdiv 0070  
               __ptext420 03A6                 __ptext421 047B                 __ptext430 02E4  
               __ptext422 00ED                 __ptext431 0285                 __ptext423 00D4  
               __ptext432 0343                 __ptext424 00BB                 __ptext433 056F  
               __ptext425 00A2                 __ptext434 040F                 __ptext426 022F  
               __ptext435 0106                 __ptext427 01D9                 __ptext436 0000  
               __ptext428 0183                 __ptext429 012D   __size_of_calibrateGyros 0075  
                ?_setESC1 0070                  ?_setESC2 0070                  ?_setESC3 0070  
                ?_setESC4 0070       __end_of_readGyroYaw 0343                ?_calculate 0070  
         calculate@yawAux 0046                  _GO_nDONE 04E9              ??_readAndSet 007B  
     readGyroRoll@voltage 0042     __end_of_readGyroPitch 03A6          __size_of___awdiv 006C  
             _readGyroYaw 02E4          __size_of_setESC1 0019          __size_of_setESC2 0019  
        __size_of_setESC3 0019          __size_of_setESC4 0019        __end_of_readAndSet 040F  
             ??_calculate 0079             __size_of_main 007F  readGyroPitch@calibration 0079  
                clear_ram 007D                  _pitchAux 0026            _calibrateGyros 047B  
       calculate@pitchAux 0042    __end_of_calibrateGyros 04F0                _OPTION_REG 0095  
